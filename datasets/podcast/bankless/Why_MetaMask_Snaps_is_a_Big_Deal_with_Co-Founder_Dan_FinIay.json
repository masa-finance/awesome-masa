[
    {
        "speaker": "A",
        "text": "Hey, bankless nation, here I am from permissionless two on why Snaps is a big deal. Metamask Snaps just launched at permissionless, and I think you should know a little bit about it. This is a solo podcast. It's just me. David is off partying at some events. I think right now I'm about to join him. But before we do, I want to give you this episode on Metamask Snapsh. This is like a browser extension only for your Metamask crypto wallet, and I think it unlocks a lot of potential. We're going to talk about why it's a big deal, what you can do on it today, how you can glow up your metamask wallet. And we have Dan Finley, who is the co founder of Metamask. He's been in the space forever as the original Ethereum og wallet, and to see how Metamask has developed is pretty exciting. You can see the passion for which he has as we go through this episode. So, guys, we're going to get right to the episode, but first, we disclose Metamask is a sponsor of Bankless. But, of course, that's not why we did the episode. We did this episode because this is an awesome product that you need to hear about. We are long term investors, not journalists. We don't do paid content. There's a link to all bankless disclosures in the show notes at all times. All right, guys, let's get right to the episode with Dan. But before we do, we want to thank the sponsors that made it possible, including Bagless nation. I am super excited to introduce you to Dan Finley. He's the creator of Metamask, and he's got something special for us today. Dan, how you doing, man?"
    },
    {
        "speaker": "B",
        "text": "Oh, I'm euphoric. I'm walking on a cloud. And then, of course, I'm excited to get back to work and do even more tomorrow."
    },
    {
        "speaker": "A",
        "text": "You know what? You look like you are literally in paradise right now, because the scenery behind you is absolutely phenomenal. So I am for. For listeners who can't see the visuals today, I've got this black background, looks very somber. I found this little cloister at the permissionless conference to record this, whereas Daniel somehow has a microphone, like, outside, and he's got, like, beautiful trees and shrubbery and green foliage behind him. How are you managing that?"
    },
    {
        "speaker": "B",
        "text": "Yeah, well, I just plugged it into the tree, and I knew that I was coming on bankless. And you guys are always the best about kind of flexing your green. Like other crypto podcasts, they flex their green. And then you guys flex your greenhouse. And so I thought I'd come on."
    },
    {
        "speaker": "A",
        "text": "And flex mine, especially my podcast co host, he will be very proud of this shrubbery behind you. And I'm sure you can name every single plant, but we're not here to talk about plants. We're here to talk about metamask snaps. Okay. What are metamask snaps, Dan? Why are they important? Why are they exciting?"
    },
    {
        "speaker": "B",
        "text": "Well, they're kind of like plants in your wallet. So you know how, I'm sorry, I did not prepare this metaphor, but let's, let's ride it a little."
    },
    {
        "speaker": "A",
        "text": "No, let's go with it. Yeah."
    },
    {
        "speaker": "B",
        "text": "So you know how your wallet right now, it's kind of just like a set of features you get from the store and you hope the team made what you want? It's like getting a box of processed food at the grocery store. And when it does bad and you have a lot of microplastics in your blood or whatever, there's a lot of fishing, whatever, you're like, well, why don't the devs fix this? And what you might like to do is know your ingredients and kind of curate yourself a little bit more of a home cooked meal, maybe have a friend over and have them help you cook something nice out of your fridge. And snaps are kind of like that. We're taking the wallet experience, and we're making it a collaborative development platform. And so there's a lot of parts of the wallet that we've wanted to improve in the past that are really hard to do in a centralized manner. Just as a single dev team, there's just like, there are, for example, countless protocols. Every time somebody writes a new contract, it's arguably a new protocol. And so representing it faithfully to the user is actually a hard problem. And then there's how to keep a person safe or how to interact with new runtimes and stuff like that. And I think what we started realizing is the best people to build an interface to a new protocol are the creators of that protocol. And so we created this system that basically lets external developers build plugins for metamask and add support for their various gifts and ship them right to our users. So today, for a lot of our existing users, that looks like you can install some transaction safety providers. And now when youre confirming a transaction, you can have additional third parties helping you stay safe. And youre all opting into these, right? Some of them may phone home and you get to decide whether they get to or not. Some of them are doing simulations. Some of them are using AI analysis, some of them are using on chain registries and court systems like Clarus. And basically, I think any metamask user should install a handful of those today from the groups that if they recognize any and trust any, and then there's a whole bunch of new blockchain protocols that we were able to support now. So there's like supporting like 21 new blockchains or something just as of yesterday. And it's only going to be more as we make it easier to publish to the platform."
    },
    {
        "speaker": "A",
        "text": "This is a big deal and a very exciting launch. I know this has been a long time incoming, which I think we should discuss. Dan, how long you've been working on this and all of the effort that's gone into it. But before we do, I want to give folks another mental model. So we have the plants mental model, of course, and we also have the mental model I think that a lot of listeners will be familiar with, which is you have a browser, and then you might use extensions on top of that browser to extend what the browser does. Those extensions are permissionless, like any third party can basically develop it. Indeed, metamask is one of those extensions inside of a browser right now. This is essentially bringing extensions, the ability of third parties to launch extensions into metamask. And that's what a snap is. So you as a metamask user today with your wallet, you have the ability to like glow up your wallet. You can like go to the metamask snaps directory and you can browse through. I think there's like, you guys are launching with over 30 snaps, I believe, and we'll get into some of the ones that maybe you're most excited about. Um, and you can, you can glow up your wallet with these kind of more custom, more niche type experiences, maybe some power tools. Snaps can basically be anything. Is that a decent mental model? Like browsers have extensions? Well, Metamask has snaps."
    },
    {
        "speaker": "B",
        "text": "Yeah, that's basically spot on. There's two caveats that I'll disclose to bring us to ground. The platform today, as launched is 34 partner synapse. It's not full on permissionless open yet, and we're actually working on what the designs for the final crack it open permissionless protocol is, and probably a mixture of dao and web of trust, something like that. We'll be reaching out and probably expanding the conversation wider soon. And also, they can't do anything. What they really are is they're a place we can do stuff, and then we get to open APIs to extend different parts of the wallet. Today, there's really three major ways that we're letting snapsh expand the wallet. So one is that transaction security thing I described. Another is basically adding integrations, so the ability to sign and show confirmations to the user and add additional APIs to the user's wallet. So now when you're logging into a site, the site can interact with one of your snaps. It's not just the API that metamask shipped with. Then the last one is notifications, and we've got a snap from the push protocol. So any dap now that wants to be able to get a hold of you can ask for permission to, and they can ask you to add the push snap to participate in that."
    },
    {
        "speaker": "A",
        "text": "Well, very cool. And that's why, Henson, in your intro, I think you said you forked today, but you're back in the office tomorrow continuing the work to build this out. But let's get right to the goods right now, because I know there are a lot of metamask listeners, a lot of metamask users that listen to banklist, I should say. And so right now, what can listeners do? Of course, this isn't all the snaps that will ever be. This is in beta version, but there's already like over 30 different snaps that people can use and download. So I am showing on my screen now at snaps metamask IO all of the different, uh, snaps that one can activate. So tell me how this works. Okay, um, I'm seeing a directory here. I'm seeing a button with categories like interoperability, notification transactions, insight. I have the ability to search. There's all of these various snaps. Uh, as a user, where do I start? Well, like, what do you recommend, Dan?"
    },
    {
        "speaker": "B",
        "text": "Yeah, so the system is designed so you can get these contextually. So, you know, metamask was always kind of built to enable dapps. So that doesnt really change here. If a dapp out there wants to interact with bitcoin or now what, aptos or algorand or whatever, theres many new protocols were added here. They can now ask you to install this app. They can say, hey, do you want to participate in that protocol? If so, add thats your wallet. And there you go. Now youre good to interact with both all of your Ethereum accounts and assets and all the accounts and assets you might have on this new protocol. But in terms of this directory, thats why I mentioned the transaction insight stuff. I think thats the one thats really great for using this page for because if you go to that filter and you uncheck the compatibility and the notifications. You just look at the transaction security ones. Those are all ones that you could just install right off here today. And each one might just keep you safe from phishing later next time Vitaliks Twitter gets hacked. The first one of these organizations to flag it could be the one that keeps you safe. I think of security. There's a lot of ways of modeling security, but one way you could take this one as is it's like the Spiderweb model. You've got a lot of strands and any one of them getting agitated could rattle you and lock you up, keeping you safe from making a bad decision. So we're really treating this as a community effort and were eager to see how these different strategies and new companies are able to thrive in this kind of environment."
    },
    {
        "speaker": "A",
        "text": "Okay so ive got this set up. Im looking in the directory just for the transaction types of snaps. I see this one called tenderly preview for instance. Im just picking one out of this list here theres tons here. Theres safe root, theres web, three securities wallet guard. If I click this, then I go to the tenderly transaction preview. I can click a button that says add to metamask. Tell me what this one specifically does, this tenderly transaction preview adding to metamask. I'm seeing the description here, it says preview transactions before sending them on chain. This is some much needed functionality. I've used a separate extension in the past called FHiR to do some of this, where I get a metamask transaction and fhir looks at it and is like, this is what it really means to um, is tender, is, is this tenderly snap doing something similar to that? It's basically like before I sign a transaction, it's showing me some information about it. Maybe it's putting some protection on top of my wallet. So if it's a known phishing type of account. Am I, am I, yeah. What is tenderloinly?"
    },
    {
        "speaker": "B",
        "text": "Yeah, you're exactly in the right wheelhouse. Tenderly and fire are both performing transaction simulation. So they're, they're looking at the transaction you're, you're considering and they're helping, they're trying to estimate what the results of it are going to be. Now, I like to stress this strategy is not perfect and thats part of why weve spent more time making sure we could accept many strategies and putting it all in on this. But its really powerful because many interactions it can catch and itll say, hey look, this is going to make you lose all these tokens and you may not have meant to do that, and that might be obviously dangerous to you. The catch is, if these become extremely popular, there are ways that fishers can make little trapdoor contracts that look like they're not going to do anything that they can."
    },
    {
        "speaker": "A",
        "text": "So it's not perfect. This is a cat and mouse game. The fishers are going to adapt, but it's better than what we have, isn't it?"
    },
    {
        "speaker": "B",
        "text": "Yeah, exactly. Yeah, yeah. And especially when you got a stack of these, right, this is in security sometimes would call this the swiss cheese model, right? If you can, each one of these may have holes in it, but when you start stacking them up, the probability of one thing fitting through all the holes get smaller and smaller. And so hopefully, and we're going to be watching the analytics closely. Keeping people safer is one of our kind of key goals right now. And so I'm really, really eager to see how much any one of these can keep people safe. And it'll be incredible if we start getting data on what strategies are actually the most effective. And yeah, I think this is going to be a really valuable tool, uh, in combating phishing and, and also inviting new strategies to the table. I don't think that every possible strategy here is accounting for it all. Um, you know, uh, my co founder, Kumavis and I yesterday were talking about the need to have like a web of trust component that's user rooted. Um, you know, there's no certificate chain solutions here, as far as I understand. There's a multiple simulation, multiple AI, and Kleros is the, the most daoish one. So that's a, that's a fun one for sure. So yeah. Looking forward to seeing how these all work in tandem."
    },
    {
        "speaker": "A",
        "text": "I think the cool thing about this model is, and it sort of reminds me about Ethereum's, like, of Ethereum's layer two strategy is rather than Ethereum having to develop everything on the execution layer, now we've got dozens of layer twos and soon hundreds of different app chains that are doing their own development and pushing the ecosystem forward. So rather than just one group of really smart EF researchers, you get the entire, you open this up to the entire Internet. What is that quote? The smartest people don't work at your company. It's like there's so many smart people all around the world and now they all get to help us extend this particular wallet and make users safer and improve the user experience for them. I think this is why this is so important, is because this is a key step to doing the thing we're always trying to do, which is get crypto to a billion people. Right. This is, this is a building block towards that in kind of the wallet experience realm. I want to go to another category here. So this is interoperability. Okay, so tell me about that. And you were mentioning some other chains as well. So has metamask on multi chain."
    },
    {
        "speaker": "B",
        "text": "Yeah, I think. I think with this release, you can basically say we're multi chain. These. These snaps aren't enhancing the wallet in all the ways that Ethereum is able to. Right now. You're not going to see these show up in the main asset list. For example, each one of these protocols has its own management DAP. So that's. We bit that as some scope we narrowed out, but we are working on this cool extensible UI model. It's really critical to us that when we make our UI extensible, that it's done really safely. Obviously, security is a first thought in everything we do, but it does mean that you install one of these, you'll be able to go to a Dap that wants to interact with that protocol, and it'll be able to propose transactions to you, and you'll be able to confirm them or deny them with as much comprehensibility as that Snap is able to give to you."
    },
    {
        "speaker": "A",
        "text": "So I should also get more specific here, maybe because I said this is taking metamask, multi chain, but there's different definitions of multi chain, because Metamask has already been multi chain from the perspective of other evms that it supports. Of course, it's not just Ethereum mainnet anymore. It's. For a long time, we've had polygon layer two support. There's all sorts of different networks. But here I see a snap a for aptos. So that's the first one listed for the Aptos wallet. If I click that and I click add to metamask, what type of snap am I going to get out of this? How does this glow up my metamask? Can I now use metamask on Aptos? Is that literally what this means?"
    },
    {
        "speaker": "B",
        "text": "Yeah, yeah, those. The sites on Aptos are going to need to have integrations, but I'm not sure how that's going so far. But this is developed by the rise wallet team, which is a big Aptos wallet team. And so my understanding is that they're working with the Dapps that they're compatible with to make sure that this works with all the dapps that their wallet works with."
    },
    {
        "speaker": "A",
        "text": "That is very cool. So we've got sui, we've got tezos, we've got. What else am I missing here in terms of other starknet shapeshift over there."
    },
    {
        "speaker": "B",
        "text": "Has actually five different blockchains rolled into it. It's all the bitcoin based chains. So it's got your dogecoin and wait."
    },
    {
        "speaker": "A",
        "text": "The bitcoiners can use metamask now?"
    },
    {
        "speaker": "B",
        "text": "Yeah, I mean, they don't have smart contracts, but they can use metamask, adapt, could propose a transaction to them. And I, every once in a while I hear people argue that you can write good smart contracts in bitcoin and maybe they just needed a metamask like experience to do it. Who knows?"
    },
    {
        "speaker": "A",
        "text": "There you go. You're welcome. Bitcoiners, we love you. Okay, so how about this one? Notifications, that's another category here of snaps. We see push wallet or push push."
    },
    {
        "speaker": "B",
        "text": "Protocol is a peer to peer push notification system, and it's consent based. It basically just adds an API to your metamask. So now dapps can ask for permission to get your attention later on. And so if they do, then they can ping you in your metamask later via the push protocol. And yeah, so it can get you some notifications. One of the examples I saw of that so far is one of the transaction insight snaps from wallet guard. Actually, it'll let you know if any contracts that you've issued allowances to are now known as vulnerable. And so they'll like encourage you to issue revocations. So that's one example of a push notification keeping you safer. And obviously you could use it for like renewal notifications or bid offers or the other one, there is a chat system using it. So yeah, it's each one of these. The fun part is, of course, we design it with a kind of set of use cases in mind, and then people kind of abuse it and do fun and interesting things. And long term, I suspect that's where some of the best stuff will happen. But yeah, even the stuff we've got here is pretty cool."
    },
    {
        "speaker": "A",
        "text": "Dan, was this a sneaky way to ten x or 100 x your dev team? Because I feel like now you can do a lot more development of features that people have always been asking for and you've always wanted and just haven't had the time to prioritize."
    },
    {
        "speaker": "B",
        "text": "Yeah, yeah, this is 100% like you said it earlier. You said, hey, this is the Ethereum model. And it's like, yeah, in fact, I almost felt like because Ethereum is so open ended, there almost wasnt another way. Yeah, we can keep making stablecoin super easy onboarding wallets or something. And thats a niche, and thats interesting. But if you want to explore the versatility of this blockchain, the open endedness is what makes it interesting. And so to make a wallet that can keep up with that, it has to be as flexible. And so v one isn't permissionless. That is a goal. We're announcing it at permissionless because that is absolutely what we're. But to keep up with the permissionless protocol, I think you have to be permissionless. And so that's absolutely where our sites are aimed."
    },
    {
        "speaker": "A",
        "text": "Okay, can we get Sci-Fi for a second? So this is just the baby round, right? The snaps that we're seeing today are just like very early snaps before the dev imagination has kind of gone wild. And I know that you don't have all of the ideas, of course, but I bet you have some Sci-Fi ideas as you've been thinking about this over the years, of how snaps can be used. Tell me about snaps from the future. What sort of things could be possible with snaps plus metamask?"
    },
    {
        "speaker": "B",
        "text": "Oh, yeah. I mean, you're 100% right. There's no way we would have been working on this for four to five years if we didn't have some really exciting visions of where it was headed long term. And, okay, so first, when you're onboarding someone, you want to be able to onboard them with everything they need to get started in. Ideally, like, one link. So that might include a recommended chain, it might include a subsidy for gas. It might include permission to do something on your behalf. Maybe it's an offer to buy something or even a money stream that you're donating to."
    },
    {
        "speaker": "A",
        "text": "Right."
    },
    {
        "speaker": "B",
        "text": "Like, so you should be able to onboard someone as simple as a link. They shouldn't have to think about snaps. That should be like, as part of the onboarding experience. It just assumes that when you, when you are getting into a wallet, it is sculpting itself to your preferences and your shape and the context. You receive your invitation and is relevant to that. You know, every single dap that refers someone to metamask is choosing it. And so there's actually like a line of trust there. You know, the person's trusting their first introducer with a lot, their whole definition of crypto, basically. And from there, that means you can start experiences really, really low friction. You can start where maybe there's no connect with wallet for a little while. Maybe you build up what you have in a site, and then once you need to be able to move that authority around. You can pop it into a metamask, move it around, sign into other things. And one of the critical things, longer term, that snaps are going to be able to do is they're going to have permissions between each other. So right now, they can talk to each other, but they can't do things like really, really graceful sharing of the permissions that they invent, and in particular, being able to share those, not just within the wallet, but eventually beyond the wallet. So eventually, you're logging in. You're not just using a token allowance. You might be granting some of your API access, or some of your gas credit, or your room key or whatever, and all of this stuff should be manageable with the same kind of smart contracting infrastructure that you're used to, the Sci-Fi version. It basically disappears. You basically don't see the wallet anymore, but you're able to make extremely scalable, very secure contracts that interoperate. And do we know what those protocols are going to be this very secure, hopefully privacy preserving, highly scalable, readable? I don't think we're there yet, but with snaps, we're going to. I think the road to that end goal is a period of fast experimentation and iteration and exploring what's possible. And I think that's the phase that we're starting to open into. And as we start getting more permissionless, I think that that experimentation phase can accelerate and we'll hopefully learn a whole lot really fast as a community and. And build the smart contracting systems that actually enable slaying Moloch, for lack of a better word, like actually addressing coordination problems and building more effective solutions to all of our needs and abilities?"
    },
    {
        "speaker": "A",
        "text": "That's always been the vision. Let me ask you, too, Dan, does this work as well on the browser extension on mobile, as well as it does on the browser extension?"
    },
    {
        "speaker": "B",
        "text": "It's not on mobile yet, I'm very sad to say, very soon."
    },
    {
        "speaker": "A",
        "text": "Soon TM."
    },
    {
        "speaker": "B",
        "text": "Soon TM, yes, 100%. It is in progress. We've been laying the groundwork for it, but we didn't want to hold up the initial release for consistency. We really think that getting this in the hands of people to start experimenting sooner is a really important part of the process. And it's taken us long enough to get here that we're just excited to be getting some of it to prod, start the iteration process, and start growing from here."
    },
    {
        "speaker": "A",
        "text": "Do you know how many chrome extensions there are? I'd be curious about that."
    },
    {
        "speaker": "B",
        "text": "A lot."
    },
    {
        "speaker": "A",
        "text": "Number of chrome. Okay. Do you anticipate a similar number of snaps in the future, we're going to grow it that big if we do it really right."
    },
    {
        "speaker": "B",
        "text": "Because the thing is, so earlier, I think you misspoke. You said chrome extensions are permissionless. They're actually not. Every chrome extension goes through a. I didn't misspeak."
    },
    {
        "speaker": "A",
        "text": "I didn't know you're schooling me, Dan. Yeah, I didn't know this."
    },
    {
        "speaker": "B",
        "text": "So I'm very sorry to share with you that actually, Chrome Store is a lot like the iOS app store or something, and there have been moments where we had an update we wanted to push, sometimes for security reasons, and it can get clogged up in a review pipeline. And don't get me wrong, it's this tension. It's like, oh, well, the review is keeping you safe, right? Well, anyways, also, yeah, even getting snaps to the chrome store has been a journey. While we were developing this, Chrome changed the web extension protocol. They did this thing called Manifest V three. So they started trying to clamp down what extensions could do, right as we were trying to, like, grow up out of it and become this weird hydra extension. And so we had to work pretty closely with Chrome. And fortunately, their extension team was a bunch of very kind, cool people that just really wanted to understand that things were safe. And so once we kind of talked them through the security model and stuff, we were able to get the all valuable blessing. Like, we hope we don't need it forever, but dang, are we glad we have it for now."
    },
    {
        "speaker": "A",
        "text": "Good, because I will say this totally publicly. I would quit. I will quit chrome. I will quit any browser that disables the ability of, like, wallets, crypto wallets, like metabass to actually exist. But I actually didn't know that this process was so gatekeeped. So is that. I know we're in beta mode right now for snaps, and so there's still kind of still permissioned. But you said that you were going to one up the chrome extension store in snaps and make them permissionless. Did I hear that correct? Are snaps actually going to be permissionless?"
    },
    {
        "speaker": "B",
        "text": "That is the goal. Now. They actually are permissionless in our developer builds called metamask flask. So for developers who want to be total mad scientists and install some code that they understand and have vetted themselves, they can go to metamask IO flask that says in mad scientists flask, or maybe a flask in your trench coat, because you're crazy. You must be sipping from that place. You'll be doing this if you don't know what you're doing. But so that's permissionless, and that's in the chrome store today, so devs can do that. But in terms of how permissionless can we get it? While keeping end users is a really critical question, and I think we're going to try to push it to its very limits."
    },
    {
        "speaker": "A",
        "text": "We talked about the snaps that are available today. We've talked about kind of the journey to get here. One question about that journey I have though, Dan, is you said you've been, and I remember from our very first episodes and even before episodes when I was kind of early in crypto and obviously like an early metamask user, you've had this concept of snaps. It's been in the oven for a while. So tell me about the journey, because it's been a multi year journey, so I don't want to ask the question of like, what took so long, but a little bit like, it's incredible we're here. And also, why did it take so long? And I'm guessing partially that might lead into another question about security in those provisions, but tell me about the journey here. So why was it a multi year journey to get to snaps?"
    },
    {
        "speaker": "B",
        "text": "Yeah, yeah, it's a completely fair question that any user of metamask deserves to ask and wonder. And so, yeah, let's get into it. Yeah, we had the vision, I think the very first inklings of it, that the wallet should probably be extensible around five years ago. And I think the first year it sounded crazy. And by the end of the year we had built a prototype, though, and it was exciting and we were like, oh, it can work. We started to believe it could work. And then it took probably another year of passively trying to build it in parallel to all of our other stuff before, uh, one of our developers, uh, Eric Marks, basically stood up and said, uh, im not going to make this a part time project anymore. Im, Im going full time. Im starting the snaps team. And that was like a totally pivotal moment where it was like, it was actually the first time wed had a team dedicated to a feature. We were, you know, im a first time founder, so like, I dont blame me, I get hit a little bit, but was sensitive and scary and uh, and you know, early on we, we really were kind of just hiring the people we trusted absolutely, like over, you know, with our absolute souls. We didn't have a model for scaling the team in a secure way otherwise, and so we were, we were kind of pushed with this, like, how do we build faster while keeping safe? And um, you know, we, we were kind of puzzling with that for a while, and there was this kind of moment where we had this epiphany, this. So I'm rewinding to like how we originally came up with the idea. Like, it was a lot like the Moloch observation, where it's like, how do you minimize the risk you're taking when you are definitely taking a risk, right? Like how do you grow the code base but not get owned? And how do you like use a new contract and not get owned? How do you interact with the stranger and not get owned? And it started like realizing these problems started looking consistent and similar. And one of the key observations was that if you want to solve the problem of letting people take safe risks with strangers, with computers, then it really helped if they were able to take it with the software that allowed them to take those risks. Also, it's like the tree all grows from these common roots. And so you need to have basically a kernel at the middle of the whole thing that lets you make clean, decisive choices about the risks you're going to take. And that required a confinement engine. So we basically built an operating system kernel and built it into metamask. It's got two layers of confinement. We use an iframe, and then we also use a compartment using JavaScript language level features based on some work by agoric. So using those technologies, we're able to basically have a runtime where we can confine third party code and let it selectively talk to each other. What's interesting about that is it turns out not a lot of operating systems have those properties. The idea of permissionless software where the individual components can selectively talk to each other, but with tight grained permissions, that's actually not a thing. IOS has a pretty good permission system, but you cant get permissions between the components and it sure isnt permissionless. So were forging this space where were effectively trying to build a distributed operating system kernel thats specialized at decentralized protocols and protocols built on cryptography. So yeah, basically the scope blew. Its not that the scope grew, its that we realized that the core problem we were wrestling with was a actually hard, big problem that needed to be solved well, and it wasnt a matter of like cranking out some sequel tables or writing some rails or something. It wasnt something that was trivially done previously. So we did some serious work and we wrote a lot of serious grants. And yeah, its still not permissionless, but the key I think here is that metamask now has an extensible kernel. So we are running third party code at runtime, and it's tightly confined, and it's arguably tighter confined than the software that you're installing on your desktop. If you double click an attachment off an email, they could own your entire computer. And a lot of people get owned that way today. But when you install a snap, it's going to have the permissions that are listed there. And so we've got a really tight handle on the what things that you add to your wallet can do. And, yeah, I think doing that well, we kept learning the things that were required to do it well. And while we tried to keep the scope as small as possible, we wanted to keep the users very safe, because, unfortunately, we have a handful of them, and we care about them, so we wanted to keep them extra safe."
    },
    {
        "speaker": "A",
        "text": "You guys definitely have a handful of them. And I guess, as I'm hearing you describe this, it almost strikes me that it's almost like someone describing what the firmware level of a hardware wallet looks like. It's that almost deep in the weeds design. When I hear somebody from the ledger team describe how they're isolating private keys, and that's the big difference between what you guys are doing and what crypto is doing versus what web two and web one was doing with just a browser, is that we have private keys. It's almost like a nuclear reactor that we have to contain. And if it gets out there's a nuclear leak, it's bad news for everybody. And so the protect the private keys at all costs has to be priority one, two, and three for metamask, as you do this. And so I want to ask the question. You kind of described the architecture and such, but for people who've been listening up to this point and have been raising their hand and saying, third parties, permissionless, but what about security? What about security? Can we answer very explicitly? So what are the. If I install a snap, should I be worried? Is there anything I'm losing with respect to security? Am I opening up more surface area for this? Or how does metamask think about security with respect to snaps? And are there any additional risks here?"
    },
    {
        "speaker": "B",
        "text": "Yeah, I think that if you want to minimize your security, I think there's almost, like, two ways you can look at it. I was having these insights around the same time as Moloch was getting written, so I sometimes use that language to frame it. And I think Moloch is one way. The Moloch Dao style is, well, put a delay before any decision and make sure a lot of eyes are on it. And then the other way, if you say, well, what if we need instantaneous decision making, though? Then I think that the answer is there is actually no risk, no reward, basically. And so the best you can do is minimize the risk. So there's basically two major dimensions that we're keeping users safe with snaps today. The first one is the audit layer. So all the snaps are actually audited, and we're probably going to incrementally decentralize that auditing process until it's either something like a web of trust or a dao. Or we crack the user consent problem and just throw the doors wide open."
    },
    {
        "speaker": "A",
        "text": "And by the way, Dan, who's doing the auditing today? Is that all metamask your team?"
    },
    {
        "speaker": "B",
        "text": "Basically, we've got a collection of trusted auditing groups that we've worked with and whose opinions we trust, so we're delegating an audit to them. So there's an audit tier, and then secondly, each of the snaps do get a list of permissions. And so that's where the risk, when I say there's no risk, no reward, that's where it is. Associates of ours have audited these, but at the end of the day, if you want something to do your signing for your cosmos or your tezos, it's going to need the keys for those accounts. Now, those are the only keys that those snaps are getting. And so if you compare this to dropping your metamask seed phrase into a cosmos wallet, it is strictly safer if it's a wallet made by the same team. The worst thing that can happen here is that they misuse those cosmos keys. So we're at least segmenting by that for the most sensitive snaps are basically the signer snaps, the ones that are deriving keys from your seed phrase. Long term, I do think that basically every wallet and every protocol should be using transient keys that stay in secure enclave storage. But deriving from your secret recovery phrase today is a wonderful compatibility layer that many protocols actually require. There are a lot of zero knowledge protocols where we may love abstraction on l one and L two and every EVM, but there are privacy protocols. You're still going to need keys. And so having a way to make sure and say to your developer, well, these keys are backed up by the user as far as we've been able to get them to. So that's the risk. The risk is there is a third party that you're trusting with that protocol, and when you install a snap, you'll see the list and we make it salient when you're granting key signing permission to a snap. We try to really rub the user's nose in it, but that's not the only level of safety. There's also a vetting layer that we hope to disintermediate as much as possible, but is still present."
    },
    {
        "speaker": "A",
        "text": "So it's very explicit when a specific snap requires key signing, when you're giving over key signing permission, and I've got to imagine that's not going to be the majority. So for something like the transaction snaps that we were looking at, where it does a simulation of your transaction and warns you if there's something bad that doesn't require any key signing. If I go in and I install one of those snaps, what are the risks with that?"
    },
    {
        "speaker": "B",
        "text": "Yeah. Okay, so let me just flip that on you because I think that a good security system should be obvious. It should feel right. So like we, we call this our principle of appropriate boundaries. So let me ask you, a signing snap that's doing simulation, what do you think it should get? Like, what's the least we can give it?"
    },
    {
        "speaker": "A",
        "text": "Um, definitely not my private keys. Yeah, agree. Um, I don't know. I, I don't know that I would be, I, I wouldn't want it to have my transaction data or my other metadata inside of metamasks. Right. So I would and want it to know necessarily, my holdings, my tokens, those sorts of things. But maybe I'd be willing to do that for some specific things. Like, like I like to."
    },
    {
        "speaker": "B",
        "text": "If it's going to simulate the results of a transaction that you're proposing to."
    },
    {
        "speaker": "A",
        "text": "See it gets all that."
    },
    {
        "speaker": "B",
        "text": "It kind of needs that it gets all that. I mean, well, tell me, is there a way to do it without that? Um, I mean, I bet you we get where we swap out your address and then we say guess with this. But, you know, now they're like trying to simulate a bored ape transfer from an account that doesn't have a bored ape, thats not going to be very."
    },
    {
        "speaker": "A",
        "text": "Safe on that specific point. I guess this is our problem of not having privacy on chain privacy entirely. If I have an ens name associated with my account and people might know that RSA eth this is my address. I suppose thats one thing Im maybe giving up in some of these transactions, but I dont know what else there is to really share with with a snap. So back to you."
    },
    {
        "speaker": "B",
        "text": "Okay, yeah, yeah. So the one other thing that a lot of these use is they need to network because a lot of them, they can't run locally. Right. And I think that's a good, it's a, it's a salient, it's nice that it's a permission because it's noticeable when they don't need it. You're like, oh, you don't, you don't even need network. Like, hell, yeah, of course."
    },
    {
        "speaker": "A",
        "text": "What do you mean by network? What do you mean by network, Dan?"
    },
    {
        "speaker": "B",
        "text": "Like, okay, they're going to get, okay, we know that they need to see your transaction to be able to simulate it. Right? But does that mean they have to phone home or can they just do it within the snap? If they only can see the transaction data and they don't ask for a network, that means you are actually being kept private. It's going into a box and then it's coming back out to your UI and it can't do anything else about it. One of the things I would like, I think it's actually necessary if we want permissionless computing is at some level, people have to be reading what they're signing. You know, it's like, and, you know, metamask has kind of always been like that. Um, now there's a lot of things that you can't really understand when you're, when you're signing it. And that's like a war that we're, you know, we need to fight and win. But, you know, snaps are, they're a readable layer of this kind of interaction. So when you install a snap, our, our hope is you can make sense of it. We're putting it in plain language. And if you're installing a transaction security provider, like, hopefully the permissions that you see are the ones that make sense for it. And if they don't, hit reject."
    },
    {
        "speaker": "A",
        "text": "Okay, this is very cool. So can I ask you a question about the broader wallet landscape before we go here, Dan? So this is the question. You brought up the idea of account abstraction earlier. There is this trend, this interest across Ethereum in count abstraction, smart contract wallets, that sort of thing. Something that I feel like the industry has been trying to do for a while is get rid of the seed phrase. What's your take on all of that? Does Metamask have a play there, or is metamask like, you know what? We've got our product, we've got snaps. There's going to be a seed phrase. Are you getting into kind of the smart contract wallet type space, or is that not an area that metamask plans to play in?"
    },
    {
        "speaker": "B",
        "text": "So for a long time, we had the posture that look, were going to make a plugin system for the accounts. And so somebody else is going to make the best contract account probably right, because were busy all focusing our time making this secure extensible kernel and stuff. The odds that we also make the best contract account seemed really low. But also we had really specific ideas of what we wanted one to do. And I think with the advent of, as I like to call 4337 because it's like Leet. Thank you. So with the advent of Eap feet, I think the bar like the level of difficulty to try out a new one has really fallen. So we are kind of taking a dual headed approach now. So snaps is going to let you install any kind of account abstraction wallet. And I will be thrilled if any single one of them gives users the experience that they need to be safe. But also, yeah, we're doing some experiments that we think could solve some user experience issues that we see in the ecosystem today."
    },
    {
        "speaker": "A",
        "text": "Wait, so snaps plus account abstraction wallet, how would that work?"
    },
    {
        "speaker": "B",
        "text": "Yeah, well, so we already talked about how there's a couple snaps APIs for things like new protocols and new notifications and transaction insights. We're going to have a third API, and it's already in flask. Oh, well, there's a version of it in flask that lets you add new signers. So an obvious simple snap that can be written in flask is like a view only account. It's like, oh my God, it's so embarrassing. We haven't shipped view only accounts, but our extension system supports them. But then what we're going to do beyond that is we're going to have some special API hooks for account abstraction wallets because they have some special features. Specifically, their gas payment is open ended and modular. And so there will also be snaps that can register paymasters. And so now if you're using metamask and you're using your gnosisafe, you might choose between one of five ways of paying. You might choose to pay with a token or something else. And we've got some ideas for how to hopefully allow basically assignment of the transaction cost to where it makes the most sense. And, you know, stop bothering people with that because I think the, you know, get away from the seed phrase, that's a good one, we should do that. Um, but also get away from the needs to have ether to, to interact. Like if somebody's willing to spot you, I think that should be good enough. And I think that that could really flip the whole. I think there's a little bit of a perception that web three is a Ponzi scheme that comes from the fact that you need to get some crypto before you can do anything. So you can be inviting someone saying, I think you have value to contribute. I think you're a great artist. You should make an NFT. And step one is put some money in this box. Right?"
    },
    {
        "speaker": "A",
        "text": "Gotcha."
    },
    {
        "speaker": "B",
        "text": "I think I've heard this one. Yeah."
    },
    {
        "speaker": "A",
        "text": "Yeah."
    },
    {
        "speaker": "B",
        "text": "Everybody's heard that one a million times before. We shouldn't be blaming people for being skeptical by the standard crypto pitch today. And I think a kind of abstraction gives us opportunities to kind of rethink basically every step in the current onboarding journey."
    },
    {
        "speaker": "A",
        "text": "So I want to come full circle here to the very beginning of our episode where we talked about, like, why are we talking about this? Why. Why does this matter? Right? Matters on one layer, because there's a bunch of users, and they should know about snaps. Now, you can glow up your metamask wallet. I think we covered that. But the big win here, and I know you are a starry eye dreamer, because you've been here since the very beginning on ethereum, like a lot of us, you see the potential here. I also know now, Dan, especially, you are a settler, my friend. You've been building here for the long term, and really, and I want to give a shout out to you because you've really stayed to see this vision through and are continuing to stay, and it's really cool to see. Anyway, you're a settler, and you're a starry eyed dreamer. Is this going to be the wallet experience that gets us to a billion users? I know there's other pieces of the puzzle here, but I feel like we're starting to solve the transactions per second thing and the cheap transactions thing. We're well on our way to doing that. We got some work to do on privacy. I feel like one area that we need to really solve is good, seamless, safe user experience for all of our mainstream Normie friends in order to bring them on. Is this the wallet that does it, or is there some future thing that we still need?"
    },
    {
        "speaker": "B",
        "text": "I think that it's got a solid shot at playing a part. That's what I'll say about it. I think all this stuff, like wallets that are embedded in a site, and so you don't even have to know about it until you want to back it up. I think that's the way I absolutely want to see this pattern of, like, make a user connect their wallet and sign a confirmation before they do anything. That's, like, the worst experience in the world. I think we can make all of that invisible, and then we can be as lazy as possible about making people ever think about anything crypto, let alone like backing up secret keys or something. But when it comes to that point, when you're ready to start holding some decentralized stuff and putting it in your own hands and moving it between devices and friends, and maybe even building a life around it, yeah, I think it's going to be great to have a wallet that makes opting into whatever protocol is meaningful to you, even if it's one you made up this morning. I think that's a really valuable thing to have."
    },
    {
        "speaker": "A",
        "text": "Well, thank you to you and the team who's built this out. And we'll include a link in the show notes, but maybe I'll shout it out. Snaps metamask IO is where you can start to glow up your metamask wallet. And thanks for sharing this today, Dan. One last thing before I let you go. This is kind of a selfish ask because I want a lot more snaps that do really cool things, and I want to ten x our safety, our security, everything about the crypto wallet experience. So can you do a shout out to the devs right now? And what can they do to get started? Because we want devs to start building some really cool snaps so that us very selfish users get nice features. So what's your pitch to the devs? Why should they come build a snap and what do they do?"
    },
    {
        "speaker": "B",
        "text": "Well, first I'd point out that not every dev has to make a snap. The snaps are expanding the wallet's API surface, so the wallet is getting richer and richer. You can start looking at just the snap menu as it is a huge growing set of features that you can now start engaging with users on. So if you want to have a bitcoin component to your Dap, you can do that now. And if you know, if there's some interchange stuff you want to onboard people from, that's an option. But if you have a component of your app that really benefits from kind of staying with the user and enabling them to use it on other sites too, especially this can include things like making transactions more readable for some protocol that you use. If you've got that kind of idea, then yes, docs Metamask IO we've put a lot of care into making great docs. The APIs are really simple. They should actually look pretty familiar to people who've written dapps and used the Ethereum provider before, and they're only going to get more pleasant over time. But, but yeah, I think that you'll find that like a single afternoon, you could probably make your version of any of the snaps that you've seen. We've really worked hard to make this as simple a process as possible."
    },
    {
        "speaker": "A",
        "text": "Very cool. And I'm sure there will be entrepreneurs that launch successful businesses on top of snaps as well. So that's the prize as well. Dan, thank you so much for joining us today. This has been a lot of fun."
    },
    {
        "speaker": "B",
        "text": "Awesome. Yeah. Thanks so much for having me. This has been great."
    },
    {
        "speaker": "A",
        "text": "Bankless nation got in with this. Of course, you know crypto is risky. You could lose what you put in. None of this has been financial advice. Snaps are risky too, right? You got to be careful what you sign off on. But we are headed west. This is the frontier. It's not for everyone. But we're glad you're with us on the bankless journey. Thanks a lot."
    }
]