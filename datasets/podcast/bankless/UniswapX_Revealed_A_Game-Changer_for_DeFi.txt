Speaker A: When I think about decentralized finance and what we're trying to achieve, we can't just kind of iterate in our small world. We have to innovate and push beyond it. I'm extremely bullish amms as a market structure, but I think that there are also other market structures that could exist in the future, and I think we also want to discover them and have them be part of the Uniswap ecosystem.
Speaker B: Bienvenue a bankless, bankless nation. It is that time of year again. Ethan. ECC, the Ethereum community conference in Paris, France. All the teams, all the projects, all the protocols saved some of their biggest announcements for ETH, except for the ones saving it for permissionless, of course. You might remember last year, ECC was marked by the time in which three teams all had the first Zke EVM. Yeah, that was a year ago at ECC. And today, the day I'm recording this, Sunday, the day before ETHCC begins, we already have a massive release out of Uniswap Labs, a brand new protocol called Uniswap X, a new half of Uniswap that complements the rest of the Uniswap protocol, the yin to the yang of Uniswap V one through four, something brand new that fills in the picture of the Uniswap project. Seriously, the. The best way to describe this is that it's the other half of Uniswap. It's the half of Uniswap that is meant to make Uniswap the best place for swappers to swap tokens. Today on the show, we have Hayden Adams. The day before he gives his etHCC main stage talk, releasing uniswap X into the wild. What is Uniswap X? I'm glad you asked. Uniswap X is a protocol for competitive order execution. In defi is a protocol that exists on top of Uniswaps one through four, as well as all the other liquidity sources in DeFi that ensures that the market produces the best possible order execution for anyone looking to swap tokens using Uniswap X. The idea behind Uniswap X is that it maximally protects swappers ahead of MeV extractors, ahead of arbitrageurs, ahead of frontrunners, to ensure that the average Joe who just wants to swap some tokens gets the best possible deal that the market will allow for. In this episode with Hayden, we go under the hood of Uniswap X, what it is, how it works, and why it's needed so you'll learn about Uniswap X and how it uses a dutch auction to maximize swapper returns, how this dutch auction mechanism also ensures that MEV is maximally retained by swappers. Also how Uniswap X massively reduces bridge risk and almost entirely abstracts away, bridging altogether, freeing up capital to not have to be stuck inside of bridges where it's vulnerable and also how Uniswap X formalizes a new kind of player in the game of making trading in defi maximally efficient as a disclosure. Of course, Uniswap is a sponsor of bankless, and bankless also does hold some Uni tokens, which you can see all the details of, as well as all of our other disclosures@bankless.com. disclosures so let's go and get talking to Hayden Adams all about this new Uniswap X protocol. But first, we're going to talk about our preferred centralized exchange for crypto in 2023, Kraken, because you got to get your fiat boomer bucks into the world of crypto somehow. So use Kraken again, our preferred exchange in 2023. If you do not have an account with Kraken, consider clicking the link in the show notes to sign up with one today. Bonjour, bankless nation. It is the Sunday before ECC, and I am here with Hayden Adams, who has yet another announcement out of the Uniswap ecosystem. Hayden, what's going on, man? How are you doing?
Speaker A: Great to be here. First time in Paris and first time at ECC. But yeah, Uniswap, we are keep cranking out the hits, been pretty busy, hard at work. And most recently we announced Uniswap V four, which is new version of the Uniswap protocol and currently being built in public. And it basically makes it easier for people to create customized liquidity pools. We talked about this last time, hooks, and what you start to see is there's this thing called the routing problem. And as amms get more flexible, and basically what happens is routing gets harder over time, and routing was already actually pretty hard. So today we have hundreds of thousands of tokens. We have four versions of the protocol. We have multiple chains, we have other liquidity sources. And then you also start to think about things like MeV and trade offs between slippage and latency and best execution. And it starts to get really complicated. And definitely with Uniswap V four and hooks, it actually gets even one step more complicated. And traditionally, today we have our current open source. We call it the auto router, which optimizes routing across Uniswap V three, V two. What we've been working on today, I guess a long buildup, is what we call Uniswap X, which is a dutch auction based protocol for routing and aggregating liquidity. We think it's really powerful, and we think it will help provide it basically improves prices, but also has a bunch of Ux benefits, allows for gas free trading, no slippage on failed transactions. It starts to internalize some MEV and provides a bunch of other cool features. I don't know if I say the other big one.
Speaker B: We'll get to every single bit here. And for the bankless listeners out there that aren't familiar, ETh is the place where you announce things, is where announcements comes to be. And like I said, this is the Sunday before, so we're going to be seeing a slew of announcements coming out. And we're getting the first one here with Uniswap X, which is this new thing. This is the thing that Uniswap is announcing, this thing called Uniswap X. But I want to actually set more of the stage, and you did a good job, but I want to make sure that we are talking about the problem being addressed here. Uniswap is cool because every single token gets its own exchange, gets its own pool. Same thing with Uniswap v. Two, V three. Made it even more complex, if you will, with this concentrated liquidity. Then when we had you on not too long ago, four weeks ago, or something about Uniswap v. Four, that whole thing, Uniswap v four was even more expressivity in uniswap pools, more complexity. And the big takeaway, I called it Uniswap's hook centric roadmap to go in parallel with ethereum's roll up centric roadmap, where ethereum's doing this thing, where it's pushing complexity to the edges, it's like, hey, rollups, you do all the execution stuff, and we will just settle. And Uniswap is kind of doing something similar with its hooks. And Uniswap V four, hey, there's a world of expressivity and features and different ways of constructing a pool that we want to enable Uniswap pool builders, amms to be able to build. And what I think you're leading up to is like, that's all the great. We have as much expressivity as we need in Uniswap pools, except we're still left with a bunch of complexity even though it's been pushed to the margins. And Uniswap as a base is simple, the complexity still exists. There's so many pools now. Pools are different, there are different standards of pools. And so Uniswap X is a solution to harness all of that complexity, would you say?
Speaker A: Yeah, and I'd say also when I was on last time, we talked about different ways of achieving decentralization. And there's, the most pure form of decentralization is automation, and you should automate what you can automate with immutable smart contracts. The next level of achieving decentralization, and we talk about this more in the lens of governance, but the next level is just incentivization and markets. And if you have a competitive market structure where people are incentivized to do what they should do, then that's more decentralized than something that needs to be governed, which is the third tier. And for that, you achieve that through just greater distribution of governance rights. What we're talking about here is taking the routing. We've already talked about this in the context of the protocol, which is highly decentralized. And what we're trying to do is do that for the routing problem, which is people tend to think about amms as both swapping and routing, as well as liquidity provision all bundled together.
Speaker B: Routing, swapping and liquidity provision, three different things.
Speaker A: Yeah, well, swapping, how do you route the swaps through liquidity? But people think of it as, okay, you have the amm and you try to find the best price through it. I think you can start to unbundle them a bit, because today most interfaces have different strategies for how they route through pools. There's various aggregators, and they're trying to find every possible liquidity source. There's a uniswap UI which today basically just has trust discover across Uniswap pools. And what we're trying to do here with Uniswap X is create a competitive marketplace for routing. It's almost a way of decentralized, achieving more efficiency through decentralization. The more people that can participate in finding the best routes, discovering the best routes, discovering the best pools, discovering all the different liquidity, the better prices you can get in the long run if you can create a competitive marketplace. What we're trying to do with Uniswap X is create a competitive marketplace for routing across liquidity. That liquidity can be on chain, it can be off chain. Yeah, that's essentially what we're trying to.
Speaker B: Do here, creating a competitive marketplace for routing. So, with this explosion like Uniswap, even its earliest days, and V one was an explosion of pools. The cool thing about Uniswap is you can list any token. And that only got furthered with Uniswap V two, V three, and V four. Now we have pools all over the place. And so the routing problem, maybe to define the routing problem, is that with all of these pools and all these different sources of liquidity, getting the best price for your trade is a computational problem, because there's so many pools out there. And so I think what you're trying to do with Uniswap X, a marketplace for competitive order routing, is you're just giving that up to the market and saying, hey, market, instead of the Uniswap router being the thing that manages all of that complexity, you're just giving it up to the marketplace and allowing routers to come in and service that role to make sure that traders and swappers get the best liquidity gets the best offer.
Speaker A: Yes, and I think the thing I'd add to that is that because we're doing this on a blockchain, it starts to touch on a bunch of other problems in incapacity. We have, like you could do this in trad five, or like you could think, if you think about purely in tradfi terms, and it's like, just like optimizing routes, but we also deal with things like gas, and then we deal with things like the fact that validators exist and they get to choose the order of transactions within a given block, and that starts to take us into, you know, what people call. I only found out recently that it was rebranded from minor extractable value to maximal extractable value, but that takes you into mev territory. Gas optimizations and latency. And there's all these other things as well. Another thing is that there's also another area of price improvement is batching. People talk about batching all the time. If people are trading in the same direction at the same time, you just route it through a Uniswap pool. In the back of the Uniswap pool, then that's less optimal than netting it all together. So by creating a competitive marketplace for it, where people are competing in an auction, it basically forces people to find the most sophisticated strategies that offer the most price improvement. Sometimes it might mean executing multiple transactions at the same time. In that way, you're saving some gas costs, and you're also maybe internalizing some of the price improvement for swappers. But yeah, I mean, look, the real goal is to deliver value to users at the end of the day. And then the other thing I'll mention is that again, because we're on blockchains, there's a bunch of ux implications of just like gas. So with Uniswap X, orders are off chain signatures that are then. So rather than signing transactions that are sent directly to the chain, usually assign off chain signatures that express their intent as a word of the moment in crypto. And that is sort of an auction of a price decaying auction. And then people are competing. As soon as the price hits a point where people are willing to fill it, the fillers, a new class participant, are submitting it to the chain. And those fillers look similar to the block builders of today and likely will be a lot of overlap or similar to the trading firms and arbitrageurs. And because orders just start off as off chain signatures, you also get benefits. Like if your transaction is going to fail, it never gets submitted. And also just being able to abstract away gas for users. So if I want to swap USDC for Dai, I don't want to think about ETH as an input. Today. When you swap USD for a die, your eth balance goes down a little bit here with Uniswap X, you just sign a message, someone else pays the ethical, and that's reflected in the price that you get. So there's a bunch of other benefits as well. But yeah, there is the first thing you said as well.
Speaker B: Yeah. So there's a lot of things under the hood there that I want to unpack, like the gas, the mev, all of that kind of stuff. But really just to start at the very, very top, how is this different? And just to make sure that we're setting the table appropriately, how is this different from like a Dex aggregator or some of the other liquidity optimizer services that are out there? Like if we take a peek under the hood, like how should people think about this in its new form?
Speaker A: Yeah, I say that for most Dex aggregators and photos, where there is prior work and there's other teams that are attempting to do things that are categorically similar. But in terms of the traditional model for a Dex aggregator, what people are doing is just, you have a single team that is integrating liquidity sources one by one. And in doing that, you're hoping to get as much liquidity coverage as possible. That was the traditional Dex aggregator. It's definitely like various experiments like Casmop infusion and stuff that get into closer territory to what we're doing with Uniswap X. But here, rather than trying to manually find all the liquidity sources, here, we're basically saying anyone can do that and they're competing against each other. And so it's a marketplace, it's a.
Speaker B: Little bit more meta than a Dex aggregator. So a Dex aggregator, that was a.
Speaker A: Name on the, there was a uniswap, meta was one name we considered, but naming things was hard and I think meta kind of ruined it.
Speaker B: Meta is now taken. That box has been checked. So, okay, so a Dex aggregator provides a singular solution to getting the best liquidity, and that is their solution. And what you're saying is in order to improve that product, the teams behind every Dex aggregator needs to serially, manually, one by one, integrate with liquidity pools and in order to improve their product. And what you're saying is Uniswap X is not that it is actually a place for all of those solutions to compete in the marketplace. Yeah, and maybe at this point, complexity around Uniswap is so large that knowing the correct way of producing the best outcome is perhaps impossible, which is why you need to leave it up to the free market.
Speaker A: Yeah, that's definitely it. And there's also other liquidity sources that can start to be integrated there as well. I'd also add that signed off chain order based auctions are a really powerful primitive.
Speaker B: Let's dive down into that. If I go to Uniswap, I sign a transaction, I broadcast it to Ethereum. In twelve to 24 seconds, it gets included in the blockchain. That is the current Uniswap user experience that people are used to. With Uniswap X, we have this new thing. Can you unpack that a little bit?
Speaker A: Yeah, I think that something that's funny is that actually every, like, you already have an auction happening every transaction, right? Because there's like an auction for block space, but people are competing to, like, there's like, I'd say that like, one thing that's interesting is that if you imagine there's like a price curve, and then there's a gas price curve, and today, like, whether or not your order gets included is based purely on the gas price curve, not the asset price curve. And so this combines everything. You just have the price curve. The nice thing is it kind of combines the gas and the price into a single thing, which is part of it. But yeah, users sign off chain orders. They're broadcast, and they can be broadcast in variety of ways, signing off chain.
Speaker B: Orders as opposed to signing a transaction.
Speaker A: People have talked about these for a long time, like meta transactions or sponsored transactions, all of these. It's a similar category of things, but we're bundling the gas auction of it, getting included in a block with the price auction of trying to optimize your price at the same time. And so there's a nice efficiency thing there where sometimes, for example, in the past, and definitely things improved a lot with 1159 EIP 1159. But sometimes in the past, for example, your transaction would wait until the gas dropped a significant amount to get included. But in that time, the token that you were selling also dropped. And so it would have been better for you to pay more gas sooner. But your transaction has no awareness of. And that's where when people talk about Mev awareness, if the fee that you're paying has no awareness of the transaction that you're doing, then you're really not optimizing. And so part of this is around that there's also just a gas, there's a UX benefit. People don't like thinking about gas. When I'm trading USDC for Dai, I just don't want to think about Ethan. And it's confusing. And that's something that confuses users a lot, I think something that maybe makes uniswap a little bit unique in not totally unique, but somewhat unique in how we are able to develop and design things is we just have a lot of users and we hear a lot from them. And some of how we approach solving problems is we're like, ok, what is holding us back today? What are our users struggling with right now? And that's part of what led to us creating a wallet, is our users were struggling with wallet ux. And it's part of what led to some of our design decisions here is just like, how do we continue to push things forward?
Speaker B: I want to drill down on this off chain order thing just a little bit more, because I think it's a great microcosm for the solutions being put forth by Uniswap X as a whole to begin with. So in uniswap, in its current form, like I said, I sign a transaction, I broadcast that transaction. The gas fee that I pay is hard coded into that transaction, and that is independent from the trade that I'm making. And so these are two different variables that are not talking to each other and can produce suboptimal results. Because maybe, like you said, the token moves against me. In the time that I tried to save $2 of gas, I lost dollar 15 off my trade exactly with signing an off chain order, which is signing a transaction but not broadcasting it and just leaving it for somebody, a filler, a taker, to take and fulfill that they are allowed to combine the computation between optimizing for gas fees and optimizing for the actual swap. They take that complexity and do that computation to produce the best outcome. And because it was left off chain, it was assigned an off chain order, some sort of off chain service provider, some filler who's managing this order routing and all the other complexity, they're able to manage the complexity between the gas and the swap to produce a better outcome for a user. That's just one piece of many pieces of combined complexity that allows for a better swapping experience for sure.
Speaker A: Something I'll add is that might be like, oh, there's an off chance. What does that mean for decentralization? But I think it's worth noting that today the way it works is there's no magic user signs that go straight to the chain. We have mempools, we have block builders, infuria, we have all these things in between. What we're trying to do is say, let's optimize what's in between to optimize for the best outcomes for users. Because today MeV block builders aren't optimizing to give users the most money, they're optimizing to take the most money for themselves. And actually, funny enough, a lot of that money is going to ETH holders through efficient MEV auctions. So actually ETH holders are making a lot of that profit. But we ultimately want to give a lot of that value back to swappers. I know we like Ethiopia.
Speaker B: We also like UX and value retention by end users.
Speaker A: I'll also mention that I mentioned offering signed off chain orders as a general primitive. I think something that's really empowerful with Uniswap X is it actually opens up a world for cross chain swapping as well. So today we're launching today is it depends on when this gets.
Speaker B: Hopefully on Monday.
Speaker A: Yeah, Monday, the 17th United States time. Yeah, July 17, something like that. There's going to be an opt in beta people can sign up to, or people can opt in in the UI to start having some small percentage of their orders route through this. We're starting small. It's only for certain pairs, for certain trade sizes, et cetera, so that we can continue to give time for more fillers to come into the ecosystem and continue optimizing how we parameterize the system. But today we'll have a version that's just on Mainnet, on Ethereum. But in the long run, we can really make this cross chain and you can sign orders that are. This method of signed off chain orders is really powerful and expressive and allows for really good user experience and efficient cross chain swapping as well. And so not today, but maybe hopefully later in this year, we'll see cross chain trading, and that will also be really cool.
Speaker B: I want to try and define the landscape of what Uniswap is now, because we have on chain, on Ethereum and the layer twos, we have uniswaps one through four, which are amms. And then now we also have Uniswap X, which is an order routing protocol. It's another protocol. So this is a new protocol. This is not an amm. This is actually something completely new. Compared to all the Uniswap one through four, this is not a Uniswap five. This is something completely different. This is a parallel and complementary, parallel and complementary. The pieces fit really, really well together. But I really want to kind of carve out what the definition is of Uniswap X. I'm going to do my best, and you can correct me because I'm only get so far. Uniswap X is a protocol, an open ended protocol for service providers, fillers, trade executors to come in, fulfill the best trade according the parameters of a swapper. So a swapper comes to Uniswap X and they say, hey, I want to do something. And Uniswap X puts that into a package that fillers can all compete on. So it's like a protocol. What do protocols do? They bundle things in easy to manage packages of information so that other service providers, fillers, swappers, liquidity providers, whatever in the ethereum ecosystem can all come and compete on that vector of providing that one swapper the best swap possible. And this is again complimentary with uniswaps one through four, but is completely different protocol, correct?
Speaker A: Yeah, I mean, look, yeah, you could start to think of amms as ways of creating liquidity, building on top of liquidity, as a building block. There's on chain integrations, and it's just a really cool, expressive and efficient on chain way of providing liquidity. But I'd say that naive routing solutions through amms in the long term are not going to make it. You kind of need your routing solutions to be aware of things like mev, aware of kind of more expressive in user intents. And so you could think of this as like we already have a routing layer. We already have this thing we call the auto router. We also have this thing we call client side routing. So we have a, in our web app today, you can actually toggle between two types of routing. I don't know if you know that, but there's a client side which basically turns off the API entirely and just speaks directly to the chain. That's maximally provable. But then we have. But to make it better for users, you kind of need to have smarter routing. And so we have this smart order router, auto router thing we call and that is a little bit faster and discovers more routes, but there's an API behind it. It's open source. I would think of this as a protocol that lives in that domain, not as a protocol that lives in Amm. So we already have this. The routing side of the system already exists, and we're just updating it with a new protocol. And I'll also mention that the Uniswap X does have, there's on chain smart contracts that settle orders. They're immutable, actually open source, GPL, GPL, open source. And then there's, you just have, and then you have front ends that broadcast orders, fillers that have to discover those broadcasted orders, and then the fillers basically can submit them directly to the smart contracts.
Speaker B: So I think what Uniswap X is really doing is they're enabling a new type of player in the Uniswap arena. So we have swappers already. Most people listening to this are swappers. Some people listening to this might be liquidity providers, and they are providing liquidity into the amm. So we have the Amms, which are uniswaps one through four. We have the liquidity providers, we have the swappers, the traders who trade on Uniswap. But now Uniswap X is enabling this new type of player called a filler.
Speaker A: Yeah, I think it's worth noting that they're not new. We just have a routing system that is aware of them, formalizing them. We're formalizing them in a way that can put constraints on them, because right now what they do is you can think of them as today as the people that do the most advanced trading strategies, the people that do a lot of the arbitrage, the block builders, the MeV extractors. And what we're trying to do is put constraints on them and take value that would go to them and give them back to the swappers. So the players exist. We're just formalizing them, and we're having them compete with each other in a way that tries to drive as much value back to swappers as possible.
Speaker B: So swappers, the people who trade on Uniswap, trusted trade tokens, meme tokens, USDC ether, are now going to be pointed towards Uniswap X. So to trade on Uniswap now in the future and now with Uniswap X means to be trading through Uniswap X, correct?
Speaker A: Well, first there is the routing system we're going to build is going to direct your order wherever it thinks it will get you the best price. And so, especially at launch with the beta, a lot of orders will just drought through our existing routing system. I'd say that over time, probably more volume will go through Uniswap X, but I think that over time also most Uniswap X volume will go through Uniswap. The AMM protocol.
Speaker B: Right. So Uniswap X people will trade on Uniswap. They can use Uniswap X and then Uniswap Xdev for, as in its nascent time. We'll just say, oh, you know what's most efficient? The Uniswap order router. But as it develops and grows and matures, it might find a better pricing and better just sources over time.
Speaker A: Yeah, but for what it's worth, that sort of already, we're already in that world, which is today. If you don't get best prices going through Uniswap, then people will go somewhere else. And so there's always other liquidity. I think that the goal of the uniswap, the amm, is to have the best liquidity and the most assets possible. And I think that Uniswap V four is a really, really powerful way of achieving that. And I'd say that it's so funny. One thing that's really interesting is when I was developing Uniswap V one way back in the day, there was the framing, the mental framework was, do amms have a place in this world? The framework was like, I'm going to build the best amm that's going to take over all the liquid. It was like, this is a new way to do liquidity creation, and I wonder if it will work and have a place in the world. And I think we saw that it does. And it's a really efficient, cool way of creating liquidity and unlocks some really powerful new things. The ability for anyone to create liquidity at any. Anyone can create liquidity. Not anyone can create liquidity as efficiently or effectively as citadel, but anyone can do it at some level. And that's why a lot of the earliest pools that were big on Uniswap were these longer tail pools that were struggling to get exchange listings, et cetera. MKR and Dai were very big in the early days. Cause it was the only place to trade them. And so amms have these new unlocks. They're like, oh, anyone can provide liquidity. It also has on chain integrations, which are money legos. It's like a really big unlock. I think that when I think about decentralized finance and what we're trying to achieve, we can't just kind of iterate in our small world. We have to kind of innovate and push beyond it. And I'd say that I think that amms are going to be, I'm extremely bullish amms as a market structure, but I think that there are also other market structures that could exist in the future. And I think we also want to discover them and have them be part of the Uniswap ecosystem and have them be complementary. And so you could think of this as some volume might go elsewhere, but that volume might go elsewhere anyway, because if Uniswap isn't offering the best prices, I'd say that other liquidity sources are going to exist, whether or not we are aware of them and look for them. Also worth mentioning that today Uniswap has a pretty. The funny thing is that we've actually seen this play out in aggregators. Uniswap still is the largest liquidity source for every aggregator that's out there, even though they all have private market makers, other liquidity sources. I think that the sort of network effects that can build up around v four will also be really helpful.
Speaker B: So what you're saying with all of that is that Uniswap X is not a Uniswap maximalist protocol.
Speaker A: Well, it has the word uniswap. I'd say that it is a.
Speaker B: It's not a uniswap.
Speaker A: I'd say that, like, I don't want to go that far. Like I'm pretty amm Maxy in many ways, but I'd say that, like it's like expressive and starts to push the Uniswap ecosystem to go beyond strictly Ammsdez. But I'd say that it still is also the best way to route across amms, which is, I think, really important. For anything that is lost to other liquidity sources. There's also gains, I think in routing efficiency. And also, really importantly, when you start to think around, when we jump back to that hooks problem, one of the biggest questions that we got after the announcement of our vision for Uniswap before was, okay, I'm a team. I create a hook, and how do I make sure that people front end. One of the nice things about Uniswap is if I create a pool, I know that routing is going to be discovered in routing engines. If I create a new hook that has some new, let's say it has twam in it. Twam. If you're routing through a twam pool, you need to be aware of the twam component because that affects the price you get. You can't just look at the liquidity. Or if I create some other custom hook, how do I know that? Maybe people are afraid that it will. It's not safe, and they have to audit it, and it takes some time to audit, and they don't care about me, and so how does my liquidity get discovered? And this is the solution to that. It's like if someone creates a new custom pool, a new custom hook, rather than needing Uniswap lab's team to audit their hook and integrate it into our front end, which is not the ideal process. Let's say maybe we're going to be in a world where there's a million hooks or a million by now. We already have hundreds of thousands of pools. We're going to be in a world that has millions, probably eventually hundreds of millions of pools. And you can't have a single team just does routing. You can think of this as now all you need is to find one filler who's willing to integrate your hook, and then that hook is represented in the liquidity that you find in front ends, like Uniswap front end. So someone can not only create their liquidity pool on Uniswap, they can find one of any filler in the world that's willing to include that hook, and then immediately that liquidity is represented in the Uniswap Ui. I think that you could think of it as adversarial, but I think of it as almost strictly required to make it work in the long run. Pretty, pretty excited.
Speaker B: I think this is just overall a really good, elegant lesson as to how markets harness complexity really, really well. There's been no way where one single player could manage all of this complexity with all these different pools versus the competition of just like how? Just like, oh, this is too complex. Just deal, make the market, deal with it. I want to run through how Uniswap X actually works. I mean, we've talked a lot about the contours of it, but maybe we can run through the lifecycle of a transaction and how Uniswap X actually ensures that that transaction gets the best actual output of whatever it's trying to do possible. So maybe you can run us through Uniswap X under the hood.
Speaker A: Yeah, so, I mean, I guess we can start with like the Uniswap front end for swappers and the Uniswap front end, it actually looks and feels very, very similar. Okay.
Speaker B: No new skills are required here.
Speaker A: No new skills. Hopefully fewer skills in the long run. You know, when you go to, you know, you choose the tokens you want to trade, you like, kind of like, you know, you click, like swap. The first difference is actually that you'll see that there's no gas for your swap. There is still, I'll caveat that, like, there is still like one initial approved per token of, like the permit contract. We created these permit contracts that you've probably seen that'll basically allow any signature to do signature. Any token that you approve on this contract can now do signature based approvals forever for you. So that's like, what permit is. And this is building on top of that. So you do have to do an approved transaction every once in a while for new tokens that you haven't traded. And that does cost gassed, and there's no way to avoid that unless the token itself includes gasless signatures or you're using a smart contract wallet. But for tokens that do have signature based approvals, eventually. But anyway, once we have our token approvals, which is our, from that point on, you make a swap. And instead of paying gas and instead of signing a transaction, if you're using metamask, it looks a little different than a regular transaction. It just says you're trying to sign, just signing a signature. So you sign a signature, and then at that moment it feels very similar. It then goes to a pending transaction state for the user. One noticeable difference is that when you sign a transaction, you can immediately go to Etherscan and start waiting for it here. It's just an off chain signature, so the order hasn't been executed. We don't know what the transaction hash will be yet. At this point, Nick, it's not even.
Speaker B: In the mem pool. It's in the pre mem pool.
Speaker A: Yeah. At this point, the order is broadcast to a network of fillers from the front end. And there's kind of like a. Yeah, there's an API for that. And then it is similar to our auto router. There's an API. So the order is broadcast to a network of fillers. And I'm going to start with the base case and then mention that there's an optimal, there's an additional ability to parameterize through RFQ. But just the base case of a Guda order. You sign an off chain order, it's broadcast. Your order is basically a decaying price auction. So at the moment you sign it, you're willing to accept one price, and then the price goes down a little bit over time. And what that still gets filled, maybe it starts at a little bit above the price you expect, then it decays over time. And what that does is the moment that it's worth it for someone to fill, they will. And so that's what creates a competition.
Speaker B: And that's what in theory, produces the best possible outcome. Because so long as somebody is some rational actor is saying, hey, that's profitable, I'll do that. You'll get the first profitable actor that'll do that.
Speaker A: Yeah. The person who's willing to take the lowest margin or has the best strategy, and they're competing against other people, and they want to make sure they get it. So they try to give the best price now and then at that moment, the filler, not you, submits the transaction, meaning they're paying the gas. And then what that does is it pulls your tokens out of your wallet. You've approved it. There's a smart contract that you fill through, and it enforces that they can only take the tokens out of your wallet if they send you the required amount of tokens based on the moment at which it executes. Because there's a timestamp component. That's about it. You sign an order, the first filler that's going to fill it takes it and submits it on chain and pays the gas, and that does the transaction. I think that something that starts to happen here is you think about latency. Back in the day, pre 1159, Uniswap transactions used to take a few minutes. Sometimes people are like, the gas markets weren't very good or very efficient. Today, it's a little bit faster. About 75% of Uniswap trades execute in the first block after they sign it, and about 90% by the end of the second block. And so I think that there's definitely a need for the auctions to happen very quickly. And so there's an optional component for this system, optional at a smart contract level, uis can do whatever, but that allows you to layer an RFQ on top of it, which basically means you use an RFQ system request for quote they're called, where you ask a bunch of people what is the best price you'll give me, and you use that to inform what the actual market price is. Rather than guessing. When you're parameterizing the auction to incentivize people to give you their best quotes, you do have to give them something in return. The way that that looks in the smart contracts is if you use the optional RFQ parameterization, then basically there's a slight priority given to the RFQ winner for the first, maybe few blocks. So what it looks like is, I sign my order, if I'm doing a transaction with an RFQ, I ask the best quote, I sign an order that says this person can fill at their quote. Anyone can fill. If they have real price improvement, they can fill and they can come in before them. But there's some margin of price improvement that they have to offer. So you can't offer one way higher. It's like you have to offer maybe 0.5% higher, something like that. So there's still a public auction component where someone can come in with price improvement and out compete the RFQ winner, which is important. But there is, for a few blocks, a slight priority given to RFQ winner, which allows you to basically get very efficient, very fast price discovery. And in that way, maybe most transactions that include the RFQ can execute maybe in one to two blocks, as opposed to, if you weren't using the RFQ, maybe it would take, you know, five to ten blocks or something like that. Yeah.
Speaker B: With this model, this decreasing price auction, which is a dutch auction, which is existing from the 17 hundreds, which is why we know it's really primitive.
Speaker A: Do you know where it comes from?
Speaker B: The Dutch?
Speaker A: Yes, but do you know it's from tulip auction?
Speaker B: Yeah. Whenever I see Dutch, I'm like, was it the tulips?
Speaker A: Yeah, it was the tulips.
Speaker B: It was the tulips.
Speaker A: Yeah, it was flower auction.
Speaker B: We'll put a pin in that one first. Tulips. Now, dogs, you have the option of extending the time and the, or slowing down the decreasing price for a very long time. Like, you know, you could go up to ten blocks or you could go up to ten days for whoever wants to do that, for whatever reason. What would be the advantage for extending that period of time? Like, why would someone do that, yeah.
Speaker A: I'd say that, you know, you can. So one thing is, if you don't want to, like, depend on this RF, you know, this RFQ system, or if the RFQ system is not optimal for whatever reason for your trade, some people might just be comfortable. Part of it is. There's sort of an assumption in what I'm saying that users need their transaction to execute in the same one to two blocks. And I think a lot of users, that's really important, and it's a reason that's when we build things at Uniswap, we have to consider what our users care about. And so having this RFQ component allows it for users who want their trade to execute in the next block, it allows that. But if users are comfortable waiting a minute or two, you might have. There's definitely, there's a lot of debates you could get into about whether or not there's price improvement. It probably depends on the size of the order. If you're making a large order, giving some people time to source liquidity can optimize the price. So waiting a little bit longer, giving more time for it to propagate, more people to discover it, et cetera, there is risk that the price moves against you during that time, and not if you have an order that executes more slowly. There is risk you are taking on price. Risk that maybe the trade will go down, the price will go down, not up for the token you're selling. It's not strictly better, but it does let you remove the RFQ system. And also I say that waiting one to two minutes, you're not really expecting too much price movement, and it might actually optimize price a little bit. I don't want to. It's such an interesting design in trade off space that it's like. I'd also mentioned that one reason that might actually be is that batching within the system, if you have orders that execute slowly, maybe someone else makes an order in another direction within that time, and then it's more efficient to net against them. Something that maybe people ever know is the story. Not everyone, but most people know the story of Carl and my first friend in the space, and he gets me into amms. I don't know if you know the second person I met. The first three people, in order that I met in the space were Carl, then Phil Dion, then Dan Robinson.
Speaker B: Pretty good lineup.
Speaker A: Good lineup. So the second person I met in this space was Phil and the co founder of Flashbots, and Mev, inventor of the term MeV. I believe discoverer of Mev. Yeah, he released the Flash Boys 2.0 paper. So we've been talking about this design space since well before. And the first kind of version of unispot, right? It was like, oh, I mean, yeah, this leaks mev. I mean, we didn't have the word mev yet. I. Yeah. And he sent me a paper by this guy Eric Buddisch, called, like, it was something like frequent batch auctions, something trading arms race. Frequent batch basically gets into the whole flashboys 2.0 and basically postulates that if time is continuous, if you treat time as a continuous thing, then these HFT games are inevitable, right? That there's always people front running is inevitable if time happens in order. And the only to create fairer systems that don't favor an arms race, you kind of have to break time up into discrete intervals and do batching within those intervals. And so there's sort of like, and definitely there have been earlier attempts at it in Ethereum, but I think there's often ux issues around it. So I think what we're partially trying to do is experiment with and explore this trade off space of how do we create fairer outcomes that don't have this maximize power in the most sophisticated traders in the world, purely. And I think part of that is starting to enable things to be executed in batch and starting to be more aware of things like mev. I don't even remember a question you asked at this point. I'm kind of just ranting.
Speaker B: We were going through how just the lifecycle of token, and then also just the time for why someone would extend out a long period of blocks.
Speaker A: Yeah. All that to say, users have their preferences for how their order. If someone really cares about executing their order immediately, they probably are going to get a slightly less optimized trade because they have to rely on, you can't very efficiently discover, the auctions allow you to efficiently discover the right price, but if the auction is too fast, it's not very efficient. It's hard. You have to know how to parameterize your auction, and you don't know how to. And like, and so, like, the faster you need it to converge, like, the less, in some ways, there's like less time for optimization. And so, like, having like, yeah, slower orders over time, like, like might just let you like, get more optimal prices where you feel better about, like, they're not being someone who's like, extracting some value from your transaction. If you don't care and you just want your order to happen right now, you know, like, then, like, you're always gonna then, like things like, we can do much, much better than today, but there's going to be some trade off space of, if you want the instant, fastest transaction, you might have to pay a little bit more in the long run than people who have slower transactions.
Speaker B: What about Mev? How is MeV as a mechanism? How has uniswap X stopped the leakage of MeV?
Speaker A: Yeah, I'd say that I don't want to use phrases like stop the leakage of MeV, because there's such a. There's even, like, different ways of, like, thinking about it. Some people say, like, oh, MeV exists, no matter what. It's just like, you've internalized it, or some people. Or it's, like, gone to a different party. It existed. You just. If you generally think about it as, like, someone wants to make a trade that creates some value somewhere. And, like, you know, like, there's a lot of forms of MeV, right? People have talked about, like, sandwiching front running, back running, you know, reordering transactions, reorgs. I don't remember. Time bandit attacks.
Speaker B: Okay, I'll rephrase the question.
Speaker A: I'll give you an actual answer.
Speaker B: How has Uniswap X changed the way MeV is expressed?
Speaker A: Yeah, I think that generally, what we're trying to do is have value that today leaks out to block builders and validators through MeV markets. Right now, when someone makes a trade, it is actually also broadcast publicly. Right now, basically, someone makes a trade on Uniswap. People are just competing with each other, but they're not competing with each other to offer the best price to the Uniswap user. They're competing with each other to extract the most value from the Uniswap user. That's what current MEV markets are, and that's what current block building networks are. And what we're trying to say is, can we change how we encode transactions such that that competition. That rather than a bunch of sophisticated people competing to extract value from swappers, they're competing with each other. And as much of that value as humanly possible. Some value will always have to go to Ethereum miners or validators. Some value will always go to block builders. But how do we just maximize the percentage of the MEV that goes back to the swapper? Because they are competing with each other right now. They are competing with each other, but they're competing with each other to take all of the money. Now, we want them to compete with each other to have most of that value go back to the swapper. So it just has to do with how you encode your transactions. And having an auction is a way of doing that. Because today a uniswap order is executing at, basically it says, I will make this trade as long as I get better than the minimum slippage, my slippage tolerance. What that means is a validator can front run the order up to the slippage tolerance and take that money for free if you're mining a block. And we don't want that. And so by having a price decay over time, as soon as it's profitable for someone to include that transaction, they will. I guess one way to put it is that today, depending on the size of the trade, it can be profitable to front run up to your slippage tolerance. In this one, it doesn't go to the minimum price because it usually your slippage tolerance is still expressed as the minimum price of the auction, but the order is filled well before it hits your minimum price. And it can't hit your minimum price until the end of the auction, by which time it's already been profitable. So the first moment it's profitable, that's when it's filled. And so you don't, like, just get front run up to your subject tolerance, which is kind of how it works, right?
Speaker B: This is the beauty of the mechanism design of a dutch auction, where just the mere system itself of making sure somebody fills that order at the first profitable opportunity is the MEV protection mechanism.
Speaker A: Yeah, I'd say that, like, also, like, you know, so that's like the mechanism of protection. I say there's, like, other ways that, like, it's, it's improved and like, like, things like, just the fact that, like, if you have a bunch of transactions at once that are off chain orders, like, one filler can, like, discover all of them and complete them all at the same time. And that means that, like, it can be. It's about, like, that means it can be profitable to fill them all even earlier in their life cycle. Because, like, I, like someone might have an order, and on its own, it's not profitable for the filler to include it in a block or like a block builder. But if you have another order that's going the other direction, then maybe you can. So when you think about that as the earlier up you are, the higher up you are in your dutch auction, it's a decaying price. The higher up you are, the less value has been leaked. And so we're trying to, the more optimal that we can make these filler networks, and the better we can parameterize these orders, the less value will be leaked.
Speaker B: Are we ready for the bridge conversation?
Speaker A: Cross chain.
Speaker B: Cross chain swapping?
Speaker A: Yes, cross chain swapping.
Speaker B: How do I enter this conversation? What's the point of entry here?
Speaker A: I can start basically when you have orders expressed as off chain signatures. We initially started this project kind of thinking about what we might want to do in the aggregation space. And I think that what we discovered in the process, like if you express your orders as off chain signatures, there are like other things you can do. And I think one thing we discovered is that you can actually do very efficient, very powerful, good ux cross chain swapping. And so instead of signing an order that says, I want to swap this token for this token on ethereum, you could sign an order that says, I want to talk. Swap this token on optimism for this token on arbitrum or swapping across chains. And the sort of beauty of it is that from a swapper's perspective, the user experience is exactly the same. And even the UX of it actually can fill very quickly. And these fillers that are filling orders on that we've already talked about, they actually can handle the complexity and latency of using bridges and figuring out settlement. And so we basically think that the cross chain version of this is really powerful. I guess one way to put it is that maybe a few of the benefits that you might see is one, it allows for native asset swaps. So right now, a lot of value currently lives in when people are doing moving funds between chains and making trades across them. Usually what you're doing is you're bridging an asset, then you have a bridged representation of that asset on another chain that is sitting in a path of a liquidity pool. And then you're swapping in that liquidity. You might bridge eth, maybe it'll be more concrete. You might bridge eth to Polygon and then swap your Polygon eth to matic tokens on Polygon. I guess they rebranded their token soon. Yeah, something like that.
Speaker B: With approval.
Speaker A: Yeah, something like that. But in that world, bridges are, I mean, look, we've looked at this world of bridge. We've had so many bridge hacks. Funds that passively sit in bridges are just risk for the industry, more or less. Look, obviously some bridges are much better than others, and we've had these l two bridges have held up pretty well so far, for the most part. But what you can do with uniswap exits, you could just say I'm going to swap Ethan Mainnet for Maticon polygon and a filler. Basically. Should I talk to the lifecycle? Maybe, maybe that would help. A swap in my sign in order that says I want to swap eth on mainnet for Matic on Polygon and a filler just like the previous version, you have this decaying price auction for how much matic you need to fill to get the input, Ethan. And the order is actually completed on the input chain as well. So the filler, as soon as there's a price at which they're willing to fill, they initiated a transaction that claims the order and they transfer the user's input tokens into kind of like an escrow contract and they put up a little bond and now they're basically responsible for sending you those tokens on the output chain. And so the next thing that the filler does is they send you those tokens on the output chain. And now the filler, from the swapper's perspective, they have just made a cross chain swap. And then the filler basically has to prove that they did that to claim the user's input tokens on the input chain. And if they don't do the proof, eventually it would go back to the swapper because they never proved that they filled. Now how do you do a proof? You can use any possible bridge. So that's one of the really cool things about it, is that Uniswap x Cross chain variant basically can support any possible message bridge messaging or like any cross chain messaging protocol or even like any other use system for how you settle these cross chain orders. It's kind of completely agnostic to that. But we have some initial smart contracts which I think will probably be going open source around the same time that basically allow you to that work for the canonical optimism arbitrum and polygon bridges. But yeah, basically, you know, the filler has to prove through a bridge. Or they could do it optimistically. Like, you know, one way to do it is like it's assumed the filler fills unless someone challenges it and then it kicks off the force to do it through a bridge. It's like a similar design space to like optimistic roll ups or something where like. But that shouldn't happen in most cases, like because you have bonds to prevent that. But generally speaking, maybe I'm, you know, user signs off chain order. That is an auction filler, you know, initiates a transaction that puts their tokens into the escrow contract, then fills in the output chain and does a proof and that proof can be an optimistic proof, which means that it's assumed that they do it unless it's proven that they don't. And then in that way you have very fast, good ux cross chain swaps. And definitely if you go to a challenge period, then it might be like if you challenge a swap where you need to prove it through the optimism or arbitrary bridges, which are seven days, then you have a seven day lockup period of the input assets. But that only happens if a filler lies and then they lose their bond. And so you have to parameterize these bonds to be such that it's not incentive, it's not optimal to fade.
Speaker B: To carry this through with one of the themes I established at the beginning, where we talked about with all uniswap v four and one through four, there's all these pools and all this complexity. And so this beautiful, elegant mechanism of an off chain signed order, an off chain order that doesn't just solve the complexity problem of pools, it also solves the complexity problem of bridges. And bridges and pools are kind of similar in that regard. And so since we are just signing these transactions, signing these messages off, these off chain orders that say, I have this token and I would like this other token on this other chain, all of that gets abstracted by the same service providers, the same fillers. And so they can manage the bridge complexity, they can manage the timing and the latency of that, and just provide the swapper the thing that they want, which is the maximum number of tokens in the place that they want it. And all of that complexity is just again, once again, the whole theme of this seems to be left up to the free market, left up to the fillers.
Speaker A: Yeah. And there's smart contracts on the input chain that enforce that. The swapper actually gets what they wanted, because you do have to choose what is your source of truth for whether or not the order was filled. And that's specified in the order as it's being broadcast. And so it's likely that in our UI, once we have this live in our UI, you'll probably use mostly canonical bridges. So for swaps between optimism and Mainnet, maybe we'll use the optimism bridge. And you can use the optimistic pattern to make it so that you don't actually have to have seven day delays. I'll also mention one thing that's kind of cool, is that it's not just for, you can think of it as also for fast l, two exits. You can use this. Some people might be willing to pay you if you have Ethan Mainnet and want Ethan optimism, someone who's on optimism, who wants to exit, might be willing to pay you a little bit to do that. You can use this for fast exits as well. I'd say that definitely the reduced amount of one thing that's a little bit different from most existing bridging protocols is most bridging protocols have passive exposure to bridge risk.
Speaker B: Passive exposure to bridge risk. What is that?
Speaker A: So, like, if basically, like, liquidity providers in them are like. Like, you hear about, like, bridge hacks, like, basically like that. Like, yeah, we do. Yeah, yeah. Like, you hear about bridge hacks all the time. There was, I think there was a billion dollar one, like, last week or something. Last week, I thought so maybe.
Speaker B: I've been gone for ten days. This is the first thing I've done in crypto in the last ten days. Catching up to do.
Speaker A: Well, we don't. I don't know if we know how much. I think it was like minimum. I don't know, it was like. Anyway, we don't need to get into specific, but yeah, bridge hacks are a thing, and it's because people, you deposit a token on one chain and it has a rep, and at that point, the bridge is kind of almost like a multisig, holding all those tokens, and they have representations of those tokens on other chains, and the sort of risk for as long as those tokens live on the other chain in any form. And if you want to have liquidity for people to make trades, then liquidity providers need to hold those bridged representations of tokens on the other chains. And so eth on another chain is always going to be worse than Ethan Mainnet, and there's maybe one exception. USDC on any chain is probably equally the same, which is kind of interesting, and that's why it's interesting that they have a bridge. And by the way, we did do an experiment that made it so that we could use the circle USDC bridge as a settlement system for the cross chain variant of Uniswap X. But that's sort of an aside. But yeah, again, speaks to, you can basically have, I think we're going to eventually have a world where most assets live on the chain in which they were originated or originated, or in whatever chain that they're most secure or is most canonical for that asset. There might be some assets that are on multiple chains, things that are common stores of value currencies. So like top stable coins and maybe ETh and a few others. But generally speaking, if you're a liquidity provider, just letting you kind of hold most of your, let's say that I want to fill, and I could have some native tokens on each chain. And if I want to fill an order, let's say I do a cross chain swap from some random native asset to optimism from Mainnet. Even if you don't have, there might be amms on optimism that are between the optimism native tokens and other optimism native tokens, and on Mainnet, between mainnet native tokens. And so the filler, they can basically just like maybe they have, like they're holding op tokens on optimism, they buy some other optimism native token, fill your order on, and fill your order on optimism. And then they like never, and then they just like receive ETh on Mainnet and they never at any moment in time had to have like fun, like they never had to hold like eth wrapped on optimism. Or it just reduces the amount of the size of these bridge honey pots and lets people just swap between native assets.
Speaker B: Well, it seems to really minimize the use of bridges in the first place, rather than have bridges being bridges for assets. Bridges in this model are simply just used to pass the final message data, not assets of approval, that the bridge was actually the trade. The swap was actually executed appropriately. And so it's one small use of a bridge to pass a small packet of data rather than having hosting long term liquidity inside of these bridges.
Speaker A: And you don't even need that data packet unless the filler is lying. If the filler actually fills your order, you don't even need to pass that data.
Speaker B: Is it fair to call it minimum viable bridging?
Speaker A: Yeah, we're basically trying to minimize the amount of assets only live in bridges. Users are only exposed to bridge risk while transactions are in flight. Once the swapper has their, once the swapper has the output tokens and the filler has the input tokens, there's no more bridge risk for either party unless those tokens happen to be wrapped bridged assets, but they don't need to be. So yeah, we're minimizing the extent to which people need bridges. We're also abstracting them away a little bit. This system can support any possible bridge. You could think of it as a bridge aggregator. It's important to note that the bridge used for settlement is different from fillers can use any bridge they want to move liquidity around, they can use centralized exchanges, they could use bridges, whatever. But then each trade does have a specific bridge, or we use the term settlement oracle which can be any bridge. It could also technically be any other system. You could technically use a multisig or a governance system or a single party if you wanted. If you wanted to. You could also trust the filler. If you are like, I trust the filler, then you could trust them and they could be say anything that they say. Technically, you could do whatever you want.
Speaker B: You just need some system to say that, yes, that swap was fulfilled, and.
Speaker A: This protocol is completely agnostic to that system. It can support any possible system. We have initial smart contract designs that work with, as I mentioned, the canonical l two bridges for optimism, arbitrage and polygon. We have a design that works with the circle bridge, but it can really work with every bridge you hear about in the space. Theoretically, you could have an adapter that could use that bridge. Then bridges are competing on offering security and latency for passing messages and not having billions of dollars of liquidity stored in them passively, which is a security risk. And we've seen how that plays out.
Speaker B: Again, the theme of this whole thing seems to be harnessing complexity and Uniswap X. The naming also, I think, is intuitive because we have uniswaps one through four, which are amms. And again, Uniswap X is not an amm. It is a order router, an order optimizer. We have all of this expressive liquidity protocols that we call amms, Uniswap one through four. Then we have this other expressive order fulfillment service called Uniswap X. It really seems to be like a yin and yang, like two sides of the same coin, where if you smash these things together now you have Uniswap. That is uniswap.
Speaker A: Right? Right. Yeah. I'd say that, like, this is definitely like a moment, and it's not the first moment, but it is a moment where, like, uniswap, as an ecosystem, can, like, step slightly beyond what it's done and kind of continue pushing into new territory. But like, yeah, definitely new frontiers, please. New frontiers. Yeah, I say that, like, definitely the end goal, right? Is we want to create like, decentralized markets. And we want, today, people use decentralized markets because they are decentralized, but they don't. But there's a trade off. The user experience is still a little bit worse. It's still not as efficient. There's still not as much liquidity. People use it despite. But we think that in the long run, decentralized markets can actually be more powerful and stronger and have better user experience and more efficient market structures. We speak to. Even when you think about a market based approach to something versus a single company that's trying to optimize for you moving into these models, we just think that and using also all these new tricks that we've learned in blockchains and with new novel cryptography, and eventually we'll have better ZK tech, and that's going to be part of the story. This is our first step. That's a really important thing I want to get across. We want to build the ultimate decentralized order flow network. And there's a broader industry around us that is also working on these problems. We want to do it collaboratively. Teams, flashbots, et cetera. There's all these other teams that are also working towards how do we decentralize order flow? This is part of that story. But I think it's a really big moment for the industry because Uniswap is in part because of how dominant uniswap is from a, like, you know, in terms of like volume in users, like something like probably like 30 plus percentage of all gas on Ethereum is uniswap trades. And it's a, and I guarantee it's a higher percentage of MEV because, you know, Uniswap trades generate more mev than transfers. And so it might, you know, and so like, like having, I think that us kind of stepping into space is really important for kind of helping push the industry forward and also having users and being able to learn from them and kind of optimize and improve for real people that are really transacting is really useful and important. And again, we're really excited to do it collaboratively. And if these other kind of models also end up working out, like things like suave could be directly tied into things like Uniswap X, they're not also automatically competitive. We're all working towards decentralized order flow generally.
Speaker B: So what's the rollout plan for Uniswap X? How does it get started? Today, Monday the 17th?
Speaker A: Yes, today, Monday the 17th.
Speaker B: It's actually Sunday. But for us, but for you guys, we've hearing this on Monday. What's the rollout plan? How does this actually launch?
Speaker A: Yeah, so today what we have is the single chain mainnet variant is in an early opt in beta stage, meaning that when you make a transaction, when you go to the install web app, you can go into settings and you can turn it on, you can also just make transactions. And if there's a transaction that the interface thinks you will get a better price if you use Uniswap X or if not a better price, it's like, and I think again, it's like this is like the first, it's sort of like an early beta. And so it's like, yeah, it will suggest it to you and you can turn it on. Even once you've turned it on, it doesn't mean 100% of trades will route through it. It's actually going to be probably like a smaller percentage of trades, only like certain tokens, only certain trade sizes, only certain pairs, only certain, you know, like this is again like the earliest beta rollout. We want to really like test the system before we roll it out to more user, to like a full user base and for all orders. And so today what we have is a working system for the mainnet version and the ability to opt in and have some percentage of your trades execute through it. When you do, you will see that your orders now no longer cost gas. There's some minor UX tweaks that show that there's no gas being paid. It will be a signature instead of a transaction. When the transaction is pending, you can't go to ether scan because the transaction hash hasn't been created because it's just an off chain signature. So there's a few things, it's kind of like a slow rollout. We really like, this is a big moment and a big change in a complex protocol and we want to optimize parameterization. We want to give time for a competitive marketplace only exists once people join it, actually participate. And so we have some little bit of work to onboard, some initial fillers to help test the system, but we really want to give time for more people to onboard and interact before it becomes the full thing. And so this is an early version. Now, in terms of the cross chain variant, unclear. We have smart contracts right now, like stuff like parameterization. How long will it take fillers to start to integrate cross chain? They're still probably going to have to wrap their head around the single chain variant and that will take some time. As well as the front end considerations of cross chain trading, there's some other changes that probably need to be made to let you swap between different chains in terms of how we handle network connection and other things work on improvements in our web app today that make it more multi chain native. If you look at our wallet, our wallet handles multi chain very cleanly and our web app is not quite there. And so as we're optimizing the single chain variant, we're going to start optimizing our web app to be better for multichain generally. And then hopefully later this year we have the cross chain variant in our web app as well. And people will be able to make trades.
Speaker B: What service providers or what other people infrastructure is needed in order to actually get this thing up and rolling. Who do you need to hear from? Who do you need to get onboarded?
Speaker A: Yeah, I'd say that a lot of it already is. Swappers just need to use the web app as normal. Liquidity providers just need to create liquidity in the uniswap protocol as normal. I'd say that what's new there are definitely fillers and there's initially, there's initially just like an API that broadcasts orders. And so integrating that and being able to fill orders, there's already people that do block building that can start tapping into that. So we need fillers to start discovering orders. Also for the RFQ variant, definitely there's a need of people who provide quotes upfront. That's about it. I'd say that probably wallets having good UX around signature based orders will help. They all have signatures and other sites have done signature based orders before. But the more the wallets can be aware of the UX implications of this, the better. I'd say that people can start looking at the cross chain smart contracts and thinking about how to build adapters for other bridges if they wanted. If devs want to get involved in that. Generally, infrastructure around alternative a cool thing is that when a user signs an order, they're incentivized to broadcast that order as broadly as possible. They want as many fillers to discover that as possible. Similarly, if you're a filler, you want to discover as many orders as possible having redundancy at the broadcasting layer. Today we have MM pools and whatever for ethereum transactions, having alternate APIs for hosting signed orders, stuff like that could be helpful or interesting. I think over time it won't just be one API for hosting these signed orders, and that's not the goal. Things that help further the decentralization, I guess is also desired. But yeah, I don't know. That's a bunch of stuff that's a.
Speaker B: Lot of surrounding infrastructure, again, a lot of moving parts, a lot of complexity, but also protocols that harness complexity is kind of a core theme of not just the Uniswap in the last year or so, but really crypto at large, I would say. Hayden, it's been a crazy year for Uniswap. In 2023, you got the mobile wallet, Uniswap v four now Uniswap X is there. I mean, we're only halfway through the year. Are you going to be on again before the end of the year?
Speaker A: I think I'll be on. I'm expecting two to three more times in 2023, probably.
Speaker B: Oh, my God. What else is coming?
Speaker A: We got some. We got some things lined up. I can show you privately after this podcast. All right.
Speaker B: Well, apparently, bankless nation, you can hold your breath because Hayden Adams will be back for more uniswap releases. Just the absolute juggernaut in 2023. Hayden, thank you for being just such a strong bear market builder and really pushing the space forward.
Speaker A: Thank you. Thanks for having me on. And always love coming on bankless. And yeah, we're trying to decentralize finance.
Speaker B: Yes, we are. Yes, we are. And we're doing it a little bit jet lagged at the very start of ECC. Both Hayden and I landed coming from the east coast just a number of hours ago. So that's aping into ECC with the podcast. Hayden, thank you so much for joining me on bankless today.
Speaker A: Thanks for having me on.
Speaker B: Cheers. Bankless nation, you know the deal. Crypto is risky, Defi is risky. Uniswap X is a brand new protocol. It's probably also risky, too, just because all things are, you can lose what you put in. We are headed west, however, it's not for everyone, but we are glad you are with us on the bankless journey. Thanks a lot.
