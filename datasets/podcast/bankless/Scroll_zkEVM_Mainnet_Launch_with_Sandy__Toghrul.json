[
    {
        "speaker": "A",
        "text": "Hey, bankless nation. It is the roll up wars. On today's episode, a new player has entered the chat scroll. Just released their new Zke EVM to mainnet, and we've got the co founder of scroll and a senior researcher from scroll joining us today to tell us what that means. David, what are we talking about? Now?"
    },
    {
        "speaker": "B",
        "text": "Scroll is a pretty hotly anticipated layer two. It is a ZK EvM layer two. And so with all of the optimistic rollups already deployed and pretty decently along in their maturity, it's time for the ZK EVms, the ZK roll ups to enter the arena. Scroll is a unique kind of zke EvM. It's got some extra bells and whistles, some unique properties that make scroll tick. So we're going to ask Sandy and torgle about the unique properties that make scroll so interesting. And of course, we'll eventually get to win token at the very end."
    },
    {
        "speaker": "A",
        "text": "Uh, speaking of unique properties, you know what has a unique properties, David?"
    },
    {
        "speaker": "B",
        "text": "Tell me."
    },
    {
        "speaker": "A",
        "text": "This podcast right here and also the jacket that we are looking at. Okay, this is a Sukajan."
    },
    {
        "speaker": "B",
        "text": "Sujikin Suji kid."
    },
    {
        "speaker": "A",
        "text": "Okay. I don't even know. I don't even have one, David, but you."
    },
    {
        "speaker": "B",
        "text": "I do, I do. I got it right here."
    },
    {
        "speaker": "A",
        "text": "This is available to a bankless listener."
    },
    {
        "speaker": "C",
        "text": "Whoa."
    },
    {
        "speaker": "A",
        "text": "Who fills out a survey."
    },
    {
        "speaker": "B",
        "text": "Actually, the call to action is we have a survey and we need people."
    },
    {
        "speaker": "C",
        "text": "To fill it out."
    },
    {
        "speaker": "B",
        "text": "You get the, you might get the jacket if you fill out the survey. But the main thing we're talking about is a survey that we need."
    },
    {
        "speaker": "A",
        "text": "I started with the jacket, but David's starting with the survey, and that's the thing. All you have to do is fill up the survey and you have a chance to win that jacket. David, why are we doing this survey?"
    },
    {
        "speaker": "B",
        "text": "Because we have a new podcast format that we want to bring to the table, an unreleased podcast type of podcast. But we want to make sure that we are actually on target with this. So we're gathering some data about who you are, bankless listener, what kinds of podcasts you listen to, what kinds of bankless podcasts you listen to, or maybe you listen to all of them. Wow. Uh. And just kind of your background about yourself. And so if you want the bankless podcast to tune itself to a little bit more towards your desires, or maybe you just want the jacket, uh, fill out the podcast survey."
    },
    {
        "speaker": "A",
        "text": "Yeah, it's not about the jacket. It's about improving the podcast. Everybody. Yeah, do your. Do your public duty. Thank you, bankless listeners. Fill this out. There's a link in the show notes. You want to go check that out? It should take, like, five minutes of your time. No more, uh, than that, I'm sure. David, why are we talking about scroll today? Tee up this episode for us a little bit more. So the ZK EVM roles are kind of like wars are kind of off. And, you know, roll ups in general have been climbing up the leaderboard on l two beat. So a lot of them are trying to gain market share. What is special about scroll and why are we bringing them on the episode today?"
    },
    {
        "speaker": "B",
        "text": "So I think, I'm really excited to ask Sandy and Torgal about this. I think there's, like, a spectrum of difficulty of roll ups. Optimistic roll ups are, like, pretty easy, as in just like, you know, fork and replace the EVM. But now as layer two. Then we kind of get into the ZK roll ups, which with, like, Polygon and ZK sync, which are like roll ups, but ZK. But with scroll, we're on entering, like, a new frontier, which is EVM equivalent ZK rollups, which is a pretty hard thing to achieve, yet you get a huge amount of tailwinds if you do get that. And so that's gonna be. I think the main focus of some of my questions is, what do you get with Azkevm? Why do we care about scroll? What about scroll has set itself apart from its competition? Uh, so that was. That's the thing to pay attention to. Pay attention to as we go into this episode."
    },
    {
        "speaker": "A",
        "text": "So, guys, before we get into this episode, first we disclose. David and I are both angel investors in scroll. We are big fans of many different layer twos out there. And as a reminder, we are long term investors. We're not journalists. We don't do paid content. There's always a link to all of our disclosures in the show notes. Banklist.com disclosures. All right, guys, we will be right back with Sandy and Torgle. But before we do, we want to thank the sponsors, bankless nation."
    },
    {
        "speaker": "B",
        "text": "I'm so excited to introduce you to Sandy Pang, one of the co founders of scroll, the ZK scaling solution that we're talking about today. And also Torgal Marumov, a senior researcher and roll up sorcerer also at Scroll. Sandy Torgle, welcome to the bank list. How are you guys doing?"
    },
    {
        "speaker": "C",
        "text": "Hello. Hello."
    },
    {
        "speaker": "D",
        "text": "Hey, guys. Good to be here."
    },
    {
        "speaker": "B",
        "text": "Okay, so the news today is that Mainnet. Scroll. Mainnet is live. That's pretty cool. Congratulations. How does it feel, Sandy? How's it feel to have finally had mainnet live?"
    },
    {
        "speaker": "D",
        "text": "Yeah, it feels amazing, almost surreal. This has been kind of two years in the making and the team has really pulled together for this very big milestone. And I think for any kind of product team, the big product launch is really just the beginning. This is the first time we get to really meet our customers and meet the devs and get real feedback, so everything feels much more tangible and just like anything we do, it's just great when you receive feedback and hopefully that will help us iterate more going forward."
    },
    {
        "speaker": "B",
        "text": "And Torgal, you've been at scroll for as long as I've known you, but you also pay attention to the entire roll up landscape and really just crypto at large. Maybe you could just do the job of articulating why this is significant in the broad landscape of all layer twos, all types of roll ups. Why is this mainnet day unique?"
    },
    {
        "speaker": "C",
        "text": "I think I'm going to come off a bit biased here."
    },
    {
        "speaker": "B",
        "text": "I think you're allowed to do that."
    },
    {
        "speaker": "A",
        "text": "Yeah, that's permitted."
    },
    {
        "speaker": "C",
        "text": "I'm happy to do that. One of the things that we concentrated on since the beginning is maximizing compatibility with Ethereum. And at the time when this was just getting started almost three years ago, this was almost an insane idea. I remember talking to a few people in 2021 about potentially building a zeek EVM, that is EVM equivalent or compatible, and they were like, yeah, those people are just scammers. It's never going to work. And, yeah, it basically started as a wild idea that transformed into something that is finally alive on the main net today. And it's been a long road, a tiring road. I think we all need a sleep, a long sleep tonight after the launch, but, yeah, but we're happy that we're finally on the arena, playing, learning in the arena."
    },
    {
        "speaker": "D",
        "text": "Yeah, throwing that phrase yesterday. Yeah, but, yeah, no, I remember, like yesterday when we first met Toggle, I think the team was just eight to ten people and we got introduced on the Internet and I think most people thought we were kind of a joke because it was just so far fetched. But Toggl decided to join us after a 30 minutes call. He was just like, yolo. We basically spent yoloing ever since we."
    },
    {
        "speaker": "C",
        "text": "Basically signed the papers the next day after I had a call."
    },
    {
        "speaker": "B",
        "text": "Well, what was so compelling about that, Torggle?"
    },
    {
        "speaker": "A",
        "text": "Yeah."
    },
    {
        "speaker": "C",
        "text": "I think for me was the idea that the scroll aimed to be as much compatible with Ethereum as possible. And I always thought of rollups as a great extension of Ethereum and that just made a lot of sense to me. And I always thought of ZK as a more long term play versus something like optimistic rollups, which were more of a viable short term solution. But long term, I feel like all of the optimistic roll ups are going to transform into ZK rollups. So it just made it clicked from the first time I had a call with Sandy and yeah, torque."
    },
    {
        "speaker": "A",
        "text": "Why is EVM equivalence so important? Like you mentioned, it's this idea of an extension of Ethereum. I know some roll ups have gone in a completely different direction. They're like, hey, EVM sucks, we're in swap."
    },
    {
        "speaker": "B",
        "text": "We'll just settle on Ethereum and call it good."
    },
    {
        "speaker": "A",
        "text": "Yeah, but scroll is with the strategy. You guys are doubling, tripling down on Ethereum equivalents. Why?"
    },
    {
        "speaker": "C",
        "text": "So I feel like for me the argument was always, what's the purpose of rebuilding everything from scratch and reeducating people and helping them learn a new language, a new programming paradigm, etcetera, where you can use something that has almost ten years of documentation, ten years of tutorial, ten years of open source code, and doesn't matter what you want to build, most of the things already have been obviously not everything, but a lot of the building blocks have already been built out by somebody else, and it's easy to learn. So solidity, you can't even compare solidity to any other smart contract programming language because it had such a head start. And therefore it just makes sense to reuse something that has been widely adopted versus not only trying to optimize it, but also trying to attract people to actually learn and build with you that new vm and the new programming language, which is a very hard job, and only a few have succeeded since Ethereum in doing that."
    },
    {
        "speaker": "B",
        "text": "One of the compelling things about rollups, and you alluded to this, is that it's an extension of Ethereum, and really the maximally mature version of a roll up is one that has zero compromises with Ethereum. Can you just talk about the value of this and how scroll is playing in that arena?"
    },
    {
        "speaker": "A",
        "text": "Sure."
    },
    {
        "speaker": "D",
        "text": "I think some of our initial thesis was that which we still hold today is that I think Ethereum is the most decentralized and the most secure layer one, and it has this incredibly strong kind of social layer built around it. And that means many, many very convicted people and idealistic and also creative people, just very strong talents from around the world who are committed to this ecosystem for various reasons. And for us that was the most attractive thing about the community, and we wanted to build something that meets developer where they are already. We thought it was somewhat unrealistic to kind of force developers to learn something new and we wanted them to kind of leverage whatever they've built over the last couple of years, because when protocols are battle tested, when they're used by many, many users, and when brands are established within this arena, these are all things that are valuable and we want to preserve as much as possible. I think with these major building blocks, that is also the best jumpstart for the next iteration or the next innovation to happen. It didn't really make sense to kind of reinvent the whole ecosystem every time there's a new l one. It's much better to kind of encourage people to be creative and to build the next generation of things through fun and play. And part of Scroll's role is making that whole setup much more accessible. And accessible means a number of things. It means being cheaper, it means being faster, it means faster finality, and it also means maintaining the highest possible security standards. In that effect, I think scroll is somewhat. A little bit later to the mainnet launch compared to the other zkebms. But we've been in testnet for 15 months, and that means a huge number. I think something like 90 million transactions accumulated and something like, I think definitely more than 20 million unique wallet addresses on our testnets. And all of these adds up to a more, you know, a very battle tested, you know, battle tested. And we've conducted full audit with four esteemed audit firms. And internally we've always had a red team and blue team set up in order to check the cross check our work. Just the amount of precision that goes into building the ZK EVM is absolutely phenomenal. I think one day we'd love to have Haitian and Peter from the engineering team to come and talk about exactly how much detailed and granular work it takes to write ZK wrappers around every single EVM opcode."
    },
    {
        "speaker": "B",
        "text": "You mentioned the ambitiousness of what it takes to make a ZK EVM that's EVM equivalent to Ethereum. I mean, there's already been a handful of ZK evms that have shipped mainly out of Zksync and polygon, but these aren't exactly what scroll is building scrolls going. I think kind of doing the hard thing of doing the EVM equivalents with the actual, like, bytecode equivalence, which is, I think, where it collapses down to. If my technical chops are serving me well here, and like you alluded to it, that's harder. And that's why scrolls, the latest of the three, the last of the three. But to articulate the bull case for, like, EVM equivalents, is that well, while the Ethereum ecosystem has developed, while scroll has spent the hard work of becoming an EVM equivalent, CKEVM scroll gets a ride in the tailwinds of all the innovation and development that is going on in parallel. Can you talk about the, like the big important things that scroll is able to repurpose that your typical ZK EVM wouldn't be able to repurpose in its ecosystem?"
    },
    {
        "speaker": "C",
        "text": "So one of the goals that we had since the beginning was to reuse as much code that has already been built for Ethereum and battle tested as possible. Obviously, there are still a few changes that we introduce here and there to optimize things, but the goal was to, instead of building new clients, building new tooling, building everything from scratch, and then having to audit everything, having to run bug bounties for everything, we just reuse stuff that was already built for Ethereum, modify certain things, optimize certain things, but we have this surface area that is much smaller in terms of new code being introduced on the client side, for example. So in our case, we currently reuse geth, a slightly modified version of geth. But we can also adopt Aragon or Nethermind or any other execution client, easily, because we're compatible with the execution trace of Ethereum. So that allows us to not worry about that side of things and only worry about the bridge, the prover and the sequencers, and the efficiency of the roll up and trust and rely on the existing battle tested code to basically carry on what Ethereum has been doing great in terms of being stable, being secure, and being immune, or almost immune to faults and halts, if that makes sense, it does."
    },
    {
        "speaker": "A",
        "text": "Is it the case that all of the things, all of the apps that work on Ethereum now kind of work right out of the box on scroll? Or is there any kind of modification a dev or a building team needs to do in order to make it compatible with scroll?"
    },
    {
        "speaker": "C",
        "text": "Ninety nine point nine nine nine nine nine nine. Percent of the apps will work out of the box. So the only thing that we currently don't support is self destruct opcode. And the reason why we don't support it is because Ethereum is planning to deprecate it soon, and there's no point for us to support something that is going to be deprecated, let's say, in half a year or a year."
    },
    {
        "speaker": "D",
        "text": "So I think everything works in effect. And our mainnet slogan is called copy paste and deploy."
    },
    {
        "speaker": "A",
        "text": "You guys are encouraging copy paste, huh?"
    },
    {
        "speaker": "D",
        "text": "That's not what we mean. What we mean is that whatever you've already built that deployment process is super easy and seamless. Having that set up, it means there's actually less point in building copy and paste projects because it's so easy for projects are already established to come on scroll."
    },
    {
        "speaker": "A",
        "text": "Yeah, that seems like a superpower. So in all of the ancillary infrastructure as well work. So we're talking about like wallets, you know, like metamask or block explorers, like an ether scan and all just kind of clicks in and works without modification, right? Yeah, that's really cool. So tell us about this roll up itself. So why are we doing roll ups in general? We're trying to scale Ethereum. Okay, so what does that mean for something like scroll? Like how many, how many ethereums is it inside of scroll? Like, how many ethereum main nets are we talking? Or like what's the transactions per second that scroll can kind of support? I realize these are sort of imprecise types of ways of measuring it, but maybe then the question is, how do you measure it? How much scale are we actually getting out of scroll?"
    },
    {
        "speaker": "C",
        "text": "So I think it's difficult to say the precise number in terms of tps, but you could easily estimate that if we remove the bottlenecks related to Ethereum, so, like data availability, et cetera, et cetera, we can easily do an order of magnitude, and probably even more than that, without having any issues. There are obviously other things that we need to optimize that we still inherit from Ethereum. So one of the problems that we inherit, as every other Zk rollup does, is state growth. And so essentially, at some point we're still going to have to solve it. But because we don't need to optimize for Raspberry PI's, that's not such a big issue for us as it is for Ethereum, and therefore we can squeeze out a lot more performance. And because it's done off chain and the computation is only essentially done by one prover, the cost per user is significantly cheaper because you don't have to ensure that it's replicated amongst thousands or even tens of thousands of full nodes."
    },
    {
        "speaker": "A",
        "text": "Okay, so order of magnitude more in terms of scalability then. And then remind us."
    },
    {
        "speaker": "C",
        "text": "And that's the starting point. That's the starting point, yeah, it's going to get better."
    },
    {
        "speaker": "A",
        "text": "Okay, what's it going to be getting better with? Like the next eIp that allows for blob space on Ethereum? Is that going to help scroll at all?"
    },
    {
        "speaker": "D",
        "text": "Regardless of ethereum level upgrades, there are plenty of optimizations that we could be doing. And there are a few low hanging fruits that we will be getting to in the next three to six months. And I think we can expect scroll to be, in order to organize management faster than Ethereum mainnet in its current form within the next year."
    },
    {
        "speaker": "A",
        "text": "Yeah, it's funny, I know you mentioned at the very beginning you guys mentioned, I think, Torgal, you're talking about this where back in 2020, 2021, it seemed like an Ethereum equivalent. Zk evm would be years away. In fact, I remember a blog post from Vitalik where he talked about how far away it was. Like, this would be nice one day, but it's probably many years away. And he was talking like five to ten years kind of timeline. And the ability to actually develop a ZK eVM, it felt almost like sci-fi tech. And it was. I mean, I remember coming away from that post and other conversations about this weird Zke EvM type thing, thinking that that'll be nice one day and describing it almost as like the holy grail of Ethereum scalability. And now here we are, we've made it. Can you refresh us on why ZK is the direction? Why is it referred to as the holy Grail? What benefits do we get from ZK rollups versus, say, our optimistic roll up cousins? There?"
    },
    {
        "speaker": "C",
        "text": "There are multiple things that the benefit from ZK. So one, just to establish the basics here, a lot of people, when they hear ZK, they just automatically think privacy. But in reality, the reason why we use ZK is not for privacy. The reason why we use ZK is that the modern proof systems have this property that we refer to as succinctness, which means that you can verify them much cheaper than what it took to compute them. You can think of like a very costly execution. And instead of re executing that entire execution, you can just verify one proof. And it is essentially equivalent to just recomputing that costly execution. And you can see how you can gain a lot by just outsourcing that execution to one or two full nodes that do the execution. Then they compute the proof for it, propagate the proof to everybody else, and everybody else can just verify the proof and they're done. They don't need to re execute anything, they don't need to verify anything, et cetera, aside from that proof. And on top of that, you gain from the fact that ZK allows you to have faster finality relative to optimistic rollups. Because the way optimistic roll ups work is they assume that you're innocent and there you're proven guilty, and the bridge allows a certain period of time for anyone to challenge and to prove that you're guilty. So essentially the state that you posted is incorrect. And usually that challenge window is measured in days, whereas for ZK rollups, the finality time is measured in minutes, because as soon as we compute the proof, we can just publish the proof, verify it, and that's it, we're done. We don't need to wait for anything. Therefore, you can see how using ZK we benefit from both by having the computation outsource to a few large nodes. And also on top of that, we benefit from the fact that you can just do it quickly and you don't have to wait to transact and send messages in between layers."
    },
    {
        "speaker": "A",
        "text": "So how do users benefit from this? If I'm a user on scroll versus a user on an optimistic roll up, like will I feel any difference? Will I see any benefit? Or are these kind of like under the covers, you know, hidden benefits?"
    },
    {
        "speaker": "C",
        "text": "I think for now there's not going to be a lot of differences unless you try to exit to an l one. If you try to exit from an l two to an l one, then you'll feel the difference, because with a Zk you're going to have to wait for a maximum for like 30 minutes, whereas with an optimistic roll up, you'll have to wait for a week. But the thing is, the more that the throughput the roll up can handle and the more we scale, the more those benefits translate into something tangible for users. It might not be very noticeable now unless you withdraw back to an l one, but it'll be noticeable when we are processing thousands of transactions per second."
    },
    {
        "speaker": "B",
        "text": "And that finality time between the layer two to layer one. Well, optimistic roll ups. When I transfer out of an optimistic roll up, it doesn't take me seven days. It takes the market makers seven days to really do that work for users. But you're talking about users as like, well, the market makers are users too. It'll take them seven days out of an optimistic roll up and only 30 minutes out of a ZK roll up, like scroll. The way that that translates into the end user is that, well, fees just are much cheaper. And so, I mean, it's going to be the same speed out of an."
    },
    {
        "speaker": "A",
        "text": "Optimistic because you're not paying a market maker any, you know, a much, a."
    },
    {
        "speaker": "B",
        "text": "Much lower tax like market making is going to be much more competitive between a ZK roll up and the layer one versus an optimistic roll. That's my intuition. Is that right?"
    },
    {
        "speaker": "C",
        "text": "To some degree, yes. But what you're talking about specifically is value withdrawals and when you were growing tokens. But also assume that, like, there's going to be a lot of cross chain messaging, like, let's say message from an l two to an l one app, then you can't really go through a liquidity bridge. You are dependent on the bridge. So for example, an example that I always bring up that Tali is potentially researching is doing the voting for a DAO on an l two and then just sending the result back as a message to an l one saying, oh yeah, this was the vote and this was the result that was accepted. And here are the changes that you have to make to the contract or whatever. So in an optimistic roll up, you're stuck. You'll have to wait for a week, whereas with a ZK roll up, you just wait for whatever, like 10, 20, 30 minutes and you're done."
    },
    {
        "speaker": "B",
        "text": "I think the way that I would just express this is that all rollups are asynchronous with each other by default. But some rollups can sync quicker to global state than others and that is going to be because of that messaging bridge. I want to ask about just mainnet launched and what's on the chain. Like, what's there to do? Is this a main net for developers? And now developers need to come in and build the attractions, build the apps. Users can therefore also bridge on. But is there anything for users to do in this present moment? What does the next rollout phase look like over the coming days and weeks?"
    },
    {
        "speaker": "D",
        "text": "We've had our Genesis block a week ago and we've opened up the space for infrastructure projects to come on. The opening of the public bridge UI means users can bridge funds to scroll and developers can start deploying their dapps. So I'm not entirely sure what's been deployed so far. It's only been a few hours, but I've been told there's already a Sandy token, which I promise."
    },
    {
        "speaker": "A",
        "text": "Is that why you came here, Sandy? To shill your Sandy token?"
    },
    {
        "speaker": "C",
        "text": "The latest meme?"
    },
    {
        "speaker": "D",
        "text": "That's not."
    },
    {
        "speaker": "C",
        "text": "That's not why we're here."
    },
    {
        "speaker": "D",
        "text": "That's not why we're here."
    },
    {
        "speaker": "A",
        "text": "Okay. More exciting things afoot. Okay. Yeah. So the apps will be coming then? Over the weeks and months to come is really what you think?"
    },
    {
        "speaker": "D",
        "text": "I expect a lot of apps will be deploying relatively close to the mainnet launch."
    },
    {
        "speaker": "A",
        "text": "And why should they come? Like, what's a pitch for an app? So let's say I've got a kind of a cool defi app on main net. It's working well. Gas fees are high. I got a lot of different roll ups I could deploy to. Why should I deploy on scroll?"
    },
    {
        "speaker": "D",
        "text": "I think some dapps have a multi roll up strategy. And so for those types of dapps, the main sell is for us about removing friction for them. And that's why we have this copy paste deploy campaign, because it's so easy for them to self deploy on scroll. It's kind of like a why not? It removes that why not? Scenario. Then there's another pitch for applications that only work on scroll. So there's a number of ZK applications that are trying out really unique things that works uniquely with the scroll, ZKE VM for various reasons. Then there's another type of things that are, just because of the nature of scroll being a little bit cheaper and hopefully a lot cheaper very soon and also a lot faster, it opens up the design space for something that is a little bit further away from the core financial applications and a little bit more in the arena of fun and maybe frivolous and maybe just kind of like, hopefully useful type of stuff. This is kind of like, I think a slightly old analogy that I really like is that whenever the Internet or broadband increases throughput by an order of magnitude, it opens up a whole arena. And with each order of magnitude of increase in Internet speed, that's when Facebook happened, and that's when Instagram happened, and that's when TikTok happened and so on and so forth. So we're at this moment where a new generation of applications are already the infrastructure support there is ready. But what's going to be appearing is, who knows? And as to why they would build on scroll. We're hoping the where we're hoping to build an environment that is helpful for developers, where we're trying to be accessible and we're trying to build a vibe that is like cool and conducive to doing creative stuff. How we do that, that's kind of up to toggle. I'm kidding."
    },
    {
        "speaker": "C",
        "text": "It wasn't. I'll be honest."
    },
    {
        "speaker": "A",
        "text": "Toggle is a tastemaker. So, you know, thanks for throwing me."
    },
    {
        "speaker": "C",
        "text": "Under the bus here."
    },
    {
        "speaker": "B",
        "text": "I do enjoy the timing of all of these. ZK EVM is coming online to be right before EIP 4844. I know we got a number of months before that comes, but not just one order of magnitude with the ZK element, but a second order of magnitude with a 4844 element. Guys, there's a few more questions that I want to get to. Of course, just there's in the other roll up landscape there's the conversation of the chain development kit. I want to ask what scroll is strategy around here, but also just future roadmap. What is next? I mean, we talked about all of the extra juice that's left to squeeze out of innovations, but I just want to talk about the scroll roadmap. And if there's a token on that roadmap, I'm going to ask you all these questions. But first, a moment to talk about some of these fantastic sponsors that make this show possible."
    },
    {
        "speaker": "A",
        "text": "We are back talking to Sandy and Torgal, and we're talking about scroll just went mainnet this week, so very exciting. Time to go mainnet. Zke evm. Here we are. I have a question for you. As I was during the break, I was scanning through our friends over at layer two beat and look at all of these different layer twos. First of all, bullish. Like, oh, my God, bullish. Now we have dozens of layer twos. I feel like soon we'll have hundreds of layer twos. I think from a bankless listener's perspective, they might be asking the question, okay, how do all of these things stitch together? How do we prevent fragmentation of the Ethereum ecosystem and ethereum liquidity? How do we abstract this for users? Does a user necessarily care what layer two they're on? Do they need to know the difference between scroll and Zksync and arbitrum and optimism, all of these things. Isn't this for the crypto nerds? I wanted to ask this question of you. Now that we have all of these layer twos, how do we stitch them together? Is there a way to do that? Are the devs working on something here?"
    },
    {
        "speaker": "C",
        "text": "So it's a bit of a two phase problem. So there's a theoretical problem of how you actually handle communication. And the second problem is how do you improve ux, where an average user doesn't really know or care which l two they're on? Realistically, at least from our opinion, we're building for the developers. And so for us, as long as the developers know where they're deploying, that's the main goal for us. The users are free to think that they're using Ethereum or scroll, but as long as the developers know, that's our goal. From the UX perspective, you can always optimize things. You can, for example, define new address types that basically also define which chain you're sending it to, aside from the address itself, et cetera, et cetera. And on the technical side, the short answer will be ZK, a bit of a longer answer would be, how do we do that with ZK? One, there's a lot of prover efficiency improvements that are expected to happen in the next year or two. So I feel like within the next two years we won't be talking about proofs that are taking minutes to compute, but more like proofs that are taking tens of seconds or even seconds to compute. And now we're getting to almost real time composability where you can basically compose within a block. And on top of that, there are a few people that are building different tools using Zk that will allow you to compose directly without going through an l one. So for example, one of the ideas using storage proofs, which means that you can use Zk to prove that a certain state has been stored in a certain way and directly bridge to another l two without waiting for the message to be passed through an l one. And so there's a lot of stuff that is being researched on at the moment and is being in a development phase. So I feel like for the next year, or maybe two people are still going to struggle with like, oh yeah, do I have eth on this l two? Oh, how do I get eth in order to buy this token or whatever? But it's not going to be a long term problem."
    },
    {
        "speaker": "A",
        "text": "It's not going to be a long term problem. That's what I wanted to hear. So it's like, if I'm on scroll, how do I get my assets on some other Zk layer two? Is there going to be a way to have that bridge be very seamless, or am I going to have to exit back to Mainnet and then go back to another layer too? Is it the same if scroll is connecting to another zK EVM versus an optimistic roll up? How is this going to work? I don't think we've got all of these different states of Ethereum, but we don't have our interstate highway yet. I feel like we've still got a lot of fragmentation."
    },
    {
        "speaker": "C",
        "text": "Yeah, there's still no standardization of how the bridges work, etcetera. I feel like it's going to happen at some point. The conversations are already starting about standardizing certain things, not bridges for now, because I think it'll be quite difficult to standardize such a complex construction, but more simple things. So, for example, there are a few l two teams that are discussing the possibility of introducing a new l two specific transaction type that will allow us to basically easily deal with the fact that we both have to pay the user both has to pay for the l two cost and the l one cost, which ethereum doesn't really care about. So the current solutions are very hacky, but they're not very ux friendly. And so I feel like those conversations are going to continue. And at some point we're going to get to EVM standardization, bridge standardization, et cetera. And with ZK, it's just a question of how fast you can compute the proof. If you can compute the proof within seconds. And even if you go through an l one, it shouldn't take you that long to bridge from one l two to another. And on top of that, you can think of things like storage, proofs, et cetera, et cetera. And there are still probably things that we haven't come up with that are going to come up in the next year or two that are going to be even better than what we think is a state of the art right now."
    },
    {
        "speaker": "B",
        "text": "I think inside of the roll up industry in 2023, it's been really a story of chain development kits. The op stack, of course, absolute gargantuan with the base base chain and all the other op stack forks that have happened. But they're not alone, of course. The ZK stack from Zksync, arbitrum orbits polygon supernets. Scroll. What is this? Is scroll entering this arena?"
    },
    {
        "speaker": "D",
        "text": "Well, I think we've just been so heads down building mainnet. I think we need to take a minute to help the network stabilize and do a little bit more research about what developers and ecosystem projects actually want. I think there's no point in doing something unless there's real demand. And we're going to focus our efforts on doing research to validate some of the directions that we're going to go to after mainnet."
    },
    {
        "speaker": "B",
        "text": "Okay, so not, not coming anytime soon, potentially in the future, just not your focus. At the present moment, we're a completely."
    },
    {
        "speaker": "D",
        "text": "Open source project, so if there's anyone that wants to do it, you know, we're completely, you know, we're happy to help. We're happy to help. It shouldn't be a big lift anyways. But, you know, insofar this demand for more standardized products in terms of like a stack access package, I don't think it's a very difficult thing to do from here."
    },
    {
        "speaker": "B",
        "text": "Sure, sure. Well, I know mainnet is a very big deal, and I don't want to stress you guys out, but what do you guys focus on now? What's next? What are the kind of the next steps for scroll? What do you guys focus on in the weeks and the months."
    },
    {
        "speaker": "D",
        "text": "Well, talk about journey."
    },
    {
        "speaker": "C",
        "text": "Yeah, you just said weeks. And I'm thinking to myself, we were just spending some time today talking about what scroll is going to look like in five years."
    },
    {
        "speaker": "B",
        "text": "You can answer either one."
    },
    {
        "speaker": "C",
        "text": "Yeah, we have quite a long roadmap. A lot of it is still up in the air, and a lot of it is still an open research problem that we're trying to solve. But there are a few things that we're going to focus on. One is optimization. There are still a lot of low hanging fruits in terms of the implementation, et cetera, et cetera, that we can optimize to squeeze out more performance to make the transaction cost less for users, et cetera, et cetera, out of our implementation. Another big, big focus for us is security, because as we all know, most of the roll ups, I have to, by law, I'm required to say that fuel version one does not have a multisig. But aside from that, all the other roll ups have a multisig and they're upgradable in one way or another."
    },
    {
        "speaker": "A",
        "text": "Can I ask you about that, etorgel, real quick? This is something I think bank listeners will be familiar with on layer two beat, sort of the different stages of how decentralized they are. And it looks like according to layer two beat scrolls in review right now, but, yeah. So what is your plan to collect all of the stages, all of the layer two beat badges, and be kind of fully decentralized? What does that look like while we're here?"
    },
    {
        "speaker": "C",
        "text": "All pieces of the pie from."
    },
    {
        "speaker": "A",
        "text": "Yeah, right now, I think arbitrum is maybe in the lead, at least according to arbitrum."
    },
    {
        "speaker": "C",
        "text": "If you ignore the gate and fuel v one, arbitrum is basically in the lead."
    },
    {
        "speaker": "A",
        "text": "Okay."
    },
    {
        "speaker": "C",
        "text": "Yeah."
    },
    {
        "speaker": "A",
        "text": "So what's scrolls plan for this?"
    },
    {
        "speaker": "C",
        "text": "So it's a multifaceted problem. There are a few things that we need to work on. So, one, we currently don't have forced transactions just because of the way the ZK circuit is implemented, but we're working on it, and we're going to introduce them relatively soon. That will allow us to have censorship resistance that is guaranteed by Ethereum. Another thing that we're working on is a multiprover, and we've been actively working on it for almost a year at this point, which is also going to be introduced soon. And that will allow us to basically not rely on the security of our current proof system. So let's say if our current proof systems system fails for some reason, there's still another proof system that ensures that somebody cannot steal money. If that ever happens for some reason, then we're also working on decentralization. There's some research going on about sequencers improvers. I published an article a few months ago about multi verifiers, which is more about securing the validating bridges, because one of the main concerns for us, and I think for any roll up builder, is how to ensure that your smart contract doesn't have bugs. And that's a really big problem. We know how many defi apps have been hacked and since 2020, and how many millions have been stolen. And so what multi verifier allows us to do is to have two identical implementations of the bridge in two different languages, let's say in solidity and Viper. And then the transaction or the batch is only accepted if both of them agree that the entry to the storage is the same, which means that even if one has a bug in it, the other will catch it and prevent it from allowing people to steal the money. And then with combined data and the multiprover, where essentially we're limiting the attack surface to a specification bug. So let's say if we define the protocol in a way that allows people to steal money, but that can be also minimized via formal verification, and that gets us to the point where we can essentially remove upgradability and be fairly sure that there's not going to be any urgent bug that we need to fix without having delayed upgradability that will allow users to exit if, let's say, there's a malicious upgrade initiated by us or by the Security Council, or however we decide for the upgrade ability to work."
    },
    {
        "speaker": "A",
        "text": "This is a side question, Torgle, but I'm just curious if we were to zoom out here. I know from what Sandy was saying earlier, you kind of took the job a day later after your first conversation, which means you were making a bet not only on your career and kind of this team, but on the technical direction of scroll. And that was very much an ethereum aligned, modular type of direction. And one thing I appreciate about utorgal on Twitter is you're not afraid to push back on other people's theses and opinions and that sort of thing. And I think right now, crypto is trying to figure out what the next era really looks like. And there's kind of a question of does the monolithic vision succeed? Something like Solana. They're pursuing a specific direction. I think they call it kind of integrated. Wherever we're not doing this layer two thing, we're just putting it all on Solana. We've got cosmos down here with this network of chains, independent side chain city states, as they call it. And then we've got Ethereum over here, which is this modular vision of the world where we're sectioning out, but we're settling back on Ethereum. What do you think those other two communities get wrong? What do you disagree with them on the most? And why have you decided to kind of invest your career and your time and your mental space and everything in this specific direction?"
    },
    {
        "speaker": "C",
        "text": "I actually don't think we disagree that much. I think Anatoly, we had a debate almost a year ago at this point, and he mentioned that we agree on most of the things. The only thing that we really disagree on are implementational details. And so I feel like we all three communities agree that about the values of decentralization, censorship, resistance, et cetera, et cetera. It's more about how you approach it. And I feel like I'm very much aligned with the original vision of Ethereum, or of having this big chain that can facilitate millions of transactions that can be verified on a raspberry PI, for example, or your laptop that doesn't need quite high end hardware, if not a server to be verified and run. And with l two s, that allows, that basically translates into reality. That allows us to translate into reality because we outsource the execution to l two s. They do all the execution, they publish the proofs on chain, and we can still verify all of those l two s via this small machine like a raspberry PI, or let's say your old laptop at home or whatever. And so from that perspective, I'm very much, I would say, aligned with the vision, with the original vision of Ethereum. But, yeah, but there are certain things that I obviously disagree with, but then we all kind of have our personal opinions about certain implementational details here and there."
    },
    {
        "speaker": "A",
        "text": "Like what? Like what are the main implementation details that are different here?"
    },
    {
        "speaker": "C",
        "text": "I feel like one of the things that, I feel that a lot of people in the Ethereum community kinda underestimate the importance of. People talk a lot about it, but there's not a lot of work being done, estate growth, and realistically, that's the fundamental bottleneck of Ethereum. And it's gonna be a fundamental bold neck for all the ZK rollups as well. And roll ups in general, not just ZK roll ups. And so I feel like, and myself included, we can put more effort into researching it and actually finding a solution. There has been some research done, but it's been sporadic and it hasn't been at the same level as, let's say, 4844 research or a lot of other subjects that have been quite deeply researched."
    },
    {
        "speaker": "B",
        "text": "Certainly a rabbit hole for a future bank list podcast episode. For sure. State growth has been this looming gargantuan in the background ever since. I've always gotten into Ethereum and never really actually seemed to have gone head on. So I guess that's exactly what you were articulating, torgle. But that's some deep 120 iq technical level stuff. I wanted to zoom back out and ask the stupid question. Win token."
    },
    {
        "speaker": "C",
        "text": "We just launched the main net. I was just talking about this like."
    },
    {
        "speaker": "D",
        "text": "A silence of like, who's going to."
    },
    {
        "speaker": "A",
        "text": "Jump first on this one?"
    },
    {
        "speaker": "C",
        "text": "I was just talking to our Devrel team who travels through a lot of conferences and I was like, finally, no more one main net questions."
    },
    {
        "speaker": "B",
        "text": "Oh no, there's always a when."
    },
    {
        "speaker": "C",
        "text": "Yeah, yeah, then you have one token and yeah, I don't know. I'll let Sam do your answer. As Louis Guthman loves to say, I can't answer for legal reasons."
    },
    {
        "speaker": "D",
        "text": "Quote Louis here as well."
    },
    {
        "speaker": "C",
        "text": "Let's just blame Louie for everything."
    },
    {
        "speaker": "B",
        "text": "Well, congratulations, guys. Main net is always a huge day, just not just for scroll, not just for what you guys are building for, but for Ethereum as well. When something that is the EVM gets extended by line item for line item bytecode for bytecode. I don't even know if that's the right way to describe it, but it makes sense to me into a layer two that makes me pretty excited because this is about scaling trust scaling cryptography and this is really why we're all here. And so this is a big day for all of us at Ethereum, I'd say."
    },
    {
        "speaker": "D",
        "text": "Yeah, I would implore every, all the bankless listeners to check out our main ad, check out our developer docs and deploy something fun. You know, I think my mom's going to deploy a contract that says every pound I lose she's going to give me a bit more pocket money."
    },
    {
        "speaker": "A",
        "text": "Wow, thanks, mom."
    },
    {
        "speaker": "D",
        "text": "Write a contract that detects pay from toggles. Check every month, every time."
    },
    {
        "speaker": "C",
        "text": "She's going to leave me with no money forever, basically."
    },
    {
        "speaker": "D",
        "text": "So for everyone to experiment and build lots of fun things."
    },
    {
        "speaker": "A",
        "text": "Well, the mom driven smart contract market is probably an untapped niche for crypto."
    },
    {
        "speaker": "B",
        "text": "So I'm telling my mom this one."
    },
    {
        "speaker": "D",
        "text": "Yeah, new builders and new use cases."
    },
    {
        "speaker": "A",
        "text": "Okay, so where do people go if they want to check? Scroll out. Where's the place for them to go? As we end this podcast, their website."
    },
    {
        "speaker": "D",
        "text": "So the place to go is our website. Scroll IO. That's s c r o l l I o."
    },
    {
        "speaker": "A",
        "text": "There we go. Into the frontier. A new layer two. This one, a zk evM. That is equivalent to the EVM on Mainnet. It's an absolutely massive, super aligned, the."
    },
    {
        "speaker": "B",
        "text": "Most aligned ZK roll up that we've gotten for all the aligners out there."
    },
    {
        "speaker": "A",
        "text": "Yeah, very aligned. That's been a theme this week for sure. Guys, thank you so much for joining bankless, telling us all about. It's been absolutely fantastic."
    },
    {
        "speaker": "D",
        "text": "Thank you so much for having me."
    },
    {
        "speaker": "A",
        "text": "Bankless nation, you guys have your to dos. Go check out scroll. You heard the website. Go explore the frontier as we are every single day of the week at bankless. Risks and disclaimers, of course. Gotta let you know, crypto is risky. You could lose what you put in. That includes layer twos. There are hidden risks there. We are headed west. This is the frontier. It's not for everyone, but we're glad you're with us on the bankless journey. Thanks a lot."
    }
]