[
    {
        "speaker": "A",
        "text": "This episode is brought to you by Shopify. Forget the frustration of picking commerce platforms when you switch your business to Shopify, the global commerce platform that supercharges your selling wherever you sell. With Shopify, you'll harness the same intuitive features, trusted apps, and powerful analytics used by the world's leading brands. Sign up today for your dollar one per month trial period@shopify.com. tech all lowercase. That's Shopify.com tech."
    },
    {
        "speaker": "B",
        "text": "Hey everyone, if you like this podcast, go behind the paywall to get privileged access to the smartest minds in finance. Join the real vision community and learn how to become a better investor. Visit realvision.com rvpod and use the promo code podcast ten. That's podcast ten to get 10% off our essential membership for the first year. Now to the top analysis of today's crypto markets."
    },
    {
        "speaker": "C",
        "text": "So we're going to do something different with this interview. This interview is with Evan Chang, who is the co founder. He came out of Facebook on the Libra project and is the co founder of Sui, which is one of these giant new layer ones. And I think it's a really interesting ecosystem. But the issue is here is I'm actually sit on the Sui foundation here in the Cayman Islands advising on where they allocate capital to develop their ecosystem. So I need to step aside and let Santiago Velez, who's much more knowledgeable in the complexities of new layer ones and protocols, to talk to Evan and we can figure out ourselves what you think of it all as well. So again, I'm trying to be impartial and make sure that everybody's aware that I do have a vested interest in this. There's obviously no money change hands to do this or anything else. It's because they're a new large player. We've also had aptos who also came out of Facebook. They've been on the platform as well. It's all in the general manner that we believe that things should be done at real vision, which is everybody should have a voice. Okay. I hope you enjoy it. The world of crypto is an incredibly exciting journey that we're all going on together. We don't know where it's leading to, but we know it's going to be absolutely massive. Join me, Raoul Pal, as I guide you on our adventure to discover just what this new world will look like."
    },
    {
        "speaker": "D",
        "text": "Welcome to real vision adventures in crypto. Obviously, I'm not Raul, not as good looking, but I'll do my best to fill in today. Full disclosure, Raul has some positions in the company we're going to discuss today in the ecosystem. So he invited me to speak objectively and explore this project for everyone watching. So I hope that we can all learn something together. This is the first time I'm doing a deep dive on this project. So thank you for joining us. I'd like to introduce today even Cheng, who is the co founder and CEO of Mistin. Welcome, Evan."
    },
    {
        "speaker": "E",
        "text": "It's my pleasure to be here."
    },
    {
        "speaker": "D",
        "text": "Excellent. So let's first start off with kind of your personal background. Tell us a little bit about you, how you got into this space, web, three, blockchain, crypto, and then we'll get into a little bit of a deep dive on the protocol itself."
    },
    {
        "speaker": "E",
        "text": "Yeah, so sure. I've been in the tech business for now, I'll say about 26 years, did a bit of startups early in my career, then joined Apple for ten years. That's where I make my mark. I was the person who is in charge with a lot of very, very difficult, low level, bare metal type of software. And I received a 2012 ACM software System award for my work, along with my colleague Chris Lahner for my working LVN. Just to give you an idea that aware is also won by people who invented things like TCP IP, Java, web browser. So my software has reached every billions, literally many, many billions of people, people using every cell phone, every smart device, Android, iOS, every watch, smartwatch out there. So it's giving me a taste what the open source software impact can be and how powerful it is. It gives me the thirst to do something big again. And after ten years at Apple, as recruited to Facebook, we were building our organization. But then a couple years in, I sort of got the crypto bug. I think this is about 2017, maybe. I saw opportunity on both sides. One is the opportunity for this technology to deliver massive impact to the world and also my personal opportunity for delivery impact, because I saw some very, very critical mistakes in the design of ethereums and others. I think that's unsolvable. It doesn't even seem to be a recognition of how broken they are, specifically things around stability and more and more. And so I saw, hey, this will be great opportunity for me to sort of do that again, right? You know, opportunity to deliver the impact to massive number of people again. I love doing things that's hard. So that gave me this idea. This is something I want to take on next, so. But the tricky part is this is back in 20 1718. And I look around, there's just not enough sort of the kind of talent I was looking for. I want to do some real serious R and D on this. I want the world class experts in distributed system, in program language, form of verification, in cryptography, economics and all that. And I wasn't finding those talent that's interesting in the space, given how early it is. Right. It's a bit, also has a bit feel of a bit wow, wow west to a lot of people. So that wasn't possible. So I stuck around until the librand project came about and then I joined Novi to basically run R and D there. So that sort of started my official journey into the, you know, into blockchain crypto world. Fast forward a couple years in 2021, it was very clear Dion wasn't able to deliver on its promise because regulatory pressures and other, you know, my co founder and I left to start messenger Lab, and since then we built sui and launched just a month or so ago."
    },
    {
        "speaker": "D",
        "text": "That's fantastic. That's an incredible, very long a view of a journey through all the different iterations of the Internet. And of course, along the way, you noticed many of the problems for each phase. And one would argue that the problems that are occurring now in what we would call web three, and we'll get into that definition. As you see it, there is some problems that you hope to solve. So first, can you maybe talk a little bit about some of the primitives that are used in each phase? You mentioned TCP IP and phase one, and we had social networks in phase two. What problems? And then what primitives kind of arose to help solve those problems and move on this iteration, this journey, perhaps you're."
    },
    {
        "speaker": "E",
        "text": "Talking about how the Internet has evolved. And I think it's very important to go back to the premises of the Internet is actually peer to peer. It's allow any two individuals to be able to connect. It's about the ability for anybody to create efficient marketplace. So TCP Ip is very, very low level primitive. You build protocols on top of that for emails, for file transfer and all that. It's all very peer to peer, and that's powerful because it allows anyone to create a efficient marketplace. So you are not constrained, you are equal playing equally in the playing field. Fast forward to web two. Well, it's not, right. You know, the web is extremely centralized, right? It's going back to, well, power law, right? If you have the network fat, you have the distribution power, you get to control anything, you know, anything from content distribution. When you talk about Instagram, Twitter, YouTube, TikTok, you name it, right? Almost every single one of these platforms build on the essentially the content created by user, user generated content. But most the user never profit from them directly. At least there's no transparency on how their data is being used for advertising. Then they actually can take that connection out of the product, the platform, right? Think about it. Your social graph on Twitter, you can't really utilize it outside of Twitter. Same thing with all the other platforms. So it's becoming very centralized and there's a cost people don't recognize. The cost is being passed down to the consumers. And if you look at more directly, say application, distribution channel, they all take a cut, right? You know Apple with app store is dominant, right? They take a 30% cut on just buy everything in apps, purchase, take 30% or whatever percentage is, and also place a lot of restrictions on what you can and cannot do, right? So it's like every layer sort of squeezed the layer above, right? Using the distribution power to squeeze. Perhaps more subtle is the harm it has. Small medium business, right? If you think about it, I bet there are studies out there should do more about this. Small medium business is a lifeline. Is these kind of using social as a target customer acquisition channel? Well, so while great, the policy of app tracking has fundamentally, perhaps Apple and others will argue this for the good, right. You need to evolve with the time to kill mobile privacy. But the flip side of that is, well, attribution is far worse than before we saw this directly. Snapchat still hasn't recovered. Facebook has recovered some, but not fully target advertising. Far less effective, far more expensive. All these costs are passed down to consumers. It's also very restrictive on what you can do. So that's a fundamental issue here. When people talk about web three, that's what's about. Can we go back to a world that's more peer to peer and that's distribution, that's monetization. It's also about, even for brands, it's about reaching your audience directly, have that direct relationship, not through some middlemen, that control access of the information. So a lot of things has gone wrong. And this is a technology that could shift the balance of power a bit more towards decentralization or more peer to peer."
    },
    {
        "speaker": "D",
        "text": "Hey, everyone, we're going to take a quick pause and hear a word from our partners. We'll be right back."
    },
    {
        "speaker": "F",
        "text": "This podcast is sponsored by Ramp. Are you the decision maker in your company? Consider this. For the first time in decades, there's a better option for a corporate card and spend management platform. Meet Ramp, the only corporate card and spend management system designed to help you spend less money so you can make more. With Ramp, you get full visibility into your company's spending and control who spends what. With each vendor. Ramp's software collects and verifies receipts instantly. To save your team valuable time. Ramp automates data entry and routine tasks with automated approvals, expense categorization, and bill payments, time consuming tasks, which means you'll stop wasteful spending and close your books in hours instead of days. Businesses that use ramp add up to 5% to their bottom line the first year. If you're a decision maker, adding ramp could be one of the best decisions you've ever made. Get dollar 250 when you join ramp for free. Just go to ramp.com easy. Ramp.com easy rmp.com easy cards issued by Sutton bank and celtic bank members at DIC. Terms and conditions apply."
    },
    {
        "speaker": "D",
        "text": "So how does blockchain technology. And we'll get into your specific version of your vision, but how do you see that as solving the problem? Is it the incentive systems that are broken? Is it the access to a software stack or protocol? What is it that is really broken? How can we fix it with this tech? How does that work?"
    },
    {
        "speaker": "E",
        "text": "Yeah, I mean, let me give an example to illustrate that, right? So people talk about using NFT as a way for content producer to reach the audience, right? You can sell directly. So you have basically this triangle, right? Content producer or product producer, the buyer, the consumer, and they have, you have a platform that help you sell. Well, right. Now, if the seller, any one of these platforms, instagrams or whatnot, you had their mercy. How they monetize your goods and how much do they take? The idea is for blockchain to disintermediate, to eliminate that and replace with software. Because if software is done, it doesn't have feeling, it's not going to change its mind. It's like today I decided to change my mind. I'm going to get more greedy and then going to charge you more. And there's more transparency, there's more trust, right? So that's the whole concept of behind blockchain is disintermediation. And I can touch on that a bit more because it's nuanced, right? But I want to say this, right? And so far it hasn't proven to be true, right. You know, looking at NFT cells, right. What happens? Well, used to be, you know, you pay royalties for secondary sale, right? Because we all know that's a lifeline of artists. It's not the primary sale, it's a secondary sale. You want to take a cut. The marketplace, these are controlled by human. They decided not to do that anymore, not to enforce royalty payment because it's good for them to have high volume of trading and look what happened. The promise is there, the implementation is wrong. Therefore your results where it's still the same centralized entity in the middle sort of controls everything. They utilize their distribution power for their own benefits again, right? I'm not like, hey, they need to make a business of it. They need to make money. But it's about fairness. It's about transparency. It's about an opportunity to define what's right for you, right for anybody producing content, other countries being used and distributed."
    },
    {
        "speaker": "D",
        "text": "Yeah, it's interesting that the very network effects, and let's call it web two, that gave to the growth of social media. These power laws. They're very beneficial to help us connect with one another. Unfortunately, those same network effects created kind of a disproportionate bargaining power between the owner of the marketplace or the owner of the social network and the individual participants. So, you know, you get the issues of censorship or royalty splits or how it's monetized and who controls the data. So I agree with you that blockchain this idea that you could disintermediate and still retain network effects, so you have public permissionless networks that could arise to facilitate the same kinds of connectivity, but without the compromises of having to give it to a single aggregator. All of your data and all of your monetization, etcetera. So you saw web three as exists. Now, what problem exists with web three, right? Because there's a lot of people working on solutions for this. What problem did you see that? You thought, hey, mist and labs can solve it better than everybody else."
    },
    {
        "speaker": "E",
        "text": "I mean, to be frank, right? I mean, a lot of existing blockchain models as well. I'm not even talking about scalability performance here. I am talking about the data model as well as the programming model. In Ethereum, for example, EVM's most popular chain tokenization of content or assets is skin deep. You basically represent ownership on chain where the actual contents lives elsewhere. Think about for a second. The whole point is for smart contract to process assets for you, right? Not relying on human. Well, except you're not keeping anything on chain, right? Right. So, you know, NFT is literally just URL, right, going elsewhere and it's off chain. The smart contract cannot do anything about it. Yes, there's ways around it, Hackett, Oracle and all that is highly efficient, right? And you can't easily change the asset, right? Remember, in the real world, everything changes, right? Today I have a baseball, tomorrow somebody signed my baseball. Baseball player sign my baseball. That's immediately worth a lot more. That mutation, the progression throughout the life cycle for anything that cannot be represented easily and cannot be represented on chain, you're losing all that promise as a result for this, to be frank, weird and completely wrong data model and people trying to hack around it by all kinds of thing. That's just not to the point, right? And coming back to the other things about the disintermediation, why is that so hard? Why is it so hard for software to enforce things like royalties? And this is the important part when you really need to think about this concept. What makes an asset valuable? What makes an asset asset, right? It's all these attributes, all the information, if I have a character, is a level one, is a level ten, this has weapons, is elf, is a dwarf. And all these things are made up an asset in game asset, right? And you know, so these things are important, right? If you don't keep the information on chain, you know, they all look identical, right? And also the rules around it, right? We talk about secondary sale of our artwork, right? You as a producer should be able to define, say I want to charge 5% for every secondary transaction, enforce it to software not too human. And why is that not possible and very, very difficult on Ethereum, you know, I know, again, there's an effort to hack around with validator participating and all that, right? But those are hacked, right? So your programming model is wrong. Your interface say this is right, everybody implement according to the interface, right? But interface is abstract. Implementation is done by individual teams that implement according to the interface. You don't know what they do, you can't enforce it. You don't know if they're good or bad or they have a poison implementation. They claim to serve royalty, but they may note, right? So you go fall back into social consensus. You expect all the humans to play by the book. That's just fundamentally wrong, right? Rules around asset transfer and creation are parts, what an essence of an asset, right? So think about things that apply into securities, you know, require KYC email checks before it can be transferred. Well, how are you going to do that with this model? Are you assuming everybody's going to play by the book? You can't, right? Has to be encoded, embedded, secondary sale, royalty, payment, copyright verification, these things are all essential. So assets, rules around them. So this is the fundamental problem with the blockchain data model, the programming model, everything associated with it, even ignoring all the challenge with how inefficient they are and how expensive they are. Because if you can't do that, you cannot fulfill the promise of the blockchain. That is decent intermediation. Replace human in the middle with software. Because if you cannot trust software, this software, they're managing potentially billions of dollars. You need to be able to say ahead of time, proof them are correct. They have to be correct, they have confidence. Otherwise you fall back to human, right. This is why a lot of tokenization effort looks like, well, we do primary insurance on chain, but then, oh, by the way, we actually have to do all the secondary processing at consortium chains or whatever because that's the only way we can control trusted. This is why banks use blockchain. But in private setting, you have a fundamental mismatch about your intention and your technology. And this is why I think everybody will agree there's very little concrete disruption of products that we all use from business or consumer side by blockchains today. Very, very few examples. Maybe a bit of payment with stable coin. That's quite a great example, because those things are simple, right? Stablecoin is stable coin. You only need to keep balance and it's a very instrument that's done. But anything more complex where you actually need to enforce rules around it, you actually need to know what the asset look like. You need to compose assets, be able to track its lifecycle, the changes of asset over time. It's really not that effective, people being hacking around and trying to make it work. But why fix the fundamental infrastructure?"
    },
    {
        "speaker": "D",
        "text": "Hey, everyone, we're going to take another quick break and hear a word from our partners. We'll be right back to the real vision crypto daily briefing. Yeah, and it seems at the root there is a problem. The Ethereum virtual machine, which is the machine that runs the environment on the Ethereum blockchain and solidity, the programming language, you know, that's used in many l. One's not just Ethereum, but one of the fundamental problems as I see it is it's not object oriented, which, you know, not to go too far into computer science, but it has some fundamental limitations that it can only be used essentially as a very sophisticated and immutable registry. Right. It's just an indexing database that's shared publicly. And what you're saying is that you can have much more rich programming environments that not only can be shared publicly, but can be amended and can live in real time in the same way that assets live in real time. And changing ownership, changing content, changing everything that an object might be able to change, if you're a developer, to generically incorporate all of these other elements that right now you can't. So it seems like for a period of time there was a mismatch between the rate of conceptual development, all these great ideas about how to fix and disintermediate third parties. But the layer at the base really isn't sophisticated enough to realize that promise. And so you have to come in and kind of backfit with these hacks. So can you tell us a little bit about how your lab, how it fixes that problem, what is unique about it, and how you think this will solve the problem?"
    },
    {
        "speaker": "E",
        "text": "So if you look at solidity where some of the things are wrong with it, dynamic behavior with reentrancy, bugs, you have delegation, you have all these things. Let's basically make it not trustworthy enough. Keep on finding bugs in them because you just cannot analyze ahead of time to say this is provably correct. And that's a fundamental mismatch in how you design a language for a smart contract. You need to be able to trust it because these things are going to manage a lot of money for you. That's a very, very fundamental problem. Even back in the days we were at Facebook, we recognized the need to have a much, much better, different smart contract language. No dynamic behavior, actually have assets as a first class concept, right? Allow you to have a language describe all that, what an asset look like, not just a URL or balance, something very, very basic. Ownership models are captured and modeled correctly and use runtime as much as possible to enforce these things. Because another problem is stability is like if you forget some kind of ownership check somewhere, you'll probably be in trouble. So lots, lots of bugs. We were seeing about that. Hundreds of these kind of issues. Get all these things, right. And don't place a burden on developers because not everybody is a security engineer. And finally, build the tools, have specification, has designer language along with a specification language allow you to formally prove, formally verify the software is correct. It doesn't get better than mathematically prove something is correct, right? So all these layers of defense, right. It makes it much more expressive, much more powerful and correct and safe and all that sort of thing to do. Now fast forward to SRI. Once we recognize to model objects, assets as object, right? So they are free flowing. Right. You know, and then we, and is."
    },
    {
        "speaker": "D",
        "text": "Sui a blockchain or a programming language or both? Generic."
    },
    {
        "speaker": "E",
        "text": "Sui is a blockchain, right. So, you know, there's a larger aspect and there's a programming environment on top of it. I'll get to that in a bit. Right. And that's a very, very sort of high level concept of that. It's not quite correct when it comes to suite, but you know, it is a blockchain. Right. But SRI has a very different object model. I mean, data model where everything is an object of. Right. It's a data store where everything is independent objects. And then you have, you have a dress that own where your own object lives, rather than having the data trapped inside smart contracts. But that model allow you to do something even more powerful, because now object is composable. You have language around that. Objects can be passed and stored and can be combined. A lot of things you can, can do with it. The ownership model is much more powerful. You can be owned by a single person or unowned, like something like a smart contract everybody can access. Right? So iterate on that to match the data model, to really come up with a completely different sort of concept. Right? And the blockchains also sort of think about things very differently. Right? So for the blockchains, you think about tracking the history of assets being transferred, right? I sent you five years and you sent Zhang Ten Yi. You track the movement on asset, but the assets generally don't change. You don't track the asset change themselves. You can think about Swe as another layer on top. You also track the state change of all these assets. Because again, you describe describing assets as a rich type, right? The type, you know, character with level, with race, with experience and strengths, intelligence."
    },
    {
        "speaker": "C",
        "text": "Right?"
    },
    {
        "speaker": "E",
        "text": "These things change. Right? So you also track the state changes on chain as well. So it's almost like it adds another dimension, right? Because objects are versions as a result. So, yeah, so all that give us a much more powerful framework to, you know, solve the kind of problem we talked about."
    },
    {
        "speaker": "D",
        "text": "So this, to me, this much more rich, object oriented asset types, this could include all types of content like we talked about earlier, media content, nfts, tokens themselves, but also within each object, the history of that object, right. That you've. It's changed over time in its attributes and maybe ownership or non ownership. That was a very interesting concept. Now, doesn't this cause an incredible amount of congestion? How do you make this scalable? Does it horizontally scale? And why isn't it subject to the same kind of limitations that existing blockchains have?"
    },
    {
        "speaker": "E",
        "text": "Yeah, I mean, actually, we're far more efficient than any of the existing blockchains. Why is that? Do I first examine why blockchains are so inefficient? Right? So you think about the programming model, it doesn't really track dependency, right? It doesn't attract the dependency between the, the asset themself, right. Because that's the way they are. The programming works, right. It's very low level. You know, everything's loaded into address and all that. All in the smart contract, right? So when you're processing transactions, you basically have a block of transaction. Well conceptually, if you think about it, let's say there's a ten transaction that's same from different ten different address to a Dex. There's ten other transactions sent from different addresses to say, nFT, mint. Conceptually, these two groups of transactions have nothing to do with each other. Okay. Why are you sequencing them? Wisconsin in the first place? Also all the information. And then you try and say, oh, I'm going to sort them. And then you try to do some hack and say, I parallel execute them. Okay, let's say if you are successful that, but there's a limitation where you can do that because you don't have dependency information to keep everything in the same address space, you know, share memory. And finally you store everything into the data structure. Mercury. It's not just your transaction record, but also the state, right? Highly inefficient number, reason why these things are so, so, so slow. Another thing that maybe people are not aware, maybe don't think about. Well think about this, right? If, let's say 10,000 of us all have bored ape, all 10,000 of us are trying to transfer our Bora ape to someone else. These are independent operations in the Ethereum world. All 10,000 of us will be sending transaction to the same smart contract. Say please update your internal map to update the address of the new owner. You see why this is horribly horrible slow, right."
    },
    {
        "speaker": "D",
        "text": "Just quickly, this seems like an original sin. In other words, when bitcoin was first constructed, this Utxo model was designed to preclude the double spend. And so transaction ordering was very, very important because everything was fungible. You had to make sure that you couldn't send one bitcoin to Bob, another to Alice. But what you're saying is that, look, we've got all these completely independent transaction operations that have nothing to do with one another. Why do you insist still on that paradigm that everything has to be sequential?"
    },
    {
        "speaker": "E",
        "text": "This comes back to how sweet is designed. Everything is an object. The programming model is literally passing in objects, assets and producing assets and outputs, right? So you have the dependency information. So you know exactly well, these ten transactions are targeting a Dex. These ten transactions are targeting the NFT means let's process them separately, right? And you can process separately, you can parallelize the entire pipeline. This is not just about parallel execution. This is about ordering them separately. Then you basically, then you can sequence, then you can execute them separately. By the way, you also have dependency information make parallel execution very very simple rather than try to discover it dynamically. And then you store these state changes in the object rather than storing the asset changes in the merkle tree because the recordkeeping is done asynchronously, separately every couple seconds or whatever number of transactions we met, that's not part of the processing pipeline. All these things make it very, very scalable. Adding to that for own object, I own this NFT, I own the board I'm transferring to use and ego. Why do I need to sequence in the first place? Nothing is going to contain with this object which I own. No one else can touch. I just transferred to you. It gets executed and processed right away. You don't need it seems the only."
    },
    {
        "speaker": "D",
        "text": "Limit, I mean this does seem truly horizontally scalable. It seems the only limitation is guess the number of servers that you trust as valid to process their transactions, is that correct? I mean there's really, you could just add more computers to do these transactions."
    },
    {
        "speaker": "E",
        "text": "Yeah. It's more of the concept of intervalidator. I mean, intra validator scaling, right? So each validator right now is one machine or one core, but you can scale horizontally to number of cores, right? Because it process things independently. We have a need to do that because we haven't hit that kind of scale in terms of usage. But that's the concept. So it's a far more efficient pipeline, right. It's completely different about how blockchain works, right? Because this is centered around the object data models being different, programming model very different. You know, how we store things are very different. The processing pipeline cut out unnecessary steps like don't wait for everything to rewritten to a merkle tree before you process the next thing, right? In fact, every transaction is processed immediately rather than waiting. Think about it. I want to send a transaction. I want to be processed right away. I don't want to be wait to be grouped with a bunch of things that's not related to me to be processed together."
    },
    {
        "speaker": "D",
        "text": "Is this still effective? Well, two questions I guess. First, does this still have the same attributes that we tend to glorify in blockchain? Mutability could be public, permissionless, et cetera. That's question number one. And then secondly, is it still as secure for high value transactions, you know, not having, you know, a large consensus, for example, to deter attacks. Can you talk a little bit about each?"
    },
    {
        "speaker": "E",
        "text": "Yeah. I mean, it has nothing to do with those properties. Yes. Complete permission is open. It's verifiable. Right. And in fact, right. We'll say we can build different kinds of like line very simply so third party can verify things. Very, very simple. Because if you are product builder, say hyper game, right? I know in this game I have 10,000 user, each one that has a career character. That's an object on the chain. You just track that 10,000 objects. You don't need to traverse the Merkle tree, find the information, dig out the parts, you know. Right. We call it spots, replay. Just read the things you care about, monitor the things you care about. Right. So you know, there's no sacrifice on any of that, right?"
    },
    {
        "speaker": "D",
        "text": "Yeah. It's like, you know, if I was gonna sell my car, I don't need to go to the library of Alexander every time and find exactly where that sale ad is going to go. Wow, it's pretty amazing."
    },
    {
        "speaker": "E",
        "text": "Yeah. And in fact, in case of, in terms of scaling the blockchain, and then, you know, everybody's talking about trilemma as if that's the truth, right? It's like, you know, scalability, security and decentralization. Why is scalability a limitation we just established, right? This can scale by adding more workers to each validator. So it's not scalability, it's actually latency. If you increase the number of validators that needs to participate in consensus, you know, come to agreement, it's a latency. Right. So. And also only impact latencies of shared objects. Right. Such as, you know, attacks or something. Right. If it's an own object, right. You process right away. It's a broadcast. It's o one. I mean, o n. Right. So it's a very, very different conceptual model. So a lot of things don't apply, but there's definitely no sort of sacrifice or trade off in terms of security and all that. Right. It's quite the opposite."
    },
    {
        "speaker": "D",
        "text": "So for our watchers who don't understand maybe the technicalities of latency, we've got these computers and databases spread out geographically, in time, and they all have to synchronize with one another, each other to establish consensus, a shared state or truth that they can all rely on to make forward progress. And what you're saying is that the latency is only a limitation because everybody's trying to do everything for all computers sequentially. And that if you kind of break that problem up into different worker nodes and not at high parallelization. You don't need to worry as much at all about latency. Is that fair statement?"
    },
    {
        "speaker": "E",
        "text": "No, no. You don't worry about scalability because scale is right. This is very important. So when you have infrastructure that has limited capacity you're going to have all kinds of problem. It's like this is how we describe as a noisy neighbor problem, right? It's like your role in the neighborhood is congested because next door is from your party, right? It's not your fault that you're paying for, right? It's like when voyage do a land sale where the whole Ethereum network congestes, you pay higher fee because it's such a limited capacity, right? Infrastructure needs to be able to scale up to meet demands, right? So it's never a good trade off to say you have limited capacity. That's definitely not the way aws these cloud services work. You don't think about it, are you going to run out of capacity for me? Then my business goes to zero because you can't service me. No, it's a latency because when you have number of validator that increase at certain threshold their communication overhead increases, they will have an impact."
    },
    {
        "speaker": "D",
        "text": "This is really an incentive structure if you think about it, because you have to achieve two things, right? You have to incentivize new workers or validators to support the network on demand, right? This kind of load balancing real time supply demand balance. But you also want to incentivize network participants. Does this blockchain have a native token to achieve those functions?"
    },
    {
        "speaker": "E",
        "text": "Sure. Yeah. I mean actually the tokenomics is all about that, right? Open market participation and competition, right? You know the validators want to get into the top two third, right? Remember two third majority of the staking power determines actually participate, you know, consensus, right. The rest don't really do much, right? So it's never about the number validators really about the concentration of that two third power. So you want to get into them. The way you track more business is to provide better returns for staking by making more efficient your service more efficient, you're cheaper, your cost is lower, you pass on more saving earning to your customer. Then you track more stake and you get into or maintain your top positions where you do that. Another thing they do is they do auctions every epoch to set the gas price, right? So you determine the reference price, right? So self adjusting as a result, you know, you try using the market power to drive sort of essentially a healthy race to the bottom. Right. They need to make money because anything that don't make money means somebody subsidizing for it. Right. Solana others are inflationary, right. They have more tokens, so they incentivize validators to keep the transaction guests low. But you're paying for it, right? Everybody is paying for it. We don't have that. It's fixed. So it's about this healthy competition, race to the bottom, everybody improving upon their service. And you encourage more usage of the network. Right. And then if you want to scale up, you scale up while keeping the, you know, the gas price low, keeping the cost low. But you service more, you make more money. Right? So all these things, right. This is more of a, you know, free market dimension, open market competition kind of model."
    },
    {
        "speaker": "D",
        "text": "I see. So this never works. So until you change the underlying structure of how the data is organized, decoupled from this serial or sequential process, until you did that, you, then even the tokenomics wouldn't work out that the incentive structures would be you really have to fix the base problem before you can then scale up. So it seems like the approach you take is necessary. There's really no other way to go about it."
    },
    {
        "speaker": "E",
        "text": "I'm sure eventually there will be more iterations, more ideas around how to improve upon the networks and all that. That's now our focus right now is we plan to stay ahead any competition. Right. But this is why this is important to design. All the components work well together. Right. You know, your data model, your programming model, how you process transactions, how you store states, you know, how you think about, you know, like client read path and everything has to come together together, not just say modular. You pick your own execution layer, you pick your consensus data availability layer and stitch them together as if that works, because then they actually may not work well together. So this is why a lot of the blockchain world has been stuck in that model, frontline blocking, everything is address based and they're very, have all these, this way of doing things that hasn't really changed at a high level. They may internally do things to make it better, some areas better here and there, where you can pipeline things, you can do things that are clever to shape communication overhand, all that, right. Those are valuable, but you have a fundamental limitation that will hit, you know, you're going to hit that fundamental limitation at some point."
    },
    {
        "speaker": "D",
        "text": "Well, okay, so let's talk a little bit about the kinds of things people are building on the network. Well, first of all, has the network launched? Is it public and available for users and developers? To try and if so, what kind of projects are being built on top?"
    },
    {
        "speaker": "E",
        "text": "Yeah. So launch on May 3. So it's a month and ten days so far. Yeah, it's still very early days. Right. We have a long, big pipeline of games. These are a lot of them, like AAA, very, very high quality games. We think about games should just be games right now, just Webster games incorporate elements of web three. So that's exciting and more and more that are coming on board. So they're trickling in. You have the usual defi, you have the usual, the infrastructure, you have nfts and all that. Lots and lots of clever ideas. A lot of DGN products are here. Bigger, bigger initiatives, bigger products coming. We believe for ecosystem to thrive you need grassroots, active developer community, try out new ideas and iterate very quickly. But you also need product that bring the customer with them, bring their fan base with them. So all these things are coming together. Been very interesting first months and half. We're seeing and learning about what works well, what doesn't work well, what we need to do to help our partners to make sure their launch are successful. So, yeah, all that."
    },
    {
        "speaker": "D",
        "text": "And is the programming language on Sui also called Sui, or is there a separate name for it where developers can learn?"
    },
    {
        "speaker": "E",
        "text": "It's called Sui Move. Right. This is a move language that was developed back in Facebook for the DM and B bar project, but we basically iterated to adopt this object model."
    },
    {
        "speaker": "D",
        "text": "It's interesting because that project back then you briefly mentioned the regulatory atmosphere, and what's very clear now is I wouldn't say everything is the result of the way the data structures are set up, but we certainly have a significantly higher number of regulatory attack vectors because of the way things were structured originally. Why do you think that? Maybe this approach might lower the attack surface, not just from a technical perspective, but maybe from a regulatory perspective. Can you comment on that?"
    },
    {
        "speaker": "E",
        "text": "I don't know if I can comment on that. I think this is probably a question that's best for me to skip because whatever I say understood. There's no upside to it."
    },
    {
        "speaker": "D",
        "text": "Yeah, yeah, that's fair. And that's, that's one of the things that's struggling in the atmosphere here in the United States. Obviously there's a strong regulatory push at the moment, but I think it's important that those attributes of permissionless public that is being retained here are going to be in the future. The key attributes that I think regulators will be looking for to say, you know, this is a vibrant, healthy ecosystem. It's a place where builders can build and brands can come and get exposure and really, you know, protect the investors. So, yeah, I completely understand, I guess, you know, last, last kind of questions. So you just recently launched, you've got people building on it. Where do you see this going in one year, five years? Diem was a very ambitious project. It was going to be global in nature as kind of this currency for billions of people. Is there something that could reach that level, that potential?"
    },
    {
        "speaker": "E",
        "text": "I mean, our goal is, right. So this is not just about crypto enthusiasts that will benefit from speculation trading. That has its value. Early adopter usually has a lot of value to push. A lot of, you know, they're very important in pushing technology forward. Right. But this is about, when people talk about mainstream, this is one to go, right. We talk about. It's not just about bringing people to web three, it's also bringing Web street to users. Right. We want to impact product thinking, product design. So it will be less centralized. Right. So optin to me, that's what web three is about. About. And that is a number of different category sectors. Right? Yeah. We talk about gaming because gaming one is, well, not as highly regulated as financial product. You can experiment more freely. Game assets can be closed loop. It may not have value outside the game, so don't have regulatory concerns. You can more freely experiment early on. You see a lot of gaming use cases, but you're going to see start thinking about some serious commerce use cases and then financial product. I'm not talking about just deFi. I'm talking about end to end consumer facing financial product or institution financial product. Because ultimately this is about this intermediation. You can think about this intermediation in two ways. One is you remove all the inefficiency in the product, right. Think about how payment works today is like, you know, every step the way somebody needs to, well, be doing process during business hour, you take a fee and passing on the message to another one, right. It's costly. Right. That's why cost payment. Board of payments can take 6% up to five days. Right. Highly inefficient. Right. And think about all the other kind of product. You know, another example is like buying a house. You have to sign escrow. You have to give money to somebody else who take it and say, okay, transaction completed, I'm going to give release of money. Right? So these things are all intermediary that serve a function of providing trust. And that trust can be replaced with software that you 100% verifiable, right. So there's a lot of changes to come in terms of product and all spectrum. So a lot of things we are doing is sort of work with partners on these kind of products, doing some of the experimentation ourselves, building some of the first party apps and also providing key infrastructure. We're about to very soon launch ZK logging. Think about using your web two identity to create your, you know, a test station on chain, right? Then you could create login with your Google and everything's done for you. You don't have to manage your, your keys anymore, right? And all that sort of thing, right? May not be for the creative native or may not be worth be considered, okay. If you have a con that's, you know, have millions of dollars in it, but probably just fine for gaming, probably fine for commerce, right? Or other use cases, lowering the friction of product. Imagine having that and plus sponsored transaction. All of a sudden you abstract away a lot of concept logging was you Google into a web suite app and the app pay gas for you. You never have to think about crypto anymore. All these things we're building have powerful impact on how products are going to be designed, which is going to keep doing this type of work to push the field forward."
    },
    {
        "speaker": "D",
        "text": "100% agree. You know, I think the measure of success is when everybody's on web three and doesn't even know it, right. That it's all abstracted and has become so ubiquitous and the kind of the paradigm shift you mentioned in how businesses and products are constructed really are, is inverted. And so, you know, I share, I share your vision there. Thank you so much, Evan, for coming on. I hope that we'll have you back on real vision soon. Keep going on the, on the journey. Hope to see you again."
    },
    {
        "speaker": "E",
        "text": "Thank you for having me. It's been an absolute blast. Speaking brilliant."
    },
    {
        "speaker": "D",
        "text": "Thank you."
    },
    {
        "speaker": "C",
        "text": "What's up revolutionaries?"
    },
    {
        "speaker": "A",
        "text": "Thanks for tuning in. For more content like this, head over."
    },
    {
        "speaker": "D",
        "text": "To realvision.com and get unfiltered access to the very best, brightest and biggest names in finance."
    }
]