Speaker A: Welcome to bankless, where we explore the frontier of Internet money and Internet finance. And today we're exploring the frontier of technical innovations and layer one integrations in the Ethereum roll up space. Tyco is a brand new roll up on the scene that is bringing with it some cutting edge tech that makes Tyco one of the most differentiated and technically advanced roll ups out there. Taiko, instead of having a single centralized sequencer like most rollups, shares a validator set with the Ethereum layer one. Anyone can be a Taiko sequencer and propose a Taiko block if they are also an Ethereum layer one validator. Taiko and Ethereum validators are the same set of people, and this produces many properties and features of the Taiko layer two that increase the usefulness of the Tyco block space. Using Tyco, you can trade on uniswap on the Tyco layer two, but you can use the uniswap layer one liquidity without ever leaving the layer two. And the benefits only start there. They get even bigger when there are other based rollups beyond Tyco as well. Today on the show, we explore all the unique innovations that Tyco is bringing to the table and how they indicate the future of the Ethereum roll up landscape and how Tyco is leading the charge towards a unified Ethereum universal synchronous composability, starting with the introduction of base sequencing. Justin Drake is my co host for this episode today. He's been going down the base roll up rabbit hole for a while, and he's been making big bets and big pushes for the development of base roll ups. So having him on the show today was invaluable into adding insight and perspective into this conversation. So if you're listening to this on the bankless premium feed, thank you for being a bankless subscriber. Me, Ryan and the bankless team deeply appreciate your support if you're listening to this episode on Twitter, because that's the place where we release these for free. Perhaps consider signing up to become a bankless citizen so you can get these premium podcasts in your RSS feed where you like to listen to podcasts, and you can get out of the hell hole that is Twitter. Like always, this is a bonus episode, so we're skipping the ads and getting right into the conversation with Breck and Jeff from Tyco Bankless Nation. Super excited to investigate Tyco here on the podcast today. Tyco is a newer roll up on the scene and it is bringing a lot of new innovations and new technology to the frontier of the ethereum roll up landscape. This is going to be a decently technical episode, which is why you see Justin Drake here as my technical co host here on the podcast today. Justin, before we introduce our two guests from Tyco, maybe, maybe you could kind of give us a little bit of a download on things that you are excited about, about this episode, things you're hoping to learn, things that listeners should get into the headspace of as they get into this episode. Just like, kind of help us get into the frame of mind here.
Speaker B: Right? So from my perspective, Taiko is a very contrarian and unique roll up. It brings forward various innovations. Some of them are the execution layer. So it has this notion of a booster roll up, which we'll talk about, which is very interesting. It is also the very first enclave roll up. So today on Mainnet, it is a roll up, which is secured by a secure enclave. And there's various other innovations at the execution layer, but also it is innovating at the sequencing layer. There's the very first roll up with a decentralized sequencer. And it's not just any decentralized sequencer. It's specifically the base sequencer, which I believe is quite likely the endgame for ethereum roll ups. And so in some sense, especially, the sequencing part is very much aligned with my research, and I'm hoping that Tycho can set an example and be a template for the rest of the ecosystem.
Speaker A: Beautiful. And as we've done a number of podcasts together, Justin, with you stepping in as my very technical gigabrain co moderator, I'll start asking some of the most basic questions at the very beginning, just to really set the foundations. And then over time, as the podcast goes on bankless nation, you will hear Justin slowly taking over and getting into the nitty gritty. So let's go ahead and introduce our two guests from Tyco. First, we got Brecht, the co founder and CTO over at Tyco. Brecht, welcome to the show.
Speaker C: Hey, nice to meet you.
Speaker A: And then also we got Jeff, co founder and engineer at Tyco. Jeff, also, welcome to the show.
Speaker D: No, I'm not a co founder. I'm just some guy. I got hired later.
Speaker A: But thank you, Jeff, just some guy at Tyco. Jeff, welcome to the show.
Speaker B: All right.
Speaker A: Okay, let's start off just with a very basic mental model, everyone. I think listening to this episode knows what a roll up is. We got plenty of roll ups on Ethereum. We got optimism. We got Arbitrum, we got Zksync, we got Polygon Tycho is entering into that landscape of types of roll ups, frame different models for rollups on Ethereum. How should we think about Tycho differently? What's unique, what's different about taiko that users should be aware of? Brex, we'll start with you.
Speaker C: Yeah, sure. So I guess that's also the main topic of the show is kind of like Daigo is like a base roll up. So this is definitely one thing we're like very unique for now because I guess the hope is that more roll ups will actually switch to being like a base roll up. So I think that is definitely the main one. And it's very, very important for us that kind of like, similar to like Ethereum that have like these kind of like. Yeah. Properties that they want to protect. And I guess we also kind of like, want to like extend Ethereum in the same way with our layer two, which for. Yeah, other layer twos for now at least, have not done the same thing. Yeah. For the rest, I guess we will be doing also like multiprover, kind of like the id from Vitalik and also like using things like SGX, the id from like, Justin before. And I think the other most important AC unique feature would be like the way we would like, solve the horizontal scalability problem, but different level twos that do not directly interact with each other. So that's where the boost overlaps come in from. So, yeah, I guess we'll learn about that later in the episode.
Speaker A: Beautiful. Okay, so you dropped a number of things. Base roll up, I think we'll have to define as well. But also Taiko is also a ZkevM as well. It's a Zkevm roll up. Can you unpack that just a little bit as well?
Speaker C: Yeah, so I guess. Well, at this point, Taiko is not yet a ZK rollup as like some listeners will already know. But yeah, it will be like, very soon. So for now, our only proof available on Mainnet is the XGXproof, which will prove all the transaction executions that are happening on l two. And like very soon. From this point, like in a month or so, we will also have like the ZK proofs ready that will make it tackle actually like z q grow up. And again, more specifically, Taiko is trying to be like a type one ZkvM. So that means that we won't just be able not try to do any other specific special execution features. We will try to do exactly the same thing as ether. So we'll be able to directly support any smart contract that is developed for l one directly on l two. So there's no extra work necessary for developers to kind of portend their smart contract or anything like that. It should just work exactly the same on l two as it does on l one.
Speaker A: Is the terminology bytecode equivalent relevant here? Is that what this is?
Speaker C: Yes. So bytecode equivalent is kind of like one part of the ethereum, like zg Vm equivalents. So if you're like bytecode equivalents, that means that the smart contract execution will be exactly the same. But the type one zg Vm kind of goes further, as in all the other things are also exactly the same. So that means like the Merkel tree for the state storage is kind of like the same. Also transaction types, all those kind of things that are not directly to the EVM, but are kind of very important still for full compatibility.
Speaker B: Okay, one way to summarize it would be state root equivalent.
Speaker A: Stateroot equivalent. Can you just unpack that, Justin? I've actually never heard that term before.
Speaker B: Right, so when you have an Ethereum block is going to modify the state, and the state root is basically the fingerprint of the modified state. If you're stateroot equivalent, it means you're doing everything exactly the same. The gas schedule is exactly the same. The way that you merkelize, the hash functions that you use, all the internals are exactly byte for byte the same.
Speaker A: So there's a category of rollups out there, and I think most of the ones that people are familiar with are all competing in this sphere. Optimism definitely is. Arbitram definitely is, uh, where they're going after EVM, ethereum equivalents. Uh, it started off as like EVM compatibility, then it moved to EVM equivalents, and then it moved into full fledged ethereum equivalents. And it was really all about this philosophy of like having minimum difference, minimum diff between the ethereum layer one and the actual code running on the Ethereum layer two. And so it sounds like Taiko is definitely in that sphere. So really optimizing for minimum difference between the Ethereum layer one code and the code that runs on, on Taicho. But with the addition of being a ZK roll up, which I think makes it more challenging, but also more ambitious. Brecht, how do you like that description?
Speaker C: Yeah, I think correct in some aspect, although I wouldn't say it's more challenging because there's a lot of benefits you get from not changing anything at all. That Ethereum works because if you change some parts out, that means that you have to also modify your node software also means that you might have to change how bridging works. So it also like changing something there also means extra work in other places. And so the only, the main reason to not do exactly the same is kind of like for performance reasons. And so for Ziki stuff that was very important the last couple of years because Ziki proving some of these things like Kcheck hash or something like that was like super expensive to do. So you had to replace it with something else to make it feasible to prove it for the latest technology.
Speaker D: So there's all this from tech standpoint for sure, from the proving and stuff from a user standpoint and actually like onboarding people and getting them to do stuff. The main benefit of the ethereum equivalents is just like you just change the URL that you're doing something at and it should function completely identically, right? Because there's no like, oh, because you're using this network, you got to do something this way and this that change the contract code here or this, like realistically, if you can deploy something on Mainnet, call a function on Mainnet, you should be able to change the URL to Tyco and do the exact same thing without changing anything. And you know, if you get that out of the box and I think there's less friction moving there, right? Like that's kind of the end goal from the, at least from my perspective, is just like producing that friction is the main benefit of Ethereum equivalents.
Speaker A: Beautiful. Yeah, and this is a very important property of Tyco. But I also don't think that this is specifically the unique thing that Tyco is bringing to the table. Like we have seen other Zke evms out there really trying to optimize for equivalency with Ethereum. There's not that many of them. And Taiko has now just also entered this game. But it's really good to set the stage for the Taiko execution equivalents. But I think it's really the base roll up element that is the net new technology that's being added into the sphere. Is that fair?
Speaker C: One thing I want to mention here as well is that this equivalence also gives us some other benefits. For example, the booster roll up thing that we've been talking about does directly depend on the Ethereum equivalents in some ways. Because to be able to directly access the l one state, you also have to from the l two itself, you also have to directly support the data formats of Ethereum and also the bytecodes. So if you are not ethereum equivalent on l two, then you have to have like a separate path to be able to read the l one state or the execute the smart contract directly on l two. So you could have like a different mechanism to bring the data there. But if you want to just directly access the data there, then we have a unified path between access the l one state directly or the l one state directly. So that's also one of the advantages.
Speaker A: Okay, so if you want to be a based roll up or a boosted roll up, which we'll define those terms just in a second. You must be evm equivalent. You must be ethereum equivalent.
Speaker C: For boost roll ups, yes. Yeah, for base roll ups. For boost roll ups directly impact this.
Speaker A: Okay, let's go ahead and get into the definitions of booster and base roll up. I think in terms of order of operations, based rollups comes first, and then we'll define booster rollups second. I think that's the right way to do this. So let's start with that. What is a based roll up.
Speaker C: Justin, maybe you'll just.
Speaker A: Yeah, so this one's Justin, actually. Yeah, sure.
Speaker B: So base refers specifically to a layer of the roll up, which is called the sequencing layer. It basically describes who does the block proposing, who does the sequencing, basically, who has the right to order transactions within blocks. And the base roll up basically says that it is the l one proposers, the existing proposers of Ethereum that have the right to do the sequencing in the conjunction with the l one blockbuilders and l one searchers proposing these blocks.
Speaker A: Okay, so it's the l one that is proposing the blocks for the l two. That means we have like an overlapping validator set between the Ethereum layer one validators and the tyco layer two validators. Is that how that works?
Speaker B: Exactly. And that is called shared sequencing, where you have two execution zones that share a sequencer. And shared sequencing is something that we already have at l one. So the Aave smart contract is shared sequence with the Uniswap smart contract. And so you can do synchronous composability between Aave and Uniswap. And now that you have synchronous composability between Taiko and DL one, you can basically have these contracts on Taicho call l one contracts and vice versa.
Speaker A: Okay, so just to check my understanding, if I am a validator, a sequencer of the Taiko layer two, I am therefore also a validator of the ethereum layer one.
Speaker D: Yeah, they're one in the same, like a Taiko l two validator doesn't really exist. That's kind of the thing. It's like the ethereum. L one validator and then the other thing to touch on with the base roll ups there is because of the nature of it just being an l one smart contract that we call a proposed block function on. That's how it works, right? Then it just goes through the normal pipeline. We don't have a real validator there, but it also means it's permissionless. Like, you can go be a proposer, you can go try and extract some mev or something from l two. You can just go grab a bunch of transactions from the l two mempool, assemble them into what you think is a profitable block to propose. Submit that to l one, pay for a blob, boom, you are a Tyco. L two proposer, you get the reward, and then it just enters the normal l one pipeline. When that gets some confirmations that block is proposed, the l two will add it to its chain. Done like nothing. No centralized thing in the middle. Ideally, the kind of cool thing about the base roll up, right, is hypothetically, let's say all of Tyco are on a bus and we just drive off a cliff. The thing should go, right? Like, just like, just like Ethereum does. Like there's no, there's no, oh, man. Like, Tyco's servers went down. Tyco is down. Right. Like, that's kind of the goal in the end thing. It should be, it should embody the same values as Ethereum. Does he send a big decentralized network that anybody can participate in?
Speaker A: Okay, cool. So the status quo for layer twos on Ethereum is actually to have a centralized sequencer. Basically every single major layer two has a centralized sequencer. And we kind of learned that that's actually a cheat code to really have like a bunch of scale. And I would like just resource cost reduction. And honestly, sometimes the benefit of a layer two is because you get to be checked by the layer one. And so therefore you get to have the trade off of being centralized at the layer two. But this has also been one of the big concerns of the Ethereum. Layer two landscape is like we espouse decentralization, but it turns out all of our sequencers on layer twos are all.
Speaker D: Everything is a trade off in crypto, isn't it? It starts with the trilemma right from the beginning, and then everything is a trade off. You pick your battles. And that's kind of the fun part of it is there's 20 layer twos and everyone is chosen which part of the thing they're going to compromise on because there really is no perfect one. And if there was, then that would be the l two and it would win and you'd be using that one. Right, like out of the gate. So, like, obviously there's some pretty huge base roll up issues compared to having a centralized sequencer. Having to wait for that l one confirmation time when you propose a block before it gets added to l two is like inherent latency that a centralized sequencer with pre conformations doesn't have.
Speaker A: So this means that taiko is entering its existence with decentralized sequencing from day one. That's kind of like the point, right? Just check my understanding about that.
Speaker D: On paper yes, but on paper no. From day one we are the only proposer because the TKO or, sorry, the taiko token is actually necessary for some part of the proposing proving brokering. And we didn't have the taiko token day one, also, having just us be the sole proposer is going to let us test a lot of the smart contracts, the system and everything before we open this up to the public. So we've been live, I don't know, like a week and a half or something. Now the, today is actually the day the token comes out. So right now during this, if you wanted to, you know, alt tab out, grab some tokens and start being a participant in the network, you could actually do that now. But we had just like every roll up we launched with training wheels for about a week or two.
Speaker A: Yeah, launch was training wheels for a much shorter period of time than other roll ups, I would say. And that also kind of explains the accelerated token distribution event right after mainnet. Like, usually, like the typical layer two will have a main net and then do a retroactive airdrop of sorts, like one to three years later.
Speaker D: Yeah. Within the actual mechanisms that we have going on in our contract. So, yeah, we really wanted to try and get it out there so that people can participate in this. We've had a lot of people on our test nets be proposers and be provers, and they're actively waiting for this.
Speaker A: Okay, so you need to stake the taiko token to become a proposer of a Tyco block, is that right?
Speaker D: Not really staking, but there is like a brokering between a, an off chain brokering between a proposer and a prover, similar to sort of like a flashbox relay that says, hey, yo, I'm a proposer. I've got an endpoint for either a relay or like a prover themselves that they provided me the endpoint, going to call that endpoint, and I'm going to see if this guy wants to accept my deal. I've got a block I want to propose, but I need to find someone to prove it first to make sure that someone agrees to prove it. Otherwise it's just going to sit there on l one and no one's going to prove it, and it's never going to actually be verified back to l one once it hits l two. So you get that deal, and the deal usually says something like, it's actually quite modular, but the default on chain deal is something like an exchange of TKO and aliveness bond that says, hey, yo, you're going to give me some amount of taiko token, and if you don't prove it within a timeframe, you're going to get slashed for that amount. And then the proving is now open to anyone and they can come in and steal your liveness bond to make sure that it does get proven.
Speaker A: Okay. Okay. But the taiko, the TKO token, is like integrated into the infrastructure of proposing a block. Okay, beautiful. Okay, Justin, this is, I think, where I can start to hand off some control over to you. But maybe first, as I do that, can you just explain some of the benefits of a based roll up? Like, there's all this extra engineering and innovation going on with Tyco. To what end? Like, why is all this so beneficial?
Speaker B: Well, one of the benefits is that in some sense, there's less engineering. Um, you don't have to worry about having a sequencer because you just reuse all the existing infrastructure, including the searchers, the builders, and DL one proposers. Another benefit is this idea of composability with DL one. The only way to get synchronous composability with DL one is to be a base roll up. And the reason is that the l one is itself based. And if you need shared sequencing to interrupt with the l one synchronously, and therefore you need to be a base roll up. But maybe the most important benefit, in my opinion, of base sequencing is that it is a very strong shelling point for shared sequencing, more generally across the whole ecosystem. So we have this coordination problem whereby we have all these different l two s and they're all isolated islands and they all talk to each other asynchronously, which is a big downside versus synchronous communication. And wouldn't it be nice if we could fix fragmentation and all come together as one mega roll up, one super roll up that is synchronous across all the union of the l two states. But in order to get there, we need to all agree on a shared sequencer. And in my opinion, credible neutrality is going to be a huge selling point to facilitate this coordination. And what is more credibly neutral than the Ethereum shed sequencer itself, would you.
Speaker A: Classify this as there's just like superpowers that Tycho has with its on chain state on its layer two, that the state of the Taiko layer two just has that other layer twos don't because it's just deeply, intimately connected with the state of the Ethereum layer one. Right?
Speaker D: I.
Speaker B: Yes, that's correct. One of the benefits that Taiko has is that it doesn't necessarily need to, for example, bootstrap its dexs and liquidity pools. If you're on Taicho, you can tap into the liquidity that's available on l one. There's a very similar situation with oracles. The l two s need to bootstrap oracles and make sure that chainlink, for example, will post on their roll up. Well, now they get the oracle for free from the l one. And generally speaking, all the network effects that exist at l one can be reused and expanded by Taiko.
Speaker A: Okay. And of course, Tyco being an ethereum equivalent roll up, which enables based sequencing, which enables the overlapping validator set between the sequencer set between Tycho and the Ethereum layer one, is that conduit of the network effect between the ethereum layer one and Tyco. Maybe you can illustrate, like, if I'm on Tyco and I've got dai but I want ether, do I go to like on uniswap and the little drop down menu when Uniswap deploys on Taiko, I like select Tyco, and then I pick Dai and I buy ether. And then that transaction goes through the layer one uniswap liquidity pool. That's at least my current understanding. Brex, maybe you can kind of walk us through that transaction flow of like a simple uniswap trade that also taps into liquidity on the layer one. How does this happen?
Speaker C: Right, so that's a, it's an interesting question because for now, I guess, like to have, like, seamless access to the l one, like, synchronous access, then you do still detect some kind of, like, proving system that allows you kind of like to do this. Because if you want to do, for example, like a withdrawal from, like, l two to l one, then you still have to prove that whatever happened on l two is actually correctly executed and you kind of trust what happens there to be able to then directly interact with the l one state. So based rollups do allow you to do this, but it also requires a very fast proofing system if you want to do it in a synchronous way, which we currently do have with something like SGX, but we do not yet have with a Zk proofing system. So to actually use this in practice, we do need the Zk proofing systems to all that also catch up with very close to real time proving on these things.
Speaker A: But that is on the roadmap. That is an explicit intent of Tyco.
Speaker C: Yes, for sure. For now, the normal case would still be you do normal bridge transactions as a synchronous way to actually get this data. Although for l one to l two, this is directly, you can do that directly. So there's no difficulties with doing that because you don't have to prove anything. You can just do l one to l two directly. But yeah, for l two to l one, there's still this requirement of very fast provisions.
Speaker A: Okay, so let's go and do that kind of similar flow. How does tyco liquidity tap into layer one liquidity?
Speaker B: So let's imagine that you have a large amount of dai on Tyco, but the uniswap pool, daive pool is just very liquid on Taiko. Well, what do you liquid illiquid? Yes. So you get a very bad price on Tyco itself, but the l one is itself extremely liquid and you will get a great price. And so what you do is you send in a single fell swoop in a single transaction, effectively you withdraw your dai to the l one, you do the trade on Uniswap, and then you, the proceeds of that trade, if, are sent immediately back to Tyco. And so from your perspective, it's almost as if you were on l one, benefiting from the liquidity effects of the l one. Now one small correction to something that was mentioned is that EVM equivalence at the execution layer is actually not required for the synchronous composability. That's part of the execution, part of the virtual machine of the roll up. Really, the only thing that's required for synchronous composability is the sequencing layer. So you could have a completely different virtual machine, for example, the chiral virtual machine from stocknet, and still have synchronous composability with uniswap l one.
Speaker A: Okay, understood. Atomicity for a uniswap trade on Tyco is that you actually withdraw your assets and then the trade happens on the layer one and then the assets go back into to Tyco and it happens all in the same block or a very short amount of time because of the overlapping sequencers, the overlapping validators. But aren't you paying layer one gas? And how are you benefiting from the scalability of a layer two if you're actually just trading back on the layer one? Where does the actual scale come from?
Speaker B: Yes, that's correct. In this case you'll be paying the layer one gas. But it is strictly rational for you to get whatever best price is available to you. So you just route it wherever you can get the best price. But in the endgame, really what we want, the ideal outcome is that all the l two s share this sequencer, whether or not it's based. And you can tap liquidity across all the l two s in one go without paying the l one gas cost. So it is true that most of the liquidity will shift from l one to l two. And in the end game all of this liquidity is not fragmented, it's unified. And you only have to pay l two gas costs.
Speaker D: It's kind of like if you use like a Dex aggregator, it'll find you the best route across like all these different pools on the current chain that you're on. Just imagine that. But it's like 30 l two s is like the end game for it. And instead it goes, finds you the best possible route across all these pools, across all these chains. It's l one now because it's just back and forth between l two and l one. But in the future it's not, that's, that's not going to be the case because we all share the same shared sequencer.
Speaker A: Okay, so there's a bit of a bootstrapping problem here where a single base roll up still has to pay layer one gas. And so you don't really get scalability benefits. But as soon as there's two base roll ups, three base roll ups, ten base roll ups, then the base roll ups themselves get to have equivalent liquidity amongst themselves. Uh, and then you start to get some tailwinds between both liquidity and scale. That's my understanding.
Speaker D: Is that right? This like using the l one liquidity example? Yeah, for sure. That's one of the reasons Tyco has built modular as well, is like anyone could maybe go deploy Tyco and tweak the parameters to their liking, you know, similar to op stack, and create another based roll up. And it's one of the reasons that even, like the, the taiko token itself and the design is modular and can be swapped out with a different hook there so that you could go do something. And one of our hopes is that maybe, you know, it does inspire people to, instead of launch a new chain with a different stack, they launch a base roll up, and eventually we go towards that direction.
Speaker A: Okay, so the base roll up vision depends on other base roll ups. So there is no successful based roll up without every. Or not, or a critical mass of other.
Speaker D: Using l one on liquidity example. Still right now you can go do stuff on Tyco and it's very, very, very cheap and you still get a huge advantage.
Speaker A: Right. But is that advantage meaningfully differentiated from all the other scalability benefits that we see on other layer twos?
Speaker D: It kind of depends, I guess, especially right now, like in the interesting, the training wheel stage, because we are, as I think, as we mentioned before, subsidizing some blocks to get smaller block times, decreased latency. I think fees are quite cheap. I don't know what they are compared to other ones, but they are, they're pretty, pretty affordable. The actual scalability benefits will come in definitely with the boosted component later, which brett can sort of dive into when we talk about a booster roll up, which is where we're going to try and transition to phase two of taiko.
Speaker C: There's also the batching aspect.
Speaker B: Right.
Speaker C: So I guess even if you still have to go to the l one, similar to what layer two s in general do, like the batching aspect, you could still have if ten people trade on l two. We want to swap eth for like, Dai. You can batch them together on l two, do a single on one transaction and get things back. So, yeah, you have like some scalability benefits depending on what is happening. But yeah, the synchronous aspect is obviously like the, I think, like, well, the most unique part about being the base rolling thing.
Speaker A: Okay, so if ten taiko users are all trading in the same Uniswap pool, they're all trading USDC to ether. Then the Taiko contract makes one transaction on the layer one to the USCC ether pool on Uniswap, and, and then that cost gets spread out between the ten users. And so there is some fee benefits because of some critical massive users of Tyco. And so that's where the first gas savings comes from. But then the second gas savings come from the fact that there might be other base roll ups with liquidity that we can just use other roll ups for as well. Is that right? Okay. But so to some. To some degree there is. The success of base roll ups depends on the fact that other roll ups are also going to become based. Correct? Like the idea of base roll ups requires a critical mass of roll ups to also be based.
Speaker C: I think the success depends on how important the synchronous communication between roll ups are to combat the fragmentation. I know it, Justin agrees. But I think that's the biggest, I think, point of being a base roll ups is that this roll ups do have to work together, kind of like interconnect to be able to build a chain that users actually want to use.
Speaker B: I mean, you can have synchronous composability across all the l two s if they share a sequencer, it doesn't have to be based. So there is a possible future where synchronous composability between l two s is very valuable. But it's, for example, the espresso sequence or something else that is being used. My personal thesis is that in order to even get everyone on the same page with a shared sequencer, we need to have a credibly neutral shared sequencer. But also we want to do a graceful migration of TVL. Right now, the vast majority, 90% of the TVL, is at l one. And if we do this migration without preserving the sequencer, then we introduce fragmentation and the network effects start breaking down. Whereas if we do this gradual migration from l one to a base roll up, we actually preserve a lot of the network effects.
Speaker A: Interesting. Can the liquidity, if people are trading ether, USDC on the layer one, and say, for example, for some reason there's a ton of liquidity between ether and USDC on the Tyco rollup. Can the layer one tap into the liquidity on the Taiko layer two?
Speaker C: Yes.
Speaker A: It goes both ways.
Speaker C: Yep.
Speaker A: Okay, cool. So like, any sort of net new demand for liquidity on say, like, say for Uniswap pool on Tyco is just straight additive to liquidity on the layer one.
Speaker C: Yeah, you can just see it as like a base tool being an extension of the l one.
Speaker A: Yeah, I'm starting to see that there's.
Speaker C: Extra block space that's available for the l one validators propose to make use of, and it's up to them to kind of make efficient use of it.
Speaker A: Right. There actually seems to be like, no, actually clear boundary between the layer one and the layer two.
Speaker C: It makes it look. Well, it can make it look like a single chain, which I think is beneficial for user experience and all kinds of things.
Speaker D: Yeah, I kind of think of all the potential for the different based roll ups as just nodes on Ethereum itself. Right. They all contribute and they're all participating in a big decentralized network. And a base roll up is that for l one. And other based roll ups will be part of that. And you can basically view it all, each of them, as just a node in that network that participates in the same thing. And that's kind of the goal is if it's indistinguishable, that would be awesome.
Speaker A: Interesting. Okay, cool. So, yeah, this is actually, I feel like kind of following through on some of the original visions of what the roll up idea was, which is a pure extension of the Ethereum layer one where a roll up is returning back to a contract, not a separate chain, and we're starting to actually kind of like move back towards that original theorized vision of what a roll up is.
Speaker D: Yeah, totally. I mean, I think just like anything, first movers have, you sacrifice things to get going, right? And then that's what, like the early l two s, I think everyone had to, you know, centralize something to get something out the door, and they've obviously been out a long time, and it's awesome. And then we're the first base roll up, and we have our own challenges involved with that. And if people move this direction, which, you know, there's no guarantee, obviously there could literally be no other based roll up ever. And this was just a fun experiment. Nobody knows, right? It's completely possible. I'm definitely not a maxi in any direction. But to try it this way has its own challenges, and if people can migrate or move this way, then it's better for Ethereum as a whole, in my opinion.
Speaker A: Interesting. So there's an interesting thing happening here, I think with the idea of the role of the Ethereum layer one validator, we've always kept our constraints pretty strong around how to be a validator. On Ethereum. You can be a validator on a raspberry PI, MacBook Air, some consumer grade laptop. But now we're introducing scale via rollups separately. That used to be a separate validator network. We would preserve the constraints of the conservative ethereum validator set, allow that to be validated by anyone across the globe. But now with Tyco, since you're adding new scope onto the Ethereum layer one validators. So we're actually asking the Ethereum layer one validators to do more. Justin, I'm wondering how you navigate this, where we have the philosophical desires of the constrained, conservative, slow Ethereum one validator set. But we now have very high scalability. Ethereum layer two. So we're increasing the role of the Ethereum layer one validators, which kind of goes against what we have previously optimized for in just the exclusively validating Ethereum layer one set. So how do you think about this tension?
Speaker B: Right. So it is true that the l one proposer is given more rights, it has more powers, but this is very similar to having more l one contracts at l one. So anytime there's a new smart contract that comes up, there's new opportunities for MEV complexity increases. But the good news is that with proposal builder separation, the proposal has to do a constant amount of work, and it is dead simple. The only thing it has to do is basically call the headers to get the top blocks and pick the top block, it needs to basically compare numbers. What is the biggest number? And I'll just sign the biggest number. All the heavy lifting is done by the builders. So the builders will be running a taiko node and a node for all the other base roll ups. They will be doing the complicated mev extraction, and the proposal has almost nothing to do.
Speaker A: Okay, so it's actually the builders that are becoming, having to get more sophisticated and larger, and that's been the trade off that we've made anyway.
Speaker B: Well, it's interesting because the builders are themselves separated with the searchers. So there's, like, builder searcher separation, which is one level deeper. And what will probably happen is that there's going to be searchers that are specialized, for example, in Taiko. So initially, the builders won't be running taiko nodes. Instead, there will be a specialized set of taiko searchers that will do the Meev extraction within Taiko, and they will send bundles to the builders that don't have to be more sophisticated.
Speaker A: Okay, cool. Understood. Okay, so we're going through the base roll up conversation. I feel like we've actually explored quite a lot in that conversation. Justin, do you feel like the base roll up part of the taiko conversation is concluded? Are there other things that we need to investigate before we move on?
Speaker B: So I think we've highlighted a lot of the advantages of base roll ups, but there are also trade offs, and one of the big ones is that you don't have this notion of preconfirmations out of the box. So a centralized sequencer, you can ask as a user for pre confirmation within roughly 100 milliseconds. Basically, the ping time on the Internet, you don't have that out of the box with a base roll up. You have to work a little bit harder. And my understanding, but I guess Brecht and Jeff can comment, is that today Taico does not have preconfirmations, and this has consequences around subsidies of blocks. So I'll let them comment.
Speaker D: Yes, we don't have precomps. We're working towards pre comps. And one of the things that would happen is with low network usage, you would see a big transaction latency problem, because if a block's not profitable for someone who is running a proposer, an l two Tyco proposer, they're trying to make get transactions from the l two mempool, and they're trying to assemble them in such a way that when they submit the l one proposed block, the amount of rewards they get from those l two mempool transactions exceeds the l one fee for the priority fee there and the blob data fee. Right. So if that doesn't happen, then no block is going to get proposed, right? Because I'm not going to propose a block to lose money. I'm just as a random guy. So Tyco subsidizes that. We say, well, we're going to propose a block every x seconds, no matter what, no matter what we see. And so otherwise, I think you've got this like chicken and egg problem, which is like, are people going to go use a base roll up if it has 90 to 102nd transaction latency time? I don't know. So we subsidize it to make it more attractive to people to come build. And then eventually all the blocks, you know, hypothetically, should be profitable and that running proposers should be profitable and people will want to come use it. If we don't do that first, then maybe nobody comes. And so, you know, obviously there's been, I've seen some people on Twitter talk about it, and that's one of the things they wanted us to talk about in this podcast was some of the disadvantages, advantages of the base roll up and why we are subsidizing. And we're doing it for user experience and to reduce friction and to get people to come to Tyco and build on it and use it. But that would probably be the biggest trade off for me as a user and as a DJ and someone who's on 20 different chains aping random coins, you know, just non stop on chain is, am I going to leave a l two that has a very, very quick confirmation time, even though it's centralized to go use a chain that is, is decentralized and permissionless, but has a much longer user experience, has an end user. I don't know, it's kind of like saying if the code of your email server was really bad, do you care? As long as it's still Gmail and it works. You don't see the code, you don't care. You want the user experience to be good. So until pre confirmations come and it's one of the necessary evils, I think. And that's, again, like we talked about, blockchain is all trade offs. And that's one of the big trade offs is there's a bunch of network effects that are amazing and then there's always some that aren't so great.
Speaker A: My intuition here, I think I got this meme from Nick from Celestia, is like, the idea was that like modular components actually improve with age and then monolithic components actually kind of deprecate with age. And my intuition with Tyco and base roll ups is that like one base roll ups maybe has some benefits, but two base roll ups has more benefits and ten base roll ups has even more benefits. And as soon as, like, you can really kind of, you get more and more benefits. The more base roll ups that there are because of, just like the network effects are being shared with all of them. That's my intuition. Maybe you guys can can check that intuition. Just like the superpowers that base roll ups brings really become maximally expressed when there's like some critical mass number of base roll ups that are resources.
Speaker D: Personally, I think that the shared composability is the main advantage here. And somebody has to be first. And you're not going to see many of the main benefits as first one until later. But someone, again, has to be first. I think Justin was saying earlier, like, someone has to kickstart this move here, else, no, you can't share nothing.
Speaker A: Well, somebody has to be first, somebody else has to be second. You also have to have a third. So like, okay, cool, we've got one. What's the plan for getting two and three and four and five and six? Like how do you guys go from here?
Speaker B: So I have a whole master plan.
Speaker D: Let's hear it.
Speaker B: So really we need to fix the downsides of base sequencing. And as we discussed, the biggest downside is preconfirmations. And in a few days I'll be flying to Berlin to an event called Zuberlin. And there's going to be about 70 people who are building out base pre confirmations. There's actually nine different teams that are building slightly different things. And the goal of all meetings together in Berlin is to try and, and consolidate and standardize and pick the best ideas. So what I think will happen is that over the next few months there's going to be intense R and D on base pre conformations. And Tyco will be in a very luxurious position where it doesn't have to do any R and D. It can just pick the best solution, and that best solution can act as a template for the rest of the ecosystem. So just as you said, David, that modules kind of age like wine because of network effects, but they also age because they kind of improve single handedly. So this base module will become a base module with preconfirmations. Another downside of base pre conformations is that you don't benefit from mev protection in the context of centralized sequences. A centralized sequencer is very different to an encrypted mempool, sorry, is very different to a public mempool. You send your transaction directly to the centralized sequencer and the centralized sequencer promises to not front run you. On the other hand, you don't have this kind of de facto mev protection. And so you can either go down the centralized encrypted mempool route with something like flashback protect or mev blocker, or you can go really fancy and have encrypted mempools. But this is infrastructure that needs to be figured out before we can go mainstream. So in addition to pushing the technology with the pre conformations and the mempools, I've also been trying to evangelize the notion of base sequencing and educating. And there's a bunch to be done to understand, for example, the incentive compatibility relative to MEV and things like that. And I'm very pleased to say that I'm making a lot of progress. There's new roll ups that are coming in that are launching as, as base roll ups. There's app chains like the ENS app chain that was announced recently that is considering very seriously the base sequencer because they don't want to introduce a new non credibly neutral sequencer. And then there's some of the very top roll ups in production today that are also looking to move to base sequencing. So I'm very optimistic about base sequencing and to make a concrete prediction. And I think that by the end of 2025, roughly one third of the roll ups will be base rollups, and one of the top three rollups will also be a base roll up.
Speaker A: Okay, so this is the base roll up conversation. I feel like now we've thoroughly walked through all of that, we have not yet unpacked booster roll ups. So maybe it's time to introduce the idea of a booster roll up or a boosted roll up. So, Brecht, let's go back to you. Can you just define what a booster rollup?
Speaker C: Right, so this roll up basically tries to like solve the horizontal fragmentation, the fragmentation problem between like the roll ups as well. So similarly like to base robots, but they also have like some, some extra like features to be able to like directly access the l one state. So that's kind of like. Yeah, that's kind of like one of the main features is like, to be able to easily and very cheaply access the l one state will have like this special like functionality built in in our roll up that can just say like, okay, I want to actually call a specific chain, and this specific chain could be like another l two, and kind of like this booster will app setup. Or it could also be like the l one, where you can just call this function on the l one smart contract. It will do exactly whatever it does on l one and then directly return the result. But the difference here is that this would not use directly the synchronous composability aspect. So this would just be like a kind of like execution against some, some known or some latest state on the l two. So that means that you can do, you can do like some very functional, like, useful things very cheaply without having to go through l one in any way. So you could just do, for example, if you want to verify if some, some data is there, or you want to just read like, who's kind of like the owner on eds or whatever, you can just do that directly from, from the altoon without even touching. So that's kind of like one of the features there. And also, yeah, this synchronous composability thing. One of the important things there is that depending on exactly how this would work for like in a base rob setup, we would make it very easy to be able to access the any other l two in this kind of like booster rope. So you would just do a transaction as you would normally on a single l two in the booster world network. And this transaction could, without any kind of limitations, call a smart contact or read state from any other l two in this network. So it would automatically split up this transaction in a way that it would split up the execution and data accesses between the actual roll ups that are being called. So it's kind of like very useful and very easy way to kind of split up the execution and data storage between multiple outers. So ideally this is one way to do this system. And you could also make use of, obviously the base roll up network where because you're all based in this network, you can also use each other state. But with the boost roll up, it would be automatically a very cheap way to do it. So it depends on how efficient you make these state accesses between these rollups. Even like a base roll up, if you still have to go through some l one state or some kind of custom way to go between the different players. But yeah, in the booster rope, most of these things would happen automatically.
Speaker A: Okay, so my intuition is that all booster roll ups are based rollups, but not all base roll ups are booster rollups, correct?
Speaker B: Yeah. So any base roll up can become a booster roll up if it wants to a real time booster roll up. The one line summary of booster rollup is l one access at l two cost. So you can do arbitrary access of the l one state and arbitrary computations on the l one state, but you only pay the l two cost.
Speaker A: Okay, just to check, my understanding here is that like you don't a booster roll up, the booster side of it is not changing the state of the layer one, it's just reading the state of the layer one.
Speaker C: Yeah, it could do both. Yeah. So reading would be very, because you do not touch the l one at all. But if you want to write state to l one, then obviously we still have to write something to the l one, which would still be like expensive. But again, you can batch things up and do the right ones.
Speaker D: The reading alone has benefits itself, so it's not just attaching that execution. So like if you own your ens on l one and you want to call the resolve function to see who owns it on l two, you can just do a free call to, to a proxy. Boom, you own your ens on one layer and it resolves on all booster roll up layers at once. No more putting a name service on every single chain.
Speaker A: Correct me if I'm wrong, is the base roll up the write side of things, and then the booster is the read side of things. And so if it's a base roll up, you're able to write to the ethereum layer one because you have this overlapping sequencer set. And then the booster side is like, well, you can just read this date and you don't have to write anything, so you save the gas fees, but you still get the composability of like being able to read state of the layer one on the layer two. So my intuition is like the based part is writing, writing to the layer one and the booster part is the reading to the layer one, is that right?
Speaker C: Yeah, I would say that's correct, except that the booster ropes also like a way to kind of like split up the state between these roll ups. So for example, like, yes, one kind of like specific use case would be like, like a token smart contract. So a token smart contract, you can't normally just deploy to any l two s one that you want to be able to transfer these tokens. And in the boost roll up you would just be able to deploy this token smart contact on the l one. And each l two immediately has access to this token smart contract. And also you can write state for each token on the l one. But the exec, like the state and execution would also be split up between the different layers, like the layer two. So you would have like a unified kind of like program on l one and then all these l two kind of like refer to this program and still be able to kind of like execute and store the data by itself. So it's kind of like you could see it as a kind of like a multi threaded environment for blockchains. I think that's kind of like the generally to see.
Speaker A: Again, my intuition is that like if you're a base roll up, why not also become a boosted roll up? A booster roll up? Like what's the cost of being a booster roll up? Is there really a trade off there?
Speaker C: Yeah, so there's some extra functionality that doesn't need to be built to be able to do these things. So one is kind of like having this state route available to do the reading. And also this kind of way that we would do like synchronous compensability also needs some extra functionality to split up the transaction in multiple parts between the l two s. So that also means that in theory, we're not ethereum encrypted anymore because we can't extend the EVM a certain way to allow this functionality.
Speaker A: We've covered boosted roll ups, we've covered base roll ups, we've covered some of the benefits. What is left in this conversation? What are some of the stones that we have not yet unturned? Justin, maybe I'll throw this one to you.
Speaker B: So one of the things that is interesting about Tyco is that in some sense it has opened up a new design space for the types of verification of the roll ups. So you have optimistically verified rollups, you have ZK verified rollups, you also have centrally verified rollups where there's no fraud proof and no snarke. You also have sovereign roll ups where the verification is done off chain by nodes. But now there's this new concept of roll up, which is what I call an enclave verified roll up, or for short, just an enclave roll up where the verification is done by secure enclaves. And I think we're in a position where aspirationally Tycho wants to go from a pure enclave roll up to a ZK roll up. And there's all sorts of steps in between, potentially wherever it becomes a optimistic ZK roll up as a gas optimization. Or interestingly, it kind of has a hybrid approach where it has a multiprover that combines the enclave with the stocks for extra redundancy.
Speaker C: Yeah, for sure. In many ways this SGX only proof is an intermediate step, because the SGX proof that we currently use is already kind of using the same code that we will proof in ZK as well, because our next steps for the ZK proofs is also using ZkVM, and our ZkVM will reuse the same rust program that we're already using for the Azure Expo. So that's also the benefit here of having this unified code base, which we call RIco, that has different proving backends. And so for now, our current proving backend is Ajax, which is currently live on Mainnet, but we also have like a Risc zero ZkVM backend and SP one backend, which is very close ready to being used. And then it's kind of like depends on the cost of being able to generate the proofs and verify the proofs on chain, which will be enabled as a default proof system on our chain. So for now, all blocks have to be proven with AZ. But when proofs are cheap enough to be able to prove all the blocks as well with SP one, or we will also enable that.
Speaker A: The SGX component is really just training wheels in production. Training wheels for the actual sophistication of the real in production technology. Is that a way to understand this?
Speaker C: I wouldn't call it training wheels, I think Justin will agree. But it's another very interesting proof type which allows very cheap proof generation and verification on chain, which is always a very different way to prove things. And so having that next to like a ZK proof is like very beneficial. Because if you want to break the like our chain in some way, then like if you have SGX plus ZK, you have to be able to break both of them to be able to get like an invalid state.
Speaker B: Transition on chain training wheel sometimes implies that there's some sort of a downside. It turns out that it's a strict upside. There's no loss in having SGX as an additional prover for extra security. And what I think should happen is that all the roll ups should have this additional SGX prover because there really is almost no cost, just a little bit of extra gas cost, but that is fairly minimal. Now, one of the things that Brecht alluded to, and this is a very interesting shift in the world of ZK, is that now what we can do is take an existing client, so we can take ref, or we can take GEF and we can just compile it to ZK, just magically so we don't have to re implement the EVM as a crazy mathematical snark circuit. What used to happen in the previous paradigm is that you'd go through opcode by opcode and write a custom circuit for that. That is the so called monolithic approach. And it's very non scalable, it's very high maintenance, it's prone to bugs. And so my understanding is that Tyco has moved away from this monolithic approach and instead is going down what's called the ZKVM approach.
Speaker C: Okay, so actually in the last two to three years, we were working together with the PSE on this like a custom ZKVM approach where each, each thing needed its own custom circuits to be written. And we switched from that, I think like roughly like six months ago, to kind of like go full into like this ZKVM approach.
Speaker B: PSE is privacy and scaling explorations. It's a sub team within def that was going down this monolithic approach.
Speaker A: Guys, this has been great. I think I started maybe last year, 2023, kind of with this idea of, hey, the Ethereum scalability solution is a known thing, and we now know how to scale Ethereum. That was the start of 2023. And the start of 2024 was marked by like, okay, we know how to scale Ethereum, but unsure about how to defragment Ethereum. And so that was kind of the investigation at the start of this year. And now with like, we've gone through like this shared sequencing conversation with Justin on a couple of episodes, and now with like base sequencing, it kind of really feels like we know what is on the other side of the horizon, like the horizon of a completely refragmented Ethereum is pretty damn clear. And it's pretty clear to me that like base sequencing is definitely like a very strong, has a very strong role to play in that. So thank you guys for just doing all the hard work. I know Tyco has been in the trenches for two plus years now, maybe longer working towards this vision since before we even defined the problem in public awareness. Tip of the hat for you guys for seeing this problem ahead of time and also just being committed to it as well. Before we actually wrap this up, is there anything left that we haven't uncovered that you guys want to bring up before we formally wrap, wrap these things up? Brecht, I'll start with you.
Speaker C: No, no. I think it's an exciting time because like you said, like after two years and a half or even like longer, it's great to actually see, see something that's actually being used. And yeah, there were like many different steps along the way where we kind of shifted focus or try to change our mind of how to do these things. And I think at this point we're, we still have like a lot of work ahead to kind of like make the thing that we want to make. For example, getting the ZK proof of cd working, but also getting like the pre conformations and these kind of like things that are like super important for the future. But yeah, it's still a very, very cool, I think, what we currently have and hopefully we can keep improving and keep working on some cool stuff.
Speaker A: Oh yeah. Jeff, any last comments from you?
Speaker D: Yeah, I'll echo what Breck said, which is just awesome just to have something, something out there and people using it. And I think, you know, so a lot of people could say, hey, you know, maybe launch with pre confirmations. It would work out of the box kind of thing. Someone has to be first. We worked on it for two years. We launched to get it out there. We're going to be increment, incrementally, making it more awesome over time. And I think what Justin said earlier about based roll ups taking over and that really is going to be a huge part of this unfragmenting the ethereum ecosystem, which is really fragmented right now. I think when you look at other l one s that has, they obviously do a lot of sacrifices like Solana and stuff like this. But the UX is there, right? The UX is there and that's, I guess, why people are there right now. I think Ethereum can regain that through this booster and based roll up unfragmentation. And people want a bridge to Tycho and do something. Let's go.
Speaker A: Hell yeah. One last question. Where'd the name tycho come from? What's Taiko?
Speaker D: It's a drum. It's like a japanese drum. You know those little, like, you ever played that game back in the day? It was like that drumming game. Taiko? No, Tatsujin or something like a dance dance revolution style thing that was an I in arcades when we were all kids.
Speaker A: No, I never did.
Speaker D: That's how I remember it from. But yeah, it's basically a drum.
Speaker A: Okay. Any particular reason why a drum?
Speaker D: I didn't name it.
Speaker C: Yeah, well, I think, like, one of the other meanings is kind of like building up anticipation, which I guess, for too many obvious is kind of like true, because the anticipation has been built up. But yeah, the other thing could be like taikonauts, like in the japanese or chinese, astronauts are called as well.
Speaker A: Ah, okay, cool. I think I like that one better. Cool.
Speaker D: I should have been able to answer that. I literally did an NFT collection on Tyco called taikonauts.
Speaker A: Guys. Jeff Breck. This has been fantastic. Justin, any, any last comments or perspectives from you?
Speaker B: I do want to give a shout out to Tyco for something we haven't discussed, which is to make the protocol guild pledge. This is basically a pledge to donate 1% of the token supply to roughly 160 researchers and developers and coordinators that are working on l one, working on the public goods layer. And I'm hopeful that this donation will be very, very significant in helping make the funding of this public good R and D sustainable. So thank you for that.
Speaker A: Yeah, just a really plus one and just add a little bit more to what that perspective is. I remember in my early days of Ethereum 2018 2019, there was a huge conversation about how do we actually fund our developers? Ether was $100. The Ethereum foundation had very little money. We were quite literally running out of funding. And the idea of sustainable funding for open source development was a huge conversation. Gitcoin was, I think, really the big first solver of that problem. But it's been an open question ever since. Protocol Guild 160 members, like Justin said, is all of these protocol devs who are working blood, sweat and tears on open source? Protocol development and open source has always had some sort of funding issue. You can get funding, but if it's dependable and sustainable, has always been. There's never any security in the funding. And protocol guild has been trying to solve that problem where if you are protocol delve, you can sign up for the protocol guild and then you get a trickle of income out of the protocol guild. I think Taiko was. There has been a few others that have donated 1%, taken the protocol guild pledge, but I'm pretty sure Taiko was the first major project to commit 1% of its tokens to the protocol guild, and then many, many others have followed suit. So not only are you guys leading the charge on base roll ups, but you're leading the charge on donating 1% to the protocol guild. So just really wanted to just add some more perspective and double down on that. Yeah, great addition, Justin.
Speaker C: It's the only thing that makes sense, right? Because we just depend so much on the l one. Not only, like, probably, like, some of the values, but also, like, technology wise, but lots of ids from Vitalik, lots of id from Justin. Okay. It's the only thing that makes sense.
Speaker A: Well, guys, I've been very well educated by you two and Justin here on the episode today, so thank you for coming on and informing me and the bankless nation exactly what's going on over in the world of based and boosted rollups and specifically Taiko. What's next? Just talk about the roadmap. Give us the five minute or the quick summary of just what the roadmap for the next one year or two years looks like for Tyco.
Speaker D: I mean, right, right out of the gate, we're looking at trying to get ZK ZK proofs out there, right? That's probably, like, within a month or two. Breck.
Speaker C: Yeah, yeah. I think that's definitely top of the list because otherwise, indeed, like, if people rightly claim we're not a ZK roll up, obviously. So I think, like, getting that done is the highest priority. And then, like, it's both working. Like, it. Trying to get the pre conformations working, I guess, in hopefully next six months, maybe earlier, if we're being optimistic. And then obviously working on the booster roll up thing is one of the important as well. So we also have some other. We have to upgrade to, like, Kanken. So, like, some other, like, smaller things that we have to take care of, but I think those are the main ones.
Speaker D: And then, you know, from my perspective, you know, that's Brex. Like a F Max nerd. I'm more of just, like, a ux. I use stuff, and I like that kind of crap. One of my personal goals for the next year or so is to get people on Tyco and using it. Understanding why a base roll up is good, why it's awesome getting other base roll ups to launch. Like, it's funny because like other l two s, I think maybe you don't want competitors, right? But like, as David you expressed earlier, psycho wants competitors. They're not really competitors. They're ecosystem partners, you know? So it's a very weird place to live where, please compete. We're the first based roll up, but like, like hop on board. So like getting shilling based roll ups, getting people to use them, making the UX as good as possible, like, which we've done by subsidizing right now, getting it to the point where people are using the network and it feels good and proposing is profitable. And we have people from the community, random guys who are just like proposers and they're running it on a MacBook because it doesn't take a lot of hardware. And then other people running provers and getting that network set up. So it's not Tyco running all that stuff. That's a huge part of the roadmap that I think is underrated. How difficult it's going to be to get people to understand that you can participate, you can partake, not just as a user, not just as a transactor. You can make some money and you can be part of the network the same way if you have eth, you can stake it and you can be part of an Fl one validator. You have a role to play in Tyco. If you are a random person. And that is, I don't know if everyone knows that.
Speaker A: Definitely a good call out. And I do love that tension between cooperation and competition. Cooperation and competition in Ethereum, that's always been like something that's attracted me to the roll up vision of Ethereum is that like, it's actually worse for optimism that arbitram doesn't if Arbert from didn't exist and vice versa. Like, roll ups succeed when more roll ups work. And just the tension between competition and cooperation, I think, is exactly what makes me believe so well in the Ethereum roll up landscape. So the idea that you guys actually need competitors to be successful, I think is like something kind of elegant and speaks to this positive growing the PI nature.
Speaker D: The whole landscape has moved from like, let's do like, you know, I've been in crypto a long time, and it was like l one battles, right? Like one battles, then it was roll up battles, and then it was eth and its roll ups versus other l one s that make sacrifices battles. And it would be so cool if those battles changed to let's all work together, let's make Ethereum. Awesome. And it's just as good as any other chain, but has all those benefits of Ethereum. And if we can do that, then huge success, like awesome, right? Let's go. I'll end this by saying someone else. All of our stuff's on GitHub. Go deploy another taiko. Go deploy a base roll up.
Speaker A: Yeah, yeah. Actually, that's a great call out just for listeners who are listening to this on the podcast, either potential users of Taiko, potential devs of Tyco, who do you guys want to hear from and where can they go to get onboarded to Taiko and just get informed?
Speaker D: We've got all the docs on Taiko XYz, but also GitHub.com. tyco Xyz has all of our stuff. We have a mono repo, Tyco mono there. They can go there. Literally everything is in there from our proposer software, the prover software, the actual smart contracts, all the scripts to deploy a version of Tyco. We have the Tycho geth, our geth fork that you can use to run a node. Theoretically, all the scripts are there for you to go deploy, literally an entire network yourself, but the scripts are also there for you to go and run a proposer or prover. Now that the token is live and we have docs on Tyco XYZ that will get you started and run you through everything from starting your own local node, starting your l one archive node, which is a requirement, and then syncing those together, and then running a proposer or prover or anything like this. We have deploying contract examples. Everything is fully documented. And part of the benefit of running seven testnets, we had a lot of times to spin our wheels there. It's ready for devs, it's ready for users, and it's ready for people who might want to even just deploy a local based roll up and see how it works.
Speaker A: Hell yeah. Jeff Brex, thank you guys for coming on and informing me in the bankless nation all about Taika.
Speaker D: Thanks for having us.
Speaker C: Thanks.
Speaker A: And Justin, of course, thanks for accepting as my technical co moderator. Very useful as always.
Speaker B: Absolutely.
Speaker D: Thanks.
Speaker B: David.
Speaker A: Bankless, you guys know the deal. Crypto is risky, defi is risky. Layer twos are risky, but they are definitely the frontier. It's not for everyone, but we are glad you are with us on the bankless journey. Thanks a lot.
