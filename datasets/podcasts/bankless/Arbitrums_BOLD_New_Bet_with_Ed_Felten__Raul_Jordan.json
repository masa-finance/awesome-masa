[
    {
        "speaker": "A",
        "text": "Bangless nation. We have a bold episode ahead of you because arbitrum just released arbitrum bowl. Don't shake your head, David. That was a good pun. We're talking about the decentralization of layer twos. It's a process. It's a continuing journey to make our layer twos more and more decentralized over time. And this has been the next bold step. Don't kill me, David. All right, what are we covering today?"
    },
    {
        "speaker": "B",
        "text": "Well, you said it. We're covering arbitrum bold. I think I'll call this a gym badge for arbitrum. Arbitrum has won a gym badge."
    },
    {
        "speaker": "A",
        "text": "What's a gym badge for? People who don't blift. David, how do you win a gym badge?"
    },
    {
        "speaker": "B",
        "text": "No, that's a Pokemon reference, brother. And so layer two beat. Layer two beat.com. it's a site that, uh, kind of gives, um, a grade of security across all of the layer twos. And arbitrum, uh, it's not live yet. It's going to be sent for a Dow proposal, and you would imagine that the arbitrum dao would approve it. And, uh, upon approval, there is going to be a yellow slice on layer two beat that turns into a green slice. This is the level of analysis that listeners come to bank list for. Um, so we're going to open up. Yeah. So we'll talk to Ed and Raul from Arbitrum about the show, about this particular risk vector to layer twos, as well as the rest of the other slices that need to turn green. But arbitrum, importantly, not only is getting a green slice on a particular variable that makes up a layer two a critical component, but they are also the first layer two to get this green slice, which is why we're doing the show today."
    },
    {
        "speaker": "A",
        "text": "That seems pretty important. I think we're also going to talk about this idea of staking, maybe not staking eth, though, which we love to talk about, but maybe the ideas of staking the arb token. What does that even mean? What could that look like? When could that happen? David, what's the overall context for this? I feel like we're very much in kind of layer two season right now. What's, what's the meta around layer twos?"
    },
    {
        "speaker": "B",
        "text": "Yeah, I'm making a claim, but I claim that this incoming bull market is layer two lead, and there are only such, only a few players that are really pushing that frontier, Arbitrum being one of them, certainly. And so paying attention to layer twos that are pushing the frontier that are developing first, that are collecting their layer two beat gym badges, I think is the thing to pay attention to. That is the signal amongst the noise. All layer twos have their own SDKs. We've talking about the op stack. Frequently, Arbitrum has their orbits. And then, in an additional innovation out of the arbitrum sphere, stylus, all of these things fit together. There's a story to be told here. So while we unpack the story about arbitrum bold and what it means for the arbitrum layer two, there's also other peripheral topics at hand that all induce a conversation about the growing influence of the layer two ecosystem."
    },
    {
        "speaker": "A",
        "text": "But first, before we get into this episode, we disclose, as we always do at the beginning of bankless podcasts. Arbitrum is currently a bankless sponsor. I am an investor in arbitrum. Both David and I own assets and lots of layer twos. Just a reminder, we're long term investors. We're not journalists. We don't do paid content. There's a link to all bankless disclosures in the show, notes David. We're going to have Ed on the podcast, who is a co founder of Off Chain Labs. I'm not sure if we mentioned that. Also, Raoul Jordan. They'll be on in a second. But before we do, we want to thank the sponsors that made this episode possible, including, maybe most importantly, our strategic exchange partner for 2023 that is bankless nation."
    },
    {
        "speaker": "B",
        "text": "I would love to introduce you to Ed Felton, a co founder of Off Chain Labs, the organization that created arbitrum, and Ed's first time on the show. Ed, welcome to Bankless."
    },
    {
        "speaker": "C",
        "text": "Thanks for having me on."
    },
    {
        "speaker": "B",
        "text": "In addition to Ed, we also have Raul Jordan, one of the co founders of Prismatic Labs, the Ethereum consensus client, which not too long ago got acquired by off chain Labs. Raul, welcome back to the show."
    },
    {
        "speaker": "D",
        "text": "Hey, good to see you all."
    },
    {
        "speaker": "B",
        "text": "So, it's always good when layer two comes back onto bank list, because that means something's happening. The devs are doing something. Are you all feeling extra bold today, or what? How does it feel to be inside the arbitrum ecosystem lately? Ed, I'll start with you."
    },
    {
        "speaker": "C",
        "text": "Super bold. There's a lot happening. We've got bold, we've got stylus, which is our EVM technology. We've got arbitrum orbit chains getting built, and a lot of amazing things in the pipeline. So it's a fun time to be."
    },
    {
        "speaker": "B",
        "text": "Doing this stuff, certainly. Yeah. And one of the main reasons why I wanted to do the show with you guys is there are two worlds in crypto right now, the pro layer two world and the anti layer two world, I think it's pretty safe to say that Ryan and I firmly fall in the pro layer two camp. But from the critiquers of layer twos, they'll say that they are not decentralized, that they are centralization. And ethereum is as centralized as are layer twos. So with this bold announcement, this starts to actually progress into that frontier of layer two decentralization. So I really just want to start there, because that is the bulk of the excitement that I am feeling today. Ed, maybe we'll start with you again, and then we'll get into Raul. But at the highest of level, what is the bold? What does it do for the arbitrum tech stack?"
    },
    {
        "speaker": "C",
        "text": "Yeah, bold is the next step in decentralization for arbitrum. Arbitrum is already the leader in decentralization, but what bold does, basically, is once it's deployed, it will allow chains to have fully permissionless validation. What that means from a security standpoint, is that any one participant in the protocol, meaning, basically, anyone in the world, can force the correct outcome of the arbitrum chain, even if everyone else is against them. So it basically means that you yourself, as a participant in the protocol, can force the correct behavior. You don't have to trust anyone else."
    },
    {
        "speaker": "B",
        "text": "So that just means that if there is one honest person that wants to force arbitrum to be correct, then that's all it takes, is one person."
    },
    {
        "speaker": "C",
        "text": "That's right. Right. So, right now, the situation in arbitrum is there are about a dozen validators. It's a permissioned role, and if any one of those is honest, then the chain guarantees correct outcomes. So the big change with bold that bold makes possible is to open that up and make it permissionless. So anyone can force correctness."
    },
    {
        "speaker": "A",
        "text": "I have a follow up for you here, Ed. So, this term, decentralization gets bandied about a lot and has been bandied about for a very long time across crypto, and it's almost become kind of like a purity test. Are you decentralized, or are you nothing? And what I've always struggled with that particular word is it's often poorly defined. It's very subjective and not objective. One thing I've really appreciated about this cycle, at least with respect to layer twos, is we have a bit more of an objective measure. And I don't know if this is the perfect measure, the only measure. I will say that it's kind of my measure because it feels like it works. And that is the measurement on layer two beat. Layertubebeat.com. if bankless listeners want to go check that out, and you will have heard it referenced multiple times. So when you said something like, when you said the words arbitrum is leading on the decentralization front for layer two s, I think the confidence that you bring in saying that is some level of the objective measurement on something like a layer two beat, which actually stages out the level of decentralization of various layer twos. And this is the gym badge I think you were talking about, David, in the intro, we have an actual pie chart. And for bankless listeners who are listening to this and can't see this, again, go to layer two beat. Go click on arbitrary. Go click on the layer two. Look at the risk analysis here. There's five slices of the pie here that we need to turn green, essentially. So right now, in green, arbitrum has data availability proposer failure, sequencer failure. In yellow, arbitrum has upgradeability and state validation. Okay, you are ahead of some of the other layer twos. So arbitrum right now is in stage one. Some of the other layer twos are still in stage zero of achieving those slices of the piece. Can you just set the context for this pie? First of all, do you think that this is a reasonably good measure, and can you tell us about these various slices of the pie?"
    },
    {
        "speaker": "C",
        "text": "Sure. I do like this measure a lot. The l two b team, I think they do a really rigorous job of examining these systems. They give us a hard time when we mess up, which is fair. I think they are sort of the most authoritative source about the security or decentralization state of various l two s. There's five slices in this pie, and these are five different areas in which we, as a, in developing the arbitrum technology, have striven to. To provide decentralization or security. I really think of, as you said, decentralization. There's a lot of words said about that. At the end of the day, it comes down to security. Who are you vulnerable to if you use this technology and how that's what these five slices are about. These are different ways in which. Different ways in which a technology might make its users vulnerable or might fail to provide enough protection to its users. And each one is rated by l two beat as red, yellow, or green. Yeah. And so we can run through sort of what the five areas are. And I'll start with the. Sure, great. Okay. And I'll start with the ones where arbitram is green. The one on the top is data availability. Right. So basically what that means is, is there some party who can withhold information from you about what actually happened on the chain in a way that could put you at risk? And that's green on arbitrum, because arbitrum posts your data on Ethereum as call data, and because Ethereum call data is available to everyone in the world, always arbitrum gets a green on that."
    },
    {
        "speaker": "B",
        "text": "So the mere act of posting to Ethereum turns this green because of the properties of ethereum, since no one can steer or turn off Ethereum automatically. Just get this green slice. And this is also why, uh, just a quick note, why 4844 is so important, because that call data is a big cost to the arbitrum layer two. And 4844 makes that cheaper. And so arbitrary already has the green slice, and that green slice is about to become cheaper with 4844."
    },
    {
        "speaker": "C",
        "text": "Exactly right. Right. So this, and this is the case for most roll ups, right? Most roll ups will have this slice green because they mostly do put their data on ethereum. And as you said, it'll get cheaper for all of us. So let's see if we move around to the lower right to proposer failure. Proposer basically is a party who is. Proposers are the parties who are."
    },
    {
        "speaker": "B",
        "text": "Who."
    },
    {
        "speaker": "C",
        "text": "Can, who basically make blocks in the system. And the question there is, is there a, is there something the proposer can do either by being malicious or just by crashing, that can stop the chain from being correct or from making progress? And again, here, arbitrum is green because we have built the system in a way or designed the system in a way that's not subject to those sorts of problems. Lower left is sequencer failure. A lot of these systems have sequencers. These are parties who receive transactions from users and then sort of produce the official list of which transactions have been received by the system, in which order. And so again, the question here is, if there's a sequencer, if the sequencer fails or stops, what's the worst thing that can happen to you? Or if the sequencer is malicious? And again, this is green and arbitram, because there's nothing too bad the sequencer can do to you. The sequencer can't censor your transactions. It can't forge a transaction. It can't take money out of your account or force a false result. So this one, again, is green."
    },
    {
        "speaker": "B",
        "text": "Before we move on here, is there a relationship between the proposer and the sequencer?"
    },
    {
        "speaker": "C",
        "text": "It depends on which chain you are. On some chains, proposer and sequencer are the same, are the same component. It's probably fair to say in arbitrum that those roles are both played by the arbitrum sequencer."
    },
    {
        "speaker": "B",
        "text": "How did arbitrum earn its green slices in these two slices?"
    },
    {
        "speaker": "C",
        "text": "One of the most important, essentially by designing the protocol so that the sequencer is trusted for only one thing, and that is to say which transactions it has received and in what order. That's number one. So the sequencer isn't trusted to handle anyone's money. It's not trusted to assert what the result of the transaction is. Just saying, I received this signed transaction from David or from Ryan or whoever, so that's all it's trusted for. And also because arbitrum is designed so that even if the sequencer just stops or refuses to or pretends it didn't see your particular transaction, there's still a backup method you can use to get your transaction included. So arbitrum guarantees there's no censorship by any party, including the sequencer, no matter what the sequencer does. So it's that combination of not trusting the sequencer to do anything more than sequencing and also having. Having a censorship proof way of guaranteeing of forcing your transaction into the system. That's how that one. That's how those got green."
    },
    {
        "speaker": "B",
        "text": "Beautiful."
    },
    {
        "speaker": "A",
        "text": "All right, congratulations. Now we can talk about your greens. Let's talk about your."
    },
    {
        "speaker": "C",
        "text": "Yep. And let's talk about the yellows. Yeah. So, first, state validation. This is basically what this is about is this is about how it is that we guarantee that the technology guarantees that the results of transactions that are settled back to the Ethereum chain are correct. And currently, arbitrum uses fraud proofs with a permissioned set of validators. And as long as one of those validators is behaving honestly, then you're going to get the correct result."
    },
    {
        "speaker": "B",
        "text": "Why does this need to be permissioned?"
    },
    {
        "speaker": "C",
        "text": "Well, basically, it's because there is a certain category of attacks against the settlement protocol that are eliminated by the bold protocol. This is one of the things that bold will improve. Basically, what bold will allow us to do is, well, so this slice of the pie is yellow by l two beats criteria, because although arbitrum has fraud proofs, the participation is permissioned. And so when this becomes permission less to participate in the fraud proof protocol, then we expect this to turn green, of course. And so for that to happen, that would mean that the arbitrum dao would have to choose to adopt the bold protocol and also choose to make validation permissionless."
    },
    {
        "speaker": "A",
        "text": "So that is the first bold is doing, right? Okay, so that's exactly what bold is for."
    },
    {
        "speaker": "C",
        "text": "Yeah. The purpose of bold, a very simple way of saying the purpose of bold is it is to make permissionless validation safe so that this pie slice can turn green. It's not just, of course, it's not just changing some pixels. Right? It's the fact that the green signifies that you are safer and that permissionless validation actually does protect you."
    },
    {
        "speaker": "A",
        "text": "And that's what bold is."
    },
    {
        "speaker": "C",
        "text": "That's what bold is. Yeah."
    },
    {
        "speaker": "A",
        "text": "Okay. And we're close to that, but it's not there yet. So here is the. I believe this is a blog post with bold and the proposal as well. But then what needs to happen? Does this need to be voted on by the Dao and actually implemented after that?"
    },
    {
        "speaker": "C",
        "text": "Yeah. So let me talk about where we are in this process right now. This blog post went up just recently, and the code is available. There is an academic style white paper about the protocol and all the details of it, and also a security audit done by trailer bits, which is all published. So that's all there. Within a few weeks, we expect to release a capability so people can run devnets that use the bold protocol for their own testing. And then after that, we expect to launch a special testnet that uses arbitrum nitro stack with bold. And at that point, then someone can make a proposal to the DaO to adopt bold. Also, at that point, anyone who is running or wants to start an orbit chain will be able to use bold. That's the process that we expect to happen over the coming weeks to months."
    },
    {
        "speaker": "B",
        "text": "I want to unpack bold with Raul here, but just to really tie off this pie slice, we have one more slice, which is the upgradeability one. That's simply just because arbitrum can be upgraded, but it is delayed, which is why you get a yellow one."
    },
    {
        "speaker": "C",
        "text": "Right?"
    },
    {
        "speaker": "B",
        "text": "This is the explanation, Ed."
    },
    {
        "speaker": "C",
        "text": "Exactly right. So there are two main ways that upgrades can happen. The DAO can vote to do an upgrade of the software, and that is going to happen with a delay. Basically, after the DAO approves an upgrade, then there's enough delay that anyone who has assets or positions on the chain will be able to unwind those and fully withdraw before the change takes effect. Arbitrum also has a security council, which is a set of twelve people who are elected by the DAO. And they and nine of twelve of those can take emergency action if it's deemed to be needed."
    },
    {
        "speaker": "B",
        "text": "And so that exists. The existence of that trusted security council is why it's yellow, not green."
    },
    {
        "speaker": "C",
        "text": "Yes, I believe that's the case."
    },
    {
        "speaker": "D",
        "text": "Cool."
    },
    {
        "speaker": "A",
        "text": "Is there a way to make this one green. Do we ever want to do that?"
    },
    {
        "speaker": "B",
        "text": "Got to take away the multi sig."
    },
    {
        "speaker": "C",
        "text": "Well, so there's a trade off here. Right? So if there should be a security emergency, people will appreciate having a security council that can act quickly before a vulnerability gets exploited and push an upgrade, because you wouldn't want to have to react to a security emergency by having a big public debate on the Dow and then approving the fix and then waiting 13 days for it to take effect."
    },
    {
        "speaker": "B",
        "text": "Right."
    },
    {
        "speaker": "C",
        "text": "And so the existence of the Security Council, it's really there as a stopgap in case of security emergency."
    },
    {
        "speaker": "A",
        "text": "Yeah. I kind of feel like in my head whether I would feel better about this being green or if I'm like, if I'd rather it stay yellow for a while, I kind of feel like yellow is the color of preference right now, but at some stage, maybe it turns green. Yeah. How are you guys thinking about that?"
    },
    {
        "speaker": "C",
        "text": "Well, it's really up to the DAO. The DAO has the power to change or completely revoke the power of the Security council to do an upgrade or do anything. The DAO can choose to abolish the Security Council. My sense right now is that people are kind of where you are on this, mostly that they feel like it's, you know, it's a comfortable enough situation that the balance of risks, the risk of a security emergency with no response against the risk of the nine of the twelve security Council members turning evil. People are comfortable enough with that, I think. But, yeah. Altoo beat deems that to be a yellow."
    },
    {
        "speaker": "B",
        "text": "Okay, Raoul, I want to bring you into this conversation because I want to turn into, now that we have gone around the sphere of the pie slices, we want to dive into both, because, again, like I said in the intro, this is the frontier of layer twos right now is permissionless validation. And so, Raul, can you just unpack bold for us? What is the mechanism and what problem does it solve and what does it provide to arbitrum? Raoul?"
    },
    {
        "speaker": "D",
        "text": "Absolutely. So I guess I want to take a step back as well, because we're talking a bit, we're talking a lot about badges and things that we want out of a protocol, but why do we want these things, really? Why is it really important? I think basically summarizing many, many years of ethereum scaling efforts, the way we started is basically, okay, you want to scale Ethereum, there's a few different ways you can do that. Layer one is slow and needs to be slow for many reasons. Needs to be secure, decentralized, censorship resistant. And you can start by building side chains where maybe you bootstrap your own set of validators or your own kind of consensus mechanism. So over the years of research, very smart folks, including Ed here, they thought that, hey, why don't we just use the security of Ethereum that's provided to us instead of bootstrapping our own chain to kind of do something? So instead of people launching their own brand new chain with a small group of validators, we can leverage Ethereum's decentralization and security. And over the many years, we realized, okay, how do we actually reduce trust as much as possible? Can we get to a sweet spot where we're really depending on ethereum for almost everything? Right? And I say almost everything because you can't get 100% the security of Ethereum, but you can get pretty close. And basically bold is a culmination of all those years of research. It's really important that I think the reason why l two s are so valuable to people is twofold. First of all, there's this ethereum equivalence that's going on, but also that people can bridge, basically, assets from Ethereum to l two. So if I have ERC 20s, if I have nfts, if I have different things that I want to bring over to l two and use them over there, I know I can do that. But most importantly, I know I can get it back on Ethereum. And that process of getting things back from l two to Ethereum is really the tricky one. That's the one where a lot of trust assumptions occur. In the past, we've had many systems where you have to trust set of participants that you'll be able to get your assets back. And with so much, you know, so much value being bridged over to these l two s, you have, you know, multi billion dollar, you know, tvls, you have, you know, people that are relying on this and relying on, they have some trust in the system that they can get it back. And how can we reduce that? How can we move that trust from humans into math and computers and really good software? You know, and my spicy take is that I think if we don't have that kind of trustless way of getting your assets, getting your liquidity back on Ethereum, it's basically just a side chain with extra steps. And that's why we think that fraud proofs are really, really important, because they guarantee this. And for people that are using it, if you're an end user, if you're using arbitrum and you're listening to this when you're using the chain what gives you a strong guarantee of being able to get those assets back? Is this validating bridge. And this validating bridge has security properties that are really important, but the security is not up to the best we can possibly make it. And with bold, we'll finally be able to remove those extra steps and make it a lot more secure."
    },
    {
        "speaker": "A",
        "text": "Okay, so this means basically, rather bold means basically, rather than just the whitelisted people, the whitelisted groups who can watch the chain and then, you know, do these kind of, these, these fraud proofs, anybody can. So does that mean, like, I could, does that mean David could in a post implemented world? And like, how do you go about like actually doing that? I wouldn't know where to start. Is there a website I plug in or is there some code I download and then kind of run? How does that work practically?"
    },
    {
        "speaker": "D",
        "text": "That's an excellent question. So when you're, you know, so what does it mean to actually like, you know, secure the chain, like with fraud proofs and do that kind of stuff? Like is it a manual action people have to take? And no, the answer is, if you're running, you can run arbitrum nitro software in the future. You can run it, you can even, you know, you can try it today on testnets. You can do all kinds of things. But an arbitrum node software has this thing called a validator, and its role is to basically be watching for states that are being posted to Ethereum and challenge them if it disagrees. So, you know, you're running a local node, and running a local node is the best way that you can be sure of the history of the chain. Like, I know that the latest block number is this. I know the latest block hash is this. I can then, you know, if somebody says something different on Ethereum, I can challenge that. And the node software will do that for you. Right? The bold software that we built is constantly scanning. It's constantly taking actions. It does everything it can to guarantee that it can win against any number of evil claims, right? And if everyone else in the world is evil and saying bad, saying things that are wrong about arbitrum, on Ethereum, if you're a loan validator that's running your own software at home, you'll be able to challenge that and win against any number of entities."
    },
    {
        "speaker": "B",
        "text": "Okay, go for it, Ren."
    },
    {
        "speaker": "A",
        "text": "Go ahead, David. I was just going to act that the actual task of challenging and winning is just simply a matter of running some software. And I could run that on my consumer laptop. And then what happens if I spot some bad behavior. I'm like, oh, look, there's fraud committed. Does the software actually, the software spots it automatically and then what happens? Does it automatically kind of reverse those transactions? Or like, what, you know, how does this finally settle?"
    },
    {
        "speaker": "D",
        "text": "That's a great question. There are multiple steps towards what's going on on the l two node and what's going on with arbitrum and ethereum. Right? So what this bold protocol is doing is helping the settlement process on Ethereum. Transactions are posted to Ethereum from arbitrum via the proposer or the batch poster all the time. So there's constantly data being pushed to Ethereum, but it's only after a period of seven days in which basically these transactions can be confirmed on Ethereum as being valid. There's a period of seven days in which anyone can challenge these claims and say that, hey, I think this was wrong, we need to do something about it. The node does not. During the settlement process, the node does not necessarily roll back transactions. It doesn't affect the state of the l two node. It affects what Ethereum sees as the correct arbitrum state."
    },
    {
        "speaker": "C",
        "text": "Sorry, if I could jump in here. Yeah. If somebody makes a false claim about the outcome of what happens on an arbitrum chain, and your hypothetical validator thinks differently, your validator will post its own claim, and then essentially the arbitrum chain will have forked. Now, everyone who's all the other validators will know that your fork is the correct one, and they'll just use your fork and keep on going. But meanwhile, the arbitrum, the bold protocol, will figure out that your fork, your branch, is the correct one. It will prune the other one off, it will take away that other person's stake, and then everything goes on. So basically nothing gets rolled back or undone. It's just that if there's a disagreement, the bold protocol will operate in the background to identify all the bad branches of a fork, prune them off, take the, and take those staker stakes."
    },
    {
        "speaker": "A",
        "text": "And, guys, why am I doing this? Am I doing this out of the goodness of my heart? I just want to kind of keep the streets clean and, and protect the crypto networks I care about. So is it a public good, or is there some sort of other incentive at play here?"
    },
    {
        "speaker": "C",
        "text": "I mean, there's a bunch of reasons people might do it, right? One is that you might just want to be a good citizen. If you're running an arbitrum node already, for whatever reason you might have, then it's really cheap to be a validator, because all the validator does is your validator is already computing along and figuring out what's happening on the arbitrum chain. All it needs to do is make sure that the claims that people are posting about that are correct. In the normal case, being a validator costs almost nothing if you're already running a node. So you might be just doing it for that reason. There's no additional work. That's right. You might be doing it for that. You might have some skin in the game. Maybe you are a company that's running an application on arbitrum, or you have some assets there that you care about and you want to be able to act to protect them just in case everyone else in the world turns evil. It also may be the case, we expect it to be the case that the arbitrum dao will pay some parties to act as validators as well."
    },
    {
        "speaker": "A",
        "text": "Okay, so all of that makes sense, then. And all we need, importantly, is one person, one single node to kind of sound the alarm. And that's all it takes. We're not talking about, as in with ethereum, where we have, like, a one third kind of threshold. We have a two thirds threshold. Different things can happen with the amount of ether staked in this case because it's, you know, proving something, true or false. All it takes is one honest participant in order to sound the alarm."
    },
    {
        "speaker": "D",
        "text": "That's correct. That's one of the best security properties you can get, I think, in crypto. And that is really nice. You don't need this. You don't need this consensus assumption. You don't need all these kinds of things. And the nice thing also, I like to add is that if this honest party, let's say that you're the only honest person in the world that's defending arbitrum, and maybe your computer dies or you go on vacation or something. Right? That doesn't matter because, you know, every. Every other node, that's any other honest node in the world can take, can take your role and can help help you win against an evil participant. So it's not like, you know, Ryan is the only honest person. Ryan must defend arbitrum. You know, David or Ed or anyone else that wants to pick up your work and come in and also help. So that's really one of the secret sauces of bold, is that it's not tied to a particular staker or participant. Anyone who's honest can help defend the honest state."
    },
    {
        "speaker": "A",
        "text": "That's very cool. And, you know, I would be one of the honest ones. I'd be one of the good guys in this scenario, as you guys know. But you know what? It's just blows my mind sometimes. Like, cryptography is really magic when it works in these types of situations, and you get that sort of, you know, trust assumption. Guys, there's more to discuss, including what shared sequencing actually means inside of arbitrum. We also talked about the ability to stake ARB, and what would that actually mean? And then I want to talk to you guys about the future roadmap of Arbitrum and what's coming next, as well as, like, more broadly, what's coming next for layer twos. But before we do, we want to thank the sponsors that made this episode possible, including Bankless Nation. We are back with some of the folks from Arbitrum, Ed and Raoul. We're talking about the decentralization of arbitrum and a new gym badge, as David called it. A new slice of the pie was added, and arbitrum is in the process of becoming more decentralized, which is great news through the introduction of this bold protocol. I want to ask you guys a question about maybe this other slice, or a question in general. It's been kind of a conversation piece across the layer two ecosystem in crypto. That's this idea of sequencers. I think, Ed, you said earlier a sequencer and a proposer in arbitrum are one in the same. Maybe not. Okay, so can you talk to us about this idea of shared sequencing? So, can other participants be invited inside of the arbitrum network and start to take some of that sequencing type role? I understand that arbitrum sort of does that in some respect. Now, you guys are the only sequencer. Talk to us about the path forward there and why you might want to do that."
    },
    {
        "speaker": "C",
        "text": "Sure. Yeah. There's currently a centralized sequencer that is run by off chain labs for arbitrum one. And of course, the DAO could assign that role to anyone else if they wanted to. And basically, this is part of the story about the, as I think you said earlier, the progressive story of decentralization, or the road of decentralization. The sequencer already plays a very limited role in the system, and really, the only significant harm that the sequencer could do to someone, if it was misbehaving, would be things something like front running. The arbitrum sequencer is trusted not to front run user transactions. User transactions get sent to the sequencer. The sequencer publishes a feed of the transactions that it has seen. That's the official canonical story about which transactions have arrived at the chain then the settlement part of the protocol, which is what bold is doing, happens after that to determine what are the correct results of executing those transactions. The sequencer is, this job is to notarize the transactions that have arrived and in what order. That's its only role. So there's been talk about and a lot of research about decentralized sequencing, which basically means instead of having one party that does that, and there are many different ways of doing it, some kind of committee of parties who collectively register which transactions have arrived and sort of collectively publish a sequence of transactions. And if you do that carefully and cleverly and in a well designed protocol, it's possible to reduce the vulnerability to things like front running or other forms of malicious mev extraction."
    },
    {
        "speaker": "A",
        "text": "So does arbitrum, and arbitrum, dow, the whole ecosystem have a plan to move towards shared sequencing. It's interesting in that on at least l two beat. It doesn't seem to be a requirement for turning those pie slices greenhouse. And yet there is this centralization vector around front, running around what we've called the industry meV, right, which could be a source of centralization. So is there a plan to decentralize this? And what would that even look like?"
    },
    {
        "speaker": "C",
        "text": "I need to divide this kind of into two pieces. One is, where's the technology going? Because our team at off chain labs is doing research and developing technology that will be available. But in terms of what actually gets deployed on, say, the arbitrum one chain, that's really up to the Dow. So our team is doing research, we're developing alternatives, and we're working toward implementing decentralized sequencing. And when we get to the point where we have a mature protocol that we think is ready to go, if you will, then I think you end up with something much like what's happened with bold, which is that we announce that we make it ready, we make it available, and then the DAO could choose to do it. So, I mean, that's kind of where we are on that. Decentralized sequencing is just like decentralized validation is a complicated technical problem, which we've been working and thinking a lot about. We don't have a solution that we're ready to unveil at this point."
    },
    {
        "speaker": "B",
        "text": "I do want to hop backwards in the conversation. I had some technical difficulties, and so I lost the finishing of the bold conversation. But Raoul, I want to throw this one back to you. Ed here, he said the bold protocol. And also we have this new thing that we're implementing into arbitram that allows for permissionless validation but at a cursory glance, yeah, anyone can validate the chain. That seems like such an easy thing. Maybe you can talk about, why was this a hard problem? What is the hard thing about this problem that you're trying to solve? And when you take a peek under the hood of bold, what does that system actually look like? Why did Ed call it a protocol?"
    },
    {
        "speaker": "D",
        "text": "Absolutely. So the problem that we're trying to really solve is, how do you settle the correct arbitram states to ethereum? And in optimistic roll up protocols, this process is, there's a period of time in which people can come in and challenge claims posted to Ethereum. So, playing once again, the game of good and evil, let's say we have an honest party. Let's say Ryan, who mentioned he's the honest validator here, is making claims, is checking that things are right. And then I post a malicious assertion, or somebody else post a malicious assertion. Ryan can call me out, and he can be like, hey, this is wrong. And Ryan, his node, will run the bold protocol, which is a set of instructions on how to resolve this disagreement. So that's the whole idea. We want to be able to narrow down, okay, who is right and who's wrong. And Ethereum will be basically the final arbiter, which is, you know, one of the reasons why arbitrum is called arbitrum of. Of this challenge. And it's a protocol because there is a series of steps that needs to be taken, and participants will follow that. The honest participants will follow that protocol. The reason we, we built this is because it's really difficult to create a protocol that is safe against an important category of attacks known as denial of service. So we mentioned that there are seven days in which things can be confirmed from arbitrum on Ethereum. And in that seven days, anyone can challenge. If there's a challenge, there's an additional seven days in which that challenge will be resolved. However, today, evil parties can continuously spend money. They can basically spend, spend, spend and basically spam and cause a lot of problems so that. So that things are never confirmed. So the challenges go on forever as well."
    },
    {
        "speaker": "B",
        "text": "The seven days just never run out. They just, they just submit another proposal, and then all of a sudden, the seven days just resets. And then we were seven days until the end of time."
    },
    {
        "speaker": "D",
        "text": "Yes. So there will be a. There will be, you know, they can continuously, you know, deny service. So, you know, basically, they can deny confirmation of arbitrum states on Ethereum for as long as they're willing. And that's really not a good thing."
    },
    {
        "speaker": "B",
        "text": "Okay, so that is the problem. That is why permissionless validation is not just a trivial thing. We have to solve this one problem, which Raoul just articulated."
    },
    {
        "speaker": "C",
        "text": "Right? They had to in the prior protocol, and as far as we know, in all of the settlement protocols that have been published by anyone so far, you have these delay attacks where an adversary who's willing to sacrifice a lot of stakes can cause a lot of delay. And the thing that is new, the thing that the bold protocol achieves that other ones haven't, is the ability to eliminate all false claims in essentially constant amount of time, in essentially constant, bounded amount of time, no matter how many false claimers claimants there are. So if it's just Ryan's correct claim against, like, Raul and his 999 Sibyls, all making separate claims with bold, Ryan will be able to defeat all of the Rauls with only one extra week of delay, one extra challenge period of delay. And that's the thing that is unique about bold, and that's why it is safe to allow permissionless validation, because you don't have to worry anymore about these sort of civil attacks where we're just like a swarm of evil stakers. Previously, protocols tended to use a sort of tournament style, where if there were a bunch of competing claims, you would pair them up and they would sort of fight each other one by one, and then the winners would advance to the next round and so on. And here, instead of using a tournament style, you have just like, one giant fight where they all fight against each other, and just as quickly as a one on one fight would have been before. This is an all against all fight where one will be left standing at the end. And that's something that's unique about the bold protocol, is the ability to have that all against all fight that gets over in the same amount of time, essentially, regardless of how many combatants there are."
    },
    {
        "speaker": "B",
        "text": "I'm fearful that if I ask for more technical details, we're going to start to get really nerdy really fast. That was a fantastic."
    },
    {
        "speaker": "C",
        "text": "Oh, yeah, we can."
    },
    {
        "speaker": "B",
        "text": "A metaphor, though. A metaphor. Ed, Raul, is there anything else you want to add on to Ed's metaphor there?"
    },
    {
        "speaker": "D",
        "text": "Yeah, it's a battle royale, basically, and it's really easy to win if you're honest. If you follow the honest state of the chain, you're going to win at the end, and that's it. And I think that's also, there's two sides to the coin. It's really nice because that property discourages evil parties from even participating at all. Right. Like why would you participate if you're always going to lose against somebody who's honest? So a dispute about arbitrum state should be rare, right? Unless you're willing to lose something. Right. When you make a claim, when you participate in a challenge, you have to put up some stake and that can get taken away if you're wrong. So why would you participate in a game that you will always lose? And yeah, it's basically a battle royale, and honest party always wins."
    },
    {
        "speaker": "B",
        "text": "Yeah. So the mere threat of the bold protocol, the existence of the bold protocol is the threat that likely deters perhaps the majority of attackers that are interested in attacking arbitrum. Is there like a licensing conversation or an open sourcing conversation of the bold protocol? Is this a system that other layer twos can incorporate? What's the conversation here, Eddie?"
    },
    {
        "speaker": "C",
        "text": "Yeah, the bold code is licensed as the same as arbitrum nitro, which means that it's a business source license. That means you can use it for any non production use, but also that you can launch an arbitrum orbit chain that settles to one of the daos chains permissionlessly. So it's the same as any other arbitrum code."
    },
    {
        "speaker": "A",
        "text": "So with arbitrum bold, once that's implemented, we'll have collected another pie piece for layer two beat. And so that's great. And we're going to wait for a while on the upgradeability thing. Is that it? Are we done? Have we decentralized our layer twos? I know there's some shared sequencing stuff to do, but we actually got this question recently from the bankless community, which is, how secure are my assets and activity on a layer two? And the question is, is that equivalent security to Ethereum Mainnet is the overarching question. I feel like that's what the community really wants to know, is, are the things that I'm doing on layer two, is that equivalent from a security perspective to layer one to Mainnet? How would you answer that? I'll throw it to you first and then Raoul."
    },
    {
        "speaker": "C",
        "text": "Sure. So let me talk about what assumptions you need to make in order to get to the point of deciding that your assets are as secure as Ethereum. Well, so first of all, you need to assume that Ethereum is secure because layer twos are built on top of Ethereum. Ethereum goes bad, then the layer twos have a problem anyway. But you asked when will it be as secure as ethereum? So let's talk about other assumptions. So one assumption you need to make, is that in for arbitrum? Is that or is that there's at least one validator who is honest participating in the validation protocol currently, or the bold protocol once that is put in place. If what you want is a guarantee of non censorship and correct outcomes and progress, then you're there, but with the caveat. The caveat is that the l two consists of a bunch of other software, and you need to worry about whether that software has bugs just like any software that you're relying on. And so as a development team, we do our best in this area. We do tons of testing, we work on formal verification of some of our things, we have a lot of security audits and due diligence in all the ways we can. But I think once you get other than once bold is deployed, then I think the remaining areas that you might worry about are, one, this upgradeability and do you trust this security council? And then two, is there a bug in the software in any layer two system, you have to ask, is there a bug in the software that operates the layer two? Because it's additional software on top of Ethereum software?"
    },
    {
        "speaker": "B",
        "text": "Right. Ed, there was a take in the last week's weekly roll up that I gave out that I want to, perhaps I'm the one who's known to fire from the HIPAA bank list between me and my co host here, and so this might have been an instance of that. And so I want to check my take against an actual layer two team. The take was after the news that Metamask portfolio integrated a stake button for the Matic token for the Polygon network. So you can stake your matic and be part of matic staking for the layer two. And my take was that, well, this is going to become true of all layer twos. Like you're just going to be able to stake your token for the particular layer two and participate in the network work in that particular way. Now I want to check that take against you. Is there a world in which the arbitrum token is a staking token, that people can stake their arb tokens in a not too dissimilar way, and that they stake their eth to the layer one? And maybe you could paint a picture of where that is true and then also talk about the instances and why that wouldn't be necessary?"
    },
    {
        "speaker": "C",
        "text": "Sure. So if you look at Ethereum or you look at some other chains where staking is integral to the process of validation, on Ethereum there's a large number of validators and you stake to become a validator. And the fundamental reason why Ethereum validators need to stake is Ethereum uses a consensus protocol, which is like voting, and you need every voter to have skin in the game in order to make sure that people have incentive to behave in an honest way within the protocol. Right? With arbitrum validation, it works differently. A party who makes a claim about the outcome has to stake. But if you're a validator and you see someone staking, honestly, you're good. You don't need to stake yourself. It's only in the case where someone stakes on a false claim that under bold, you need to make sure that someone also stakes on the true claim. But it's not the case that everyone needs to stake. In the normal case in Arbitrum, only one party is staked in the validation process. So it's not inherent to the way that arbitrum validation works, that there needs to be stake, someone needs to be stake. That stake is currently in ETh. The arbitrum Dao could change, could decide to make it be staked in Arb if they wanted to. Maybe they will, who knows? And of course, on an orbit chain, if you're running your own arbitrum chain, you can decide how things are going to be. You could have staking on your chain if you wanted to launch an orbit chain, and the arbitrum Dao could decide to introduce a staking element into the protocol. But it's not something that's currently required by the design of the protocol as it stands now."
    },
    {
        "speaker": "B",
        "text": "Right? Okay, yeah. This is one of the reasons why we do layer two, is that actually you don't need 33 or 66% consensus over your layer two network. In fact, you just need an n of one trust model, as in just one honest actor to empower the networks. That's why we like layer twos. Where my mind goes, if I want to put on my token speculator, tokens are awesome hat I want to stake my arb token and have a share of the economic activity of the network, go to my share of the ARB tokens, the sequencer revenues. And so again, I don't know if this is on the arbitrum path, if this is the path that arbitrum is token. But if I wanted to just make a broad, sweeping vanilla token model for layer two tokens, it would be stake your arb tokens and receive some proportional share of the arbitrum sequencer model. Does that model make sense to you? And is there of the many potential futures of the Arbitrum roadmap, is that one of them?"
    },
    {
        "speaker": "C",
        "text": "Well, currently, the way it works on arbitrum one is that the, is that the fee revenue of the chain minus the part that's needed to pay for the l one posting costs of the sequencer. The rest of it goes to the arbitrum dao. So if you're a member of the arbitrum dao, if you hold arbitrum tokens, that money goes into your treasury already."
    },
    {
        "speaker": "B",
        "text": "Okay. So you don't necessarily need to receive the dividends to your own hands. It's a pot that we all collectively govern."
    },
    {
        "speaker": "C",
        "text": "And so it goes into the Dow treasury. Right. Right. I mean, what will the arbitrary Dow decide to do something else in the future? Maybe those revenues go to them and they can decide where they go, but currently where they go is into the Dow treasury. So they, in effect, go to the, to the control of the Dow already."
    },
    {
        "speaker": "B",
        "text": "Okay. Okay. This makes sense."
    },
    {
        "speaker": "A",
        "text": "That's interesting. And it brings another path for exploration we won't have time for today. This idea of layer two is kind of making sequencing permissionless and decentralized. I wonder if that's going to come to fruition or not, because would the arbitrum dao actually care about that? Because they're receiving all of the sequencer revenue inside of their treasury anyway, and so long as the arbitrum sequencers are not, I guess, selling off mev or doing something nefarious or doing something outside of those parameters, would they even care enough to decentralize sequencers to various other parties? You guys don't have to answer that question unless you have a take. But that's curiosity in my mind."
    },
    {
        "speaker": "C",
        "text": "I mean, it's really up to the Dow, right, whether they want to stick with a centralized sequencer and just assign that role to someone that they trust. I think there, and there's a few different issues here that you might disentangle. Right. One of them is, can that role be done in a distributed kind of committee way? And the answer to that question is yes, it can be done that way. What is the best way to do that? That's the topic of current research. So the DAO might decide, well, we don't want one centralized sequencer. We want to have a committee of 15 sequencers and assume that some majority of them will be honest. There's other approaches as well. Yeah. So it's kind of an open field, and it's really the DAO's decision as to what they want. As a research team, we are figuring out how to do committee based sequencing because that's what we do. We develop tech, and then because we think that at least some orbit chains will want it?"
    },
    {
        "speaker": "D",
        "text": "Yeah, I'd like to say it's also, there's a latency trade off. Like, if you allow thousands and thousands of sequencers, that's probably not going to work. You want transactions to be as fast as possible. And what's the purpose of a sequencer, really? One of the main purposes is to help spread and lower the costs for users of l two. On ethereum. L one, you could imagine a chain that just every transaction is posted individually to Ethereum, and that's it. It's going to be very expensive. It's pretty unreasonable. Might as well use l one. A sequencer makes it so that you can batch a bunch of l two transactions into. You roll them up, basically into this structure that you post to Ethereum, and it helps people save on costs and spread those costs across. You want that process to be as efficient as possible. You want it to be economically efficient. You want it to be fast, and there's a limit. You know, you don't want. You know, that's. That's really the main purpose. You wouldn't want, like, thousands of people running sequencers."
    },
    {
        "speaker": "C",
        "text": "Yeah. And you care about latency. Right. People want that fast response time that they've gotten used to. And that's one of the main functions that a sequencer can provide, is it can provide. It can provide sort of soft finality very, very quickly. And you wouldn't want to lose that in going to. In going to decentralization, or at least it would be a drawback if you did."
    },
    {
        "speaker": "B",
        "text": "Certainly. Yeah. Raoul. Ed, this has been a great exploration into one of the very important frontiers of layer twos. And as we come to a close here, I want to pull out just a tweet that I saw from Steven Goldfeder, also on the arbitrum team. He says, let's put some of the arbitrum's recent pieces together. Orbit stylus bold orbits are, of course, the arbitrum, or SDK chains. Like, you want to spin up an arbitrum chain. You call that an orbit stylus. Where you want to talk about what stylus is in bold is the topic of this episode. Ed, can you just weave these pieces together? Because it seems to be. These are the frontiers of arbitrum, these. These three different endeavors. How do these things all relate to each other, and how do they make arbitrum the best, uh, the best chain that it can be?"
    },
    {
        "speaker": "C",
        "text": "Absolutely. Um, this is really, uh, these are a bunch of ways in which arbitrum is a leader among l two s. Um, bold is our third generation, um, dispute resolution protocol. It's our third generation fraud proof protocol. We were the first to ship fraud proofs, and we think it's an important advantage for security. That's why that pie slice is yellow instead of red right now and is going to turn green. Stylus is another really exciting step forward. What it allows you to do is write smart contracts in any programming language you like, c, c rust, or whatever, compile them into WaSM web assembly code, and then put them into an EVM equivalent chain. So the cool thing about stylus is not just that you can write contracts in whatever language you want, but you can run them alongside EVM solidity contracts. You can run them on an EVM compatible chain, and it's a smooth experience. They can interact with each other. They can do all the things that other contracts can do, except you can write them in the language you want, which means many more developers will be able to write these things, number one. Number two is that you can bring in legacy code, like legacy cryptography libraries, really important for security that you don't have to rewrite everything in solidity. And, of course, much better performance because Webassembly has inherently better performance than EVM. So without giving up all the benefits of being ethereum compatible, this just opens up a whole new front in the task to make really general purpose programming on blockchains possible. So we're super excited about stylus, and you'll be hearing a lot about stylus coming up soon from us. Then, of course, orbit is the technology that allows you to have your own chain, to customize it the way you want, and to take advantage of everything that arbitrum has to offer. This stuff is available on Arbitrum one and Arbitrum Nova chains from the Dao chains that have a lot of usage, a lot of liquidity. But you want your own chain, great. You can have this, too. Thats the orbit piece. Its all about sort of making this technology safer, making it more general and flexible, and making it available to everybody."
    },
    {
        "speaker": "A",
        "text": "This is so cool, guys. And just one final question as we close. Maybe this one for Raul. I'm wondering, Raul, if you could kind of zoom out for a second and give us some perspective on Ethereum's overarching roadmap. The scalability roadmap. I remember when you first popped on my radar, it was like 2018. There was this existential question for Ethereum. It felt like the Ethereum roadmap was kind of floundering, like we weren't going to make it like sharding what was happening there. And then you and some co founders stood up and you said, I got this. We're going to build the beacon chain. We're going to call it prism. We're going to deliver on that. Now here you are, you've done that delivery, and now you're working on scaling Ethereum in a new frontier, which is this kind of layer two frontier. How we doing? I how's Ethereum doing according to, like, its overarching roadmap like radar progress. Where are we?"
    },
    {
        "speaker": "D",
        "text": "Ethereum is way bigger than any one person. Ethereum core development is at this point, which is amazing. You know, it's not something that I could have said confidently even like, you know, say four or five years ago. But, you know, the state that we're in right now with so many different teams, so much quality, stability of software that's gotten better, you know, we've gotten through proof of stake. It's awesome. And I think the prism client, which runs still a large portion of Ethereum mainnet today, is a project here at off chain labs. And it's really cool that we get to have all kinds of discussions about Ethereum l one roadmaps and l two roadmaps under the same umbrella. We've learned a lot mutually, and I think it's been really good with what's coming up next would say EIP 4844, making things cheaper for roll ups. That's the first upgrade in which Ethereum really enshrined the things that it's doing for rollups, because it sees roll ups as the way forward, it sees l two as the way to scale, not just execution, but just end user activity and cement itself as this premier censorship resistant data availability chain that's the biggest out there, the most secure out there. I think Ethereum is really figuring out its identity, I'd say since the advent of these upgrades that are enabling l two s, and we'll see that a lot more. I think a common criticism even that I had was what is Ethereum's identity four years ago, and I think now it's becoming a lot more clear in my eyes. So that's, we're in a good direction. Really happy with, obviously, with how the merge went, with how things are running, and we'll just, we'll see what comes next."
    },
    {
        "speaker": "A",
        "text": "Very exciting you guys are doing."
    },
    {
        "speaker": "B",
        "text": "That statement from Rel just now should hit extra hard as somebody who was formerly and actually still is a layer one client dev and now also a layer two dev as well. So Rel has been around the layers."
    },
    {
        "speaker": "A",
        "text": "Well, great. I'm ending this episode with a smile. Very, very bullish on what we're doing across the Ethereum ecosystem. Scaling this out. So, Ed, Raul, thank you so much for joining us today."
    },
    {
        "speaker": "C",
        "text": "Thanks for having us."
    },
    {
        "speaker": "D",
        "text": "Yeah. Thank you all."
    },
    {
        "speaker": "A",
        "text": "Bankless nation risks and disclaimers, of course. Gotta let you know, crypto is risky. You could lose what you put in, including on layer twos. There's bugs out there. Be careful. But we are headed west. This is the frontier. It's not for everyone. But we're glad you're with us on the bankless journey. Thanks a lot."
    }
]