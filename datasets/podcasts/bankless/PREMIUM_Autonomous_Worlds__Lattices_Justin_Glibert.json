[
    {
        "speaker": "A",
        "text": "What's the final stage of any civilization? Right? It's probably to create a universe. It's like the final thing you do. You're like, okay, we've explored the universe, we've conquered the stars, we can use all the energy. So now the final thing we'll do is we'll create a universe and we'll let that universe do whatever it wants. And I think the thing that's interesting with all of this cryptography stuff, distributed system and all of that, is we're going towards this idea of like, hey, we're going to be able to create a universe that is real. You know, it's like, truly objective, but it's interesting because it goes toward that agenda of, like, the final stage of civilization, which is, let's. Let's create a universe that goes beyond us."
    },
    {
        "speaker": "B",
        "text": "Welcome to bankless, where we explore the frontier of Internet money and Internet finance. And today on bankless, we are exploring the frontier of on chain universes. On Ethereum, which is actually a real frontier. Space is the final frontier of physics and matter, but autonomous worlds are the new frontier of digital on chain universes being pioneered by the lattice team, of which Justin is a co founder of. And he is on the show today, you might have heard of fully on chain games or autonomous worlds. Bankless nation. I think this frontier of crypto is so big and expansive that when it's finally ready for production, it will represent the next wave of crypto development. In my opinion, this is not just something that Ethereum is good at, but it's actually Ethereum's main story arc, its actual main quest line for what Ethereum is bringing to the world. Ethereum is not just a financial computer, but it's a state route for an infinite number of universes, all with their own physics, objects, players, agents and state. And like our universe, they still continue on, with or without our presence. Dare I say, the actual real metaverse. Justin from lattice is going to walk us through the evolution of autonomous worlds, starting with their accidental discovery with this experimental game that we all played in Ethereum called Dark Forest back in 2020, to where we are today with lattices, software package for building autonomous worlds, and the current set of fully on chain games that are available to play right now to where this is going, which is an infinite landscape of Internet universes on chain economies and endless possibilities. On this episode of Bankless, bankless ancient, you are going to get a taste of where the Internet has always been pointing towards. It just took us a while to get here, so let's go ahead and get right into the episode with Justin from Lattice. But first, a moment to talk about some of these fantastic sponsors. Bankless nation. I'm happy to introduce to you Justin Glibert, who is the co founder of Lattice. Justin, welcome to the show."
    },
    {
        "speaker": "A",
        "text": "Hey David, thanks for having me."
    },
    {
        "speaker": "B",
        "text": "I think Lattice and what you guys are doing over there is probably got a pretty strong cult following of enthusiasts, but might not be pretty familiar with the general bankless audience. So can you just at a high level explain what you guys are doing over at lattice? What is your guys scope?"
    },
    {
        "speaker": "A",
        "text": "Yes, the scope is to make unchained games real. So I feel like our origin stems all the way back to good old dark forest. If people here remember, that was a few years ago. I worked on it very briefly, should not get any credit for it. I was not there at the beginning, but I got my interest spiked. I stayed with the people who were working on it in Mexico. And the thing that really blew my mind immediately is like, huh, why are we not making more things like this? We have this cool multiplayer open computer and you can do whatever you want on it, but we just stop short most of the time. I don't know if you remember early Ethereum ideas like, oh, there will be a full node in your lock in your house and you'll be able to rent it by the second. That was wild times. There were a lot of ideas like this. Now we're away from that. But I think one thing that remained true is that as long as people didn't take the post financialization idea seriously, so the idea of like, hey, we'll do more than finance on this word computer, they would just not build the ideas and the tools for it. So where we got started is it was just a hacker group. Me and a bunch of other people trying to build this game was first called ZK Dungeon and then called Amber. And the idea was like, hey, let's just build something kind of like dark for us, you know, a different type of game. Also using zero knowledge proof. We didn't realize at that time that the Ziki proof are not the important part. The important part is that you have this open game, open environment that runs entirely on Ethereum. We started from hacker Group and then we grew. I think people really started to get a sense of what we were doing about a year and a half ago when we did Opicraft, which was a fully on chain Minecraft clone. It's about the same time as when optimism branded the op stack. We were basically the first group that forked their new update, bedrock to make our own chain. And then we met each other in person in New York, and they were like, wait a minute, that's pretty interesting. So we did Opicraft. They were like, well, there's this op stack thing. We announced it together. And essentially, as we kept going on that journey, there are two very big parallel paths we went on. One is, let's make the technology real. So we first build games, and then we were like, okay, these games are really hard to build because the tooling is not there. So we built this thing called mud. It's an open source framework for making onchain games. Many, many, many games today use it from one person team to kind of like big studios. And the other path we took was, let's legitimize the idea. Let's, like, talk about it with an open mind. Right? So, like, one thing we keep saying when we were doing these small meetups is, don't worry about the gas, don't worry about making money. And it was like always, like, where we're starting from, you know, just. Let's just try to make interesting things. There was an essay that got published, I think, two summers ago called Autonomous Worlds that came from, like, our little group that was. That kind of, like, coined a term for people to rally around. We organized a bunch of conferences at DEfcon twice. So, yeah, we took these two paths, kind of got together, and now it's really exciting, because, looking back two years, there's a pretty interesting ecosystem of people, like big and small, building things. Seriously. And I think we've finally reached the stage where there's enough people believing that it can be real, that if we probably all disappear tomorrow, like all of lattice, it will continue. So, that's the one thing I'm really proud about, is the bus factor of odd chain games went up by quite a bit. So, sorry. That was not as short as an introduction as I would have liked it to be, but we traced it back a little bit."
    },
    {
        "speaker": "B",
        "text": "Yeah, I think that gives listeners a snapshot of the tone or the vibe of where we're going here. I think there's two potential versions of what this conversation could be, and there's one that I very much want it to be. And one potential version is we could just explain what games you guys are building at lattice, why the games are different, why they're unique, and what properties that they have. But I think there's a higher, more elevated version of this conversation that I want to get to, which is explaining the rabbit hole that is autonomous worlds. Getting people pilled on autonomous worlds, which I think is an idea that is beyond lattice. I think if we rerolled the idea of ethereum, you would see ethereum be born, and then you would see people arrive at, oh, you can build these things called autonomous worlds, and that would be rediscovered in every single resimulation of humanity discovering ethereum. So I want to actually step back and approach this conversation from first principles. You kind of alluded to this a little bit in the introduction, but, like, I think the first time I ever heard you pitch this, you were talking about, like, well, we invented bitcoin, and we. And bitcoin became Internet gold, so that was like a monetary evolution. Ethereum was invented and became an Internet financial system. And so now that's a financial evolution. But I think you also have a different vision beyond just like, the financial side of what Ethereum really does. Like Chris Dixon, as popular as crypto is, like, you're adding own onto read, write own onto the Internet. But I think you have a different take about what are the properties of Ethereum and what that really enables. And maybe we can start this conversation there with, what is that alternative viewpoint about the affordances of Ethereum and what it can bring and bring to the world."
    },
    {
        "speaker": "A",
        "text": "Yeah, so I think the challenge here is not to go too philosophical too quickly, because that's one thing we'll get."
    },
    {
        "speaker": "B",
        "text": "There at the end."
    },
    {
        "speaker": "A",
        "text": "Yeah, I'm sadly too good at this, so feel free to interrupt and bring me back to earth whenever that kicks in. But so I would say one way to think about this whole thing is that we're adding a new dimension to digital things. Digital objects, basically. It's like there's. We've been like, since we got computers going, actually, since we have math, you know, like, with math, we're able to kind of, like, create these objects that exist in our head. And my math objects are the same as yours. They can actually interoperate with each other, but we can't touch them. But they still have rules. I can write a paper and you can then understand it, and we don't even have to talk with each other. That's still a mind blowing things about math. Math spans a whole universe of stuff. The problem with math, though, is that it's not really multiplayer yet. You can't really know what math equations people have in their head or all of that. It's still really in between single player and multiplayer, even if it's fully of, like, outside our physical realm. And so the thing that's interesting with computers is as soon as we started networking them, we kind of, like, start being able to have these entirely non physical realities that are not just subjective anymore. Like things like money from capitalism, like religion, nation states, and all of that. In the book sapiens, the author, refers to them as inter subjective realities. So they're real, they're realities, but they're still kind of subjective because, I mean, you and I can love humanity in very different ways. It's still pretty subjective, even if it's kind of like a shared context between the two of us. And the thing with computers, we can kind of start going towards this idea of, like, inter objective realities. So we have these realities that are not physical, but they're way more objective. Now, like, you and I can log in into World of Warcraft, and it's like a very tangible reality. Like, there is no arguing around. Like, did we. Did we kill this, like, level 50 boss or not? It's just we either did or we didn't, right?"
    },
    {
        "speaker": "B",
        "text": "Not just that. There's actually, like a geometry to the space. There's coordinates in the game. There's structures, there's visual structures, right? Maybe there's not matter there, but it's just close enough to the point where that does feel like a real space."
    },
    {
        "speaker": "A",
        "text": "And the thing that's interesting is, I would say it might be close enough or maybe it's not. Can we get to digital matter? When people talk about digital matter, all of that stuff, they always think about the input output. It's like, how does our body experience it? It's like, oh, let's put regroid VR headsets, or let's smell the thing you would smell in a reality. But actually, it seems that the input output of the reality is one way we perceive it as more real, but another thing is, does it have consequences? Does these interest objective realities have consequences? One thing you see with video games that you see as well with crypto, even the financial version, is we now have these completely digital systems that are very serious consequences, right? In crypto, it's a lot of like, well, get rich, get poor, get hacked, you know, and in video games, go to jail. You know, that's like the really, really bad outcome. But in video games, like, if you start investing enough time, and also it's a relationship with other people, you know, it's not just a single player experience. It's like me and my friends or my foes have, like, spent a long time getting to this point. These realities have consequences, right? On your mood, on what you're spending your time on. And the thing that's interesting is it seems that crypto, or, like blockchains in general, enables us to make these inter objective realities more and more objective to a stage where we could have a world, and it doesn't have to look like this world. It doesn't need XYZ coordinate. I would say. Actually, I sometimes say that ethereum is still the most crazy MMO out there, but it's really an MMO. You have all of the classes that participate in this computer, and they all have very different game they're playing. And this network kind of, like, defines the rule of this reality. But it's still kind of, like, still a little bit too loose. It's very much like, oh, programmers can do whatever they want. The only real physics is that there's this currency. And so, approaching it from that perspective, it seems that these kind of, like, crypto system go towards the possibility of making these digital realities, like, more and more real. To a point where in the autonomous world's essay, they're described as, like, they could be like Mars. Like, you and I know that Mars is real. You know, there's like, a curiosity rover there. But how often do you see Mars? No, you don't see it, like, unless you have special instruments. But we all kind of agree it's real because when you use the instruments, you see the same thing the same way. Like, I don't run a node, an ethereum node. Maybe you do. I don't know how often you check it, but, like, the whole ecosystem, like, believes these things are real. Because if we use the same instruments, we kind of get to the same results. Right. Mars doesn't care if you don't like it. It's going to keep executing its role, like the constant of gravity curiosity rover, even if NASA really doesn't want it to stop, the little nuclear battery inside is going to stop working at some point. And it's the equivalent here. We can take these digital realities and make them more and more objective to a point where, okay, actually there is no one that can stop them. There is no one that can break the rules. And now it's time to get real, because the consequences are very serious with crypto, with bitcoin, we saw it that the financial consequences are serious. But I think we can extend this seriousness to whatever rules that we want. It doesn't have to be money. And I think that was the thing that we got to, which is, oh, okay. Fundamentally, these are tools to make realities way more objective over time. And, I mean, it was pretty ballsy to have money as your first use case. It was like, okay, out of all of the things we could make more real, which one should we start with? It's like, let's start with one of the most important thing in, like, this kind of reality we live in, which is capitalism. But you can very much apply this to anything. So I'd say we can start with that. Let me know if there's something you would like to go deeper into."
    },
    {
        "speaker": "B",
        "text": "Yeah, right. And really, just to remind listeners about the conversation thus far is we're talking about different ways to perceive Ethereum, right? Which is typically perceived as like, a revolution in money and finance. And I think what you are offering is like, well, there's a different way to perceive Ethereum as like, there's a universe out there called the universe of Ethereum, and it has state in the same way that the real world has state. And there are objects in Ethereum just like there are objects in the real world. And we're starting to flesh out this structure of this world, but it's very, right now, primitive. It's just a bunch of financial apps and financial tokens and financial use cases. And then now maybe we're starting to get into some social stuff. But I think you have a very clear direction of where this goes. I want to actually go just to really make this really clear for listeners. Lattice maybe is accidentally, sometimes called a gaming company, a fully on chain gaming company. Maybe you guys are. But maybe we can actually narrow the scope of the conversation and talk about Lattice, the gaming company, just from that perspective. You talked about this game, Dark Forest. I am going to guess that most listeners are actually not familiar with Dark Forest. So maybe you can talk about Lattice as the gaming company, and then we'll kind of expand back into the more higher level stuff after that."
    },
    {
        "speaker": "A",
        "text": "Yeah, sure. So the TL doctor on dark forest is. So many people were involved in Dark Forest originally. The original founder of Dark Forest is Gupt, who kind of, like, put the first version together, got the people to work on it. He wrote an essay called the strongest Crypto gaming thesis, which really got on chain games going at that time, people didn't really know why on chain games would be a good idea, but he really put it down in very clear terms, or at least the first version of these terms. And what dark for us was, is there were games on Ethereum before, right? I don't know. Maybe you remember FOMO 3D. We can also explain what FOMO 3D was. FOMO 3D was."
    },
    {
        "speaker": "B",
        "text": "I've referenced FOMO three d a number of times on the podcast. It's basically, well, it's also a money game, right? It's a money game. It's specifically a specific economic game, but it is meant to be a game."
    },
    {
        "speaker": "A",
        "text": "Exactly. It is meant to be a game, and there are rules, and there are no hacks. The person that won respected the rules. Everybody was like, well, you cheated. But no, these were the rules of the game, and you won. Right? So Dark first was probably not the first game, but it was the first game that was like, okay, let's just treat the Ethereum as a computer, not as a programmable bank. And the idea was like, okay, we want to be able to make a game where the universe, which could just be kind of like a map. It's like a two day map. Imagine Google maps. And the universe is so simplified that it's just points of interest. So imagine there's you, there's your house, my house, there's the bakery, and all these three things exist. I cannot be between my house and your house. There's only three places where things can be, and we can send kind of like people and energy between these places. So that's really the premise of the game. There's a bunch of points of interest on the map, and here's a bunch of interesting things. First, the map is infinite. It's procedurally generated. So it's like in Minecraft, you can kind of keep expanding the map. It respects some rules. But the one thing that is interesting is you don't know what the map looks like when you start playing the game. And that might be a bit strange to people that know a little bit how blockchains work, because the point is, everything is kind of like supposed to be public, right? And now people talk more about cryptography, zero knowledge, proofs and all that. But at the time, it was. It was very niche. And one of the key innovation of dark forest was to say the map is the same for everybody. But when you start playing the game, you don't know what the map is. And the only way to explore the map is to do proof of work, kind of like bitcoin, you know, you have to spend computational resource to remove the fog of war. You can either do it around you, because that's useful. You know, if I start in this universe, I kind of want to know."
    },
    {
        "speaker": "B",
        "text": "What'S around me, because so listeners think like a Starcraft or like a game where, like, you, you start out, but, like, the map is unknown to you because you literally haven't explored it yet. So you always know what's in your, like, locale."
    },
    {
        "speaker": "A",
        "text": "Exactly, exactly. And it's a little bit like Solaris or something like that. They're just planets in space, and you start on a tiny planet, basically, and you can either explore around you, using your computational power to explore around you, or you can explore wherever you want. But the thing is, if you start exploring pretty far away, you don't even know if there are people there. You're just kind of, like, guessing. And the key innovation is that you were able to use zero knowledge proof to essentially prove to the game, which was a smart contract, that the move you're making is valid. That is, hey, I'm moving between my planet and another planet, and it's not that far without revealing where the planets are. So the really mental experience you would have is you could go on a block explorer or, like, write a tool, and you could see that there's all this activity in the universe, and you can see the strength of the planet and the forces being moved. So you could see, like, this, like, player just move 10 million forces from that planet to that planet, but you have no idea where it is. So the reason it was called dark, it's called dark tress is because it's based on the second book of the three body problem trilogy. I mean, that is not way more popular."
    },
    {
        "speaker": "B",
        "text": "I literally have it right here because I use it to stabilize my. My monitor."
    },
    {
        "speaker": "A",
        "text": "Show you on camera? Yeah, exactly. That's issued a new book, and don't want to spoil the book, because I guess now many, many people are going to want to know the story, given it's on Netflix. But one key thing in dark trust is the idea that the universe is dark, and you don't know what's going on there. Right. So that was the feeling that was trying to be creative. You don't know what's going on in the universe. You can move between these planets. The fun side effect of this, though, is because all the game was written on smart contracts. And the reason it was written on smart contracts, the legend says, is because Gupt and co. Had never really written anything else. They were like, oh, we're just going to use smart contracts because we are at these Ethereum workshops, and it seems like the right thing to do. Let's put it on smart contracts. But a side effect of that was that now people were able to build stuff on top of the game. So, famously in Dark Forest, there were no marketplaces, there were no alliances. It was really bare bone. It was just the rules of the universe. You can move, you can increase your energy, you can build defenses on your planets, and players built everything else. They forked the client. They started adding stuff like, oh, here's a marketplace. We are adding some smart contracts to the game. My favorite one is people build an autonomous alliance. And because darkface still exists today, it's smart contract on Nose's chain used to be XDai. The creators can't kill it. That's one other thing that is interesting with darkfres, is the game can never stop. It will run forever. And there's still today this kind of player in the game that is not a human player. It's a smart contract player, and you can kind of, like, it has a score, it has an army, et cetera. It's almost like an autonomous NPC that players have added to the game. So you can start as you start. Kind of like reading about Dark. First you're playing it, you get to the realization that, like, huh, it's not a bug, that the developers only put the rules of the game. They didn't build anything on top of it. It's a feature. They made the gift to all of us of the rules of the universe. And then they're like, good luck. Go build stuff on top and figure it out. And that was really the thing that blew my mind, because it was like, oh, okay, we have this inter objective reality. Gupt and co. Have defined what the physics is, what the rules of the universe is. But now all of us can interact with it the same way, like NASA can send a rover to Mars. But if you and I team up together, maybe in 20 years we could be there as well, and we don't need permission from anyone, and we can kind of stroll around respecting the same rules. So that's dark for us. That's where it all started."
    },
    {
        "speaker": "B",
        "text": "Can I pause and let's do some bullets about really, the impactful points about that story that I want to make sure that listeners captured. One is that the state of the dark forest universe is fully on chain."
    },
    {
        "speaker": "A",
        "text": "No servers."
    },
    {
        "speaker": "B",
        "text": "No servers. Right. This server is Ethereum. It's a procedurally generated universe, and there's different planets. And because of the leveraging of cryptography, CK proofs, you as a player of the game, you would literally go to the Dark Forest website, you would be dropped into this universe, interacting with this smart contract, and you would actually only know the state. Just like how when you are born, you are only aware of your local environments. You don't know what's on the other side of the earth. So you're dropped into this universe, and you only know what's around you, which mimics reality. And so you can start to explore this world, but you aren't actually disclosing your information to other players because of the power of zero knowledge cryptography. And so this very minimal rule set and these things, these properties that mimic real life started to produce this immersion behavior. And like you said, it's on XDai, which is a side chain to Ethereum. So, in theory, this thing doesn't ever die. It's a no. Like, no. What is Ethereum for unstoppable code? What was dark force? It was just code on Ethereum. And so we have this, like, universe that's created, that mimics some properties of the actual real universe that we inhabit, except it exists with all of its logic on chain on Ethereum and just perpetuates because it doesn't know not to."
    },
    {
        "speaker": "A",
        "text": "Yeah, I think that's. That's brilliant. And I would say one more thing, which is that just like this universe, all of us can engineer and do science in it. In. In dark Forest, anyone can engineer and do science in dark forest. You know, you can all go and participate in this rule set, because the point is, the computer is open, you know, open to anyone, to anything. AI's and humans alike. AI's are not discriminated in dark forest. They're first class citizens, just like humans."
    },
    {
        "speaker": "B",
        "text": "Right. Okay. And so this, I think, dark forest kind of really opened up, like, exploded. It was the big bang of, like, autonomous worlds. Like, people are realizing the properties of these things, like, after the fact that they're created. And so, like, where does the story go from here?"
    },
    {
        "speaker": "A",
        "text": "So the story goes, after dark forest, nobody really gives a shit. So people really are like, wow, darkface is really good. And people are like, wow, man, we really want more dark forest rounds. But it kind of stopped there, you know? And so one thing to know about dark forest is it was a tremendous effort to make dark forest happen. Right? Like, this was dark forest is. It was at the time, like, a truly insane project. I remember the people that were running XDAi were telling us, hey, we have to spend, like, $100,000 a month just in notes to be able to serve the RPC request to the users, because most things out there, you send one request to get the price of the pool and another one to send a transaction. When you play dark press, you just plugged into the blockchain. Your brain is plugged into the blockchain as you interact with it. First, from an infrastructure perspective, things were not ready. Second, blockchains, from a latency perspective, have not been optimized for that kind of stuff. Darkface had to be built in such a way that it was not a pain in the butt to make a transaction every 12 seconds. Third, the amount of tooling you need to make something like, there was no tooling for Darkfrost. Dark first is this super crazy complex spaghetti code app. I remember every single time we wanted to add a new feature, it was excruciatingly hard because, once again, ethereum application, the tooling is not there to add things to them. To manage a large amount of state, usually the state is very minimal. People actually try to have the least states possible because you pay for it. Right. Whereas here, Darkfest was kind of like a maxi project. It's like, let's just have as much state as we want."
    },
    {
        "speaker": "B",
        "text": "So it was built, it was an assumption of a complete abundance of block space."
    },
    {
        "speaker": "A",
        "text": "Exactly, exactly. Complete abundance of block space, lower latency, et cetera. So kind of stopped there. And when me and Alvarez, the co founders of Lattice, the two of us kind of, like, ended up a summer with the dark fries founders, and we're like, let's try to build another game like this. Let's just see what it takes. It was so hard. I don't know if you know. Do you know the game dungeon keeper? It's like an old kind of like. So, Dungeon Keeper is an old game from Peter Molyneux, but the idea is you're like an evil kind of, like, dungeon master, and you have to, like, start digging underground, recruit goblins to kind of, like, take care of your dungeon, and inevitably, you'll either meet some heroes underground or other people's dungeons. And now it's a war, and you kind of, like, grow underground. And our idea was, let's use the same technology as dark forest to also have this underground world where we start somewhere. You don't know what's around you, and you have to dig. You dig in this tunnel, you try to find some gold, you expand your resources, and at some point, you might inevitably dig into someone else's dungeon. And that's when all hills break loose. So that was our idea. We built it for, like, a year, actually. It was built just like it was. It was a big project. And we realized after one year of building is it wasn't fun. This game is not fun. It's just not fun playing. And we looked back, was there any way to know, how could we have done this iterative approach. And turns out there was no way to iterate because any change was taking months and months and months to just implement. There was really this massive problem. It's like computers a long time ago, before Linux, before operating systems, before libraries, before all of that stuff, um, computers were batch processing systems that were actually mostly used in banks and in government. Kind of like reminiscent of early ethereum from, from that perspective. And, and they were batch processing machines that were not interactive. You know, like, like yes, the computers, the IBM kind of computers back in the days and your MacBook are very similar from like, like from a, it's the same system. It's just much better from a developer perspective and user perspective. And it really felt like that at a time. I mean it was getting better. It was still pre kind of like roll up scaling and all of that. At that time we thought we would have to run our own sidechain. That was where we were at. But specifically the way we talk about it at lattice. Is that Ethereum still today? Actually, if you don't take mud into account and we can talk about mud later, but you still program Ethereum. Bare metal, so bare metal. What this means is you have a computer, you just write some code and the code just runs on the computer. No operating system, nothing. That means you have to manage your own memory, you have to manage your own storage. You can't upgrade things. You have no databases and all of that. And that's really what Ethereum was like at that time, right? We just had to build this thing bare metal. And so maybe this is a good transition point because after this dungeon keeper game we thought okay, what would it look like to build a framework for on chain games? We were not that sophisticated in our thinking yet, but what this led us to over like a year was this realization that like huh, why did people build Linux? I mean even before that there were other operating system, but why are there operating system? Why can't just people write everything bare metal? Well it turns out when you have multiple applications that need to kind of like need to be added on top of each other, they need standards to talk with each other, they need to be upgraded. You have things like databases today if you write a website you don't take the user state and you put it on the disk and you write the code to put it on the disk. Now you use postgres or MySQL or something like that. You let the people with a much longer beard than you take care of storing data and having it around for the next ten years. We thought about it from the perspective, we're like, huh, okay, so the reason why there is no framework for building Ethereum application, the reason why there is no operating system for Ethereum is because the apps that are on Ethereum are so primitive and they're so mindful of cost that you don't want an operating system today. It's actually glorified for people to go write their code in assembly. Like you go on Twitter and you go check out the cool solidity kits. They're like, I'm just going to write my ERC 20 in assembly. Because that's true. Chefskis kind of like Ethereum programming."
    },
    {
        "speaker": "B",
        "text": "And that's really for people like me who don't code. Can you like unpack that take for me? Because I actually don't understand that."
    },
    {
        "speaker": "A",
        "text": "So there's different kind of like levels of abstraction when trying to explain something to computer for it to do it. And the lowest level of the computer is tiny instructions for the CPU. That's called assembly. Right. And so you can write this by hand. That's what people were doing before we went to the moon. I mean, not me, I'm not american, but I'll leave it to the Americans. We as humanity. Yeah, we as humanity. Humanity went to the moon just with assembly. Like the whole, like Lander and all that was written assembly by hands, by people."
    },
    {
        "speaker": "B",
        "text": "But so you're skipping over every single layer of extraction, writing it straight to getting really close to the metal machine code."
    },
    {
        "speaker": "A",
        "text": "Machine code."
    },
    {
        "speaker": "B",
        "text": "And the benefits of this, at least in the defi context, is that your contracts are really gas efficient."
    },
    {
        "speaker": "A",
        "text": "Yeah. So the idea is a lot of people distrust the solidity compiler being like, I'm smarter than the solidity compiler, because what the solidity compiler does is you write some code and it turns that into machine code. Right, right. But every time."
    },
    {
        "speaker": "B",
        "text": "But there could be errors or whatever."
    },
    {
        "speaker": "A",
        "text": "Exactly. And then also it's just like way harder. It's just going to take you like 100 hours to make the most basic thing in many ways. So you have these layers of abstraction. Right. The first one is the introduction of a programming language. That's a big job, from assembly to a programming language. But in computing the trick we keep pulling is you just keep adding layers of abstraction to make it easy for people to build things. We're in this app right now, Riverside. You want to count the layers of abstraction. So there is your MacBook and it runs a kernel in assembly. And at that kernel runs macOS. In macOS you have a bunch of programs running and I'm using Arc right now. It's a chrome fork. It runs a browser, and then that browser runs some JavaScript that then runs Riverside. This many layers of abstraction, and what does this give us? Why don't the Riverside people are like, we're going to write Riverside in assembly and we're going to ship to you on a dvd that you're going to have to put in your computer and boot it. Well, the reason they don't do that is because the browser is a distribution mechanism. It's secure, so people can run untrusted code. You have all of these layers of attraction. The problem is the cost. Things that run in the browser are a million times slower than if you run them on your computer. The reason we don't care is because computers are a billion times faster than they were ten years ago. Probably a trillion time faster is Ethereum didn't get faster for like six years. So people were like in a massive scarcity mindset. They were like, oh my God, we're just going to keep getting more users and Ethereum's not going to get faster. So instead of climbing the computer science abstraction layer of abstraction, which is what people do, what people have done in the computing industry, they kind of stayed in caveman mode. And Caveman mode is like, let's just do everything in assembly. Let's try to fit as many apps as possible. But now we're in trouble. Completely different world. We have layer twos, we have all of this scaling stuff, but all of the paradigm for programming and for people thinking about these programs has not caught up yet to the abundance. And that's, I think, a really interesting thing."
    },
    {
        "speaker": "B",
        "text": "Okay. And I think that starts to get into, like, why, what is lattice and what is it doing? So I'm going to go ahead and guess that lattice is some level of abstraction for building fully on chain games. On chain, exactly."
    },
    {
        "speaker": "A",
        "text": "Yes, yes. And we think that one of the big gifts we're going to make to the Ethereum ecosystem is that all the stuff that we're building for on chain games, it's secretly for anything. There's nothing that we're putting in our toolkit that is specific to games. It's just for any apps that is sufficiently complex."
    },
    {
        "speaker": "B",
        "text": "Gaming is a really good first use case to be a very complex use case."
    },
    {
        "speaker": "A",
        "text": "We care about it a lot, right. Because if we kind of like backtrack to a little bit of a philosophy interlude we did at the beginning, what we want is we want to add more verbs to ethereum. You know, Chris Dixon says blockchains adds the own verb to the Internet. And we think that's, like, a tremendous level up when it comes to how objective digital realities are. Because now, you know, there's money, there is ownership, but we're like, let's add all the other verbs. You know, there's, like, so many others left. So that's what we're doing starting from playd."
    },
    {
        "speaker": "B",
        "text": "Okay, so kind of just like, speed running through the history of, like, gaming. Specifically, we had, like, the crypto games of 2021, which were basically like Axie Infinity, right? These, like, Ponzi esque economic games, kind of a flash in the pan. They kind of spurred some development, but they really haven't made a lasting mark on the Ethereum space or the crypto space. We have the crypto games of today, which are actually, like, much more like normal games. They are very highly polished, aaa high graphics, cardinal high gpu games. And, like, just the assets in the game are on chain somewhere. It's like, only the things of value in that universe. And now finally, we have, like, the layer twos to actually support, like, a more flourishing type of assets. So there's many, many more types of assets, but it's still just the assets, right? It's still just crystics. And so, like, what we're going for, what let us is going for is, like, let's put a. The actual computation of the game and put that on chain two, which is, like, extremely ambitious because, like, the level of scale that you need to put, like, big, big games on chain is still, like, a very large amount of scale. But the thing is, like, we have a pretty clear path to getting there. And also, you don't have to start. You don't have to put, like, graphics on chain. Like, you actually don't have to put logic on chain. And so that's, that's, like, what we're going towards. And so, like, what are some of the games that are being actually built, like, today? What are some of the fully on chain games that, like, people can get their hands on?"
    },
    {
        "speaker": "A",
        "text": "Yeah, and one thing I will add is that it's not only scale, which is one thing I think people focus a lot on, rightfully. Like, if you think about 20 years ago, we could have had a billion IBM mainframe instead of ten. It would not have changed anything. It's like, okay, we have a billion IBM mainframe, and what do we do with them? There's still no way to actually make them do anything. So it's not only scale is. You have to create these layers of abstraction right. It's not just like, oh, we have an EVM chain with a billion TPS. Oh, yeah, cool, you have that. And now how are people going to build the applications to be put there? Right. It's like having a really big computer and having no operating system and like, essentially nothing to put on top. So we think like, kind of like, our quest is both on the side of like, well, okay, we have to, like, spread these ideas and get like, encourage people to build these games and re explore the other verbs of Ethereum beyond own. Another branch is while we have to do the scaling stuff, and thankfully, a lot of people are working with us on that, we're working very closely with optimism, but everybody's working on scaling. The third thing is we have to let the developers, and also everybody else, not just the developers, be able to put things on these computers. That's the third branch. If we go back to the games that are being built today, there's a couple. It ranges from people essentially doing the social crypto stuff. Basically things that are very close to what currently exists. They can just build it 100 times faster, all the way to very crazy pie in the sky projects. Some of them actually having the resources to be developed. If we start with something that is a bit more close to what people imagine today, there's this studio, good friend of ours, small brain game. What they do is they're, let's take a really simple thing, Scrabble as an example. You lay down letters on the board, but now the twist is you have to buy the letters. And every time you buy the letters, you put money in a pot. And when you make good words, you take money from that pot. So now suddenly small brain game is trying to run the biggest Scrabble game in the world and make it as competitive as possible. And the thing that is interesting, so that game is called words three. Small brain has run a couple rounds before, the first one was on base. Now they're going to run a very big round of words three on Redstone. The layer two we shipped actually yesterday. And the thing that's interesting with small brain is smallgrain is a micro, micro, micro team. And they're able to build this, which is the same kind of complexity as us trying to build this dungeon keeper game two years ago, but it can build it alone. So that's one thing that is really interesting, is like, okay, there are ideas that we could see emerging from anyone in the crypto space. But now because of these layers of abstraction, kind of like the riverside people being able to ship us their software, you know, on our browser. Now, small brain game can kind of get that stuff off the ground running very, very quickly. And on the other extreme, there's a studio called CCP games from Iceland. They build Eve online. Eve Online is this like legendary, kind of like space MMO. And they're building a new game in the Eve universe that is on chain using mud, which is the framework built by lattice. And that's like a crazy, crazy scope. You know, it's. I mean, it's still kind of under wrap. But the thing that is interesting is we're seeing both the idea and the tooling be extremely useful for one person all the way to a lot like a huge team of like 100 folks. There's a bunch of other games today that you can already play. So listeners might know about Primordium and Skystripe, I would say. These are like the two big mud games. Primodium is made by our dear friends. Primordium is essentially kind of like a mix between a base building game of resource accumulation and also a space conquest game. It's like what if Dark Forest had a baby with Factorio? And I think that's interesting. With primordium is same thing. It's built by a super small team. It has the amount of state and the amount of code of primordium is massive. It's probably one of the biggest solidity code base in the world, but it works. If you think about Makerdao. Makerdao had spent three years getting maker to work. It's a different thing. It's a bank. They would never change it. It has to be right the first time. We're talking about very different kind of guarantee of security and all that. But still, the fact that a three people dev team could build this is pretty insane. Another game is I'll get back to what the games actually do, so people can have a better picture of what they are. Another game we're building at lattice is Skystrife. And that's kind of like a turn by turn strategy game, advanced war on Game Boy advance. If people remember that game, force turn chess, essentially you have to play all your units every 15 seconds or so. And the way most of these games look like when people get into them is they're like, you remember the PHP games from ten years ago, like Game of war and that kind of stuff. You had your base, you had to build little houses, it would take 10 hours, and you could invade your friends. Tribal war. I don't know if you've played tribal war."
    },
    {
        "speaker": "B",
        "text": "I haven't played these now, all of."
    },
    {
        "speaker": "A",
        "text": "These were games that were running in the browser, and they were essentially built around the limitations of browser games at the time and browser technology technologies. So what we're seeing today is a similar trend. Games are being built around the limitations still of small teams, plus blockchains today, which are, they can't be real time. Like, you don't, you're not, we're not going to contest track on ethereum anytime soon. That's not going to happen anytime soon. So they're mostly turn by turn games or like strategy games or resource management games. Most of them run in the browser. So that means that from a graphics perspective, even if people can do 3d stuff in the browser, it's pretty hard. The reason they run in the browser is because every single Ethereum user today interface with Ethereum from their browser wallets work in the browser. They're used to being in the browser because they're on Twitter and they're on etherscan. So there's also this one thing I found really interesting with the onchain gaming ecosystem is they embrace the fact that Ethereum is on the browser as opposed to trying to do this thing which is like, well, come play or crypto game on PS five. And that just literally makes zero sense because people are not used to interact with the word computer on that device. Maybe they will be at some point, but today Ethereum is mostly the browser, right? So if you want a picture in your head, you close your eyes, you're like, okay, it's a bunch of Pixar art games. Sometimes not, but most often they are, they are turn by turn. You know, like people play them over a couple hours. There's a lot of developer activity because you can hack on top of them. Most of them are open source, and people love to trade resources in them because there's the old kind of like desire of crypto, which is like, let me accumulate some stuff and give it to my friends. The thing that is interesting this time is people can steal it from you and it's part of the rules. So that's what I find also quite interesting is you can take all of the ecosystem that has been built, you know, the swaps, the staking protocols and all of that. But now they live in a universe. It's, you can go and raid the pool if you want. It's not just the north korean hackers that can take the pool, you can go take the pool. And so that's the thing that is pretty interesting here is like, there's the rules of physics that dictate how these things behave. Yeah."
    },
    {
        "speaker": "B",
        "text": "So I think the vibe here is that there's just a bunch of teams who are kind of, like, assessing out the boundaries of what is really able."
    },
    {
        "speaker": "A",
        "text": "To build right now knows what needs to be built. It's not like there's something out there we can copy. Because the thing with the games we were talking about, which are like AAA games with assets on chain, is that they know what is going to be successful. They don't know if they will be successful. They're like, okay, these games are successful. And our monetization strategy is to let players own their assets and take a fee on the GMV of that economy. If the economy is flourishing, we'll take a percentage from that. So the thing with on chain games is nobody has any idea what is going to be most interesting about that. So everybody's kind of, like, trying stuff. I would say that we are in a good place, which is that people in the on chain gaming ecosystem are very kind of like, they're thinking long term. They're trying to be like, okay, this will be interesting. This will be interesting. But they're not stuck in idealism like most teams today are. Like, let's find something that is fun. Let's get players to come back, you know, and then we'll see some of the most interesting stuff emerge. And it always does. There's always something that comes up when there's sufficient amount of people that like the game and comes back, which is the really interesting thing. Right."
    },
    {
        "speaker": "B",
        "text": "And I also want to just bring back something that you said about Dark Forest. Is that the original dark forest? And I think there's actually been some iterations as well, some, like, further versions, but it's still running. It's running right now. I played Dark Forest, like, three years ago or something, back when I lived in Seattle, and that same universe as, just, like, ours is still there. And I don't know how big that scrabble game is, but, like, in theory, if it literally doesn't have a boundary and there's infinite letters, that game could literally go forever. You could build, like, the largest scrabble universe of all time. And, like, it's really how far? It's, like, 42 minutes into this episode, and we haven't said the word metaverse, but I'm sure that people talk to you and say, this is a metaverse. Right? How do you feel about the word metaverse?"
    },
    {
        "speaker": "A",
        "text": "Yeah, I think the word. I mean, what do you think about the word metaverse. I kind of erased it from my brain, to be fair, because of, like, how overloaded it come."
    },
    {
        "speaker": "B",
        "text": "But to be really overloaded in, it got really overloaded."
    },
    {
        "speaker": "A",
        "text": "But to be fair, like, I remember when, when I was working with the dark fresh folks, we were like, holy fucking shit. This is the metaverse. This is the real metaverse. The metaverse. This is not about how you perceive it with your eyes and your body. It's about the universe is real."
    },
    {
        "speaker": "B",
        "text": "It's real."
    },
    {
        "speaker": "A",
        "text": "It exists. It doesn't care about you. It has its rules. Machines will be able to interface in the universe the same way you do. You know? Like, you might need things in this universe that are kind of like aliens, you know? Like, what does it look like to have dark forest native like, things living there? That's very strange. That's a very strange thing, right? It's like, oh, okay. Because today, today's video games, they're very much made for humans. I mean, it's kind of like a weird thing to say, but they're very much made for humans. But the thing is, as we put more stuff in the digital world, whereas it's money, you know, it's like a very important thing from the crypto folks, which starts all the way from, like, libertarian ideas. But, you know, with AI today, we're creating digital beings, and digital beings probably want a fair playing game. They want, like, they want the rules of the universe to be there and not change. And they don't want to be like, man, if I don't have my human with me to, like, unlock these things, I can't do anything. Like, sometimes when it's really late at the office, there's. There are discussions. They're like, wait. I mean. And I think the true PMF here is if the AGIs want to be in these worlds, because they're much better than the ones we have here today."
    },
    {
        "speaker": "B",
        "text": "Right? So, like, chat GBT LLMs, like, the reason why, like, stable diffusion or chat GBT, there's always just errors in all of them, like, all the time. Because they have to be trained to ingest our human universe, our human Internet. Yeah. You have to go through a very intense training process for them to be, like, remotely effective at, like, some high school level. But on Ethereum, every. All of the state is perfectly objective and verifiable and accessible to all of the robots."
    },
    {
        "speaker": "A",
        "text": "And you can simulate it. You can just be like, what would happen if I did that? And they can. They can know. They don't have to ask someone to tell them what would happen. They could just simulate it."
    },
    {
        "speaker": "B",
        "text": "Right. And so the learning process and the execution process for like, on chain agents is going to be vastly just more simple than the world of AI that we know as chastity."
    },
    {
        "speaker": "A",
        "text": "Totally, totally, totally."
    },
    {
        "speaker": "B",
        "text": "And then also at the same time, you have inside of these games that are being birthed, the assets inside of them are completely interoperable with the rest of Ethereum. Right? Totally. Is that true?"
    },
    {
        "speaker": "A",
        "text": "They are, they are. I mean, they are up to the universe at the end of the day, these kind of like autonomous worlds. The world decides to what extent. So as an example, the world can decide, hey, it's interoperable, but I might take it away from you if someone in the game actually takes it away from you by violence. That's the only interesting thing, is the world is so brave. Exactly. The world, yeah. In game violence, I mean, real violence works as well. But that's a different thing."
    },
    {
        "speaker": "B",
        "text": "Different rules of that universe."
    },
    {
        "speaker": "A",
        "text": "There's different rules, yeah. You can accept that universe and reach the other one, which is ours, but yes. So that's the thing that's interesting, is the assets are not sovereign. The world is sovereign. At the end of the day, you're an inhabitant of that world because these web 2.5 games, at the end of the day, the point of them is like, oh, I own my things, but not even the world can take it away from me. So it's this weird, like hybrid model, but here it's like, no, the world is the top level entity. It's the sovereign thing. I can enjoy the possession of these assets as long as the world allows me to do. But it's not the evil developers that take away from you. It's not like the company that wants to make a profit that steal the assets. It's literally the world decides. And as you think that is really interesting is the world is kind of an economic agent, but at the same time it's not there for profit, it's there to survive. Like, the point of the world is to keep running. It's to keep the game running and the universe running, which I find also kind of like an interesting side effect, because the way we're going to monetize these world is going to be very different today. The way you monetize a world is you're essentially the God of the world and you tax everybody. It's more like a theme park. It's not a world, it's a theme park. You can come in the theme park and you're the only we're the only one saying popcorn, you have to buy it from us. But in these worlds, the world is sovereign, and the group of people that help birth the world has to find a way to monetize that is not being the God. Like, it's probably. It's either. While we'll be first, that's one thing I've always wanted to do with lattice. It's like the way we'll monetize is we'll just be first. We'll just be first in the world and you can come. But we're going to immediately start building an army. We're going to. We're going to recruit. I mean, if it's a violent world, maybe it's a cooperative, or let's go with the violent one, we'll probably recruit a general. We'll start accumulating and you can come. But, like, our advantage is we build them physics. We know how it works. Another way to monetize is the game studio can decide to be the world for some amount of time. Kind of like the house in a casino. So you could imagine, let's say it's like a fantasy, kind of like universe. You could imagine like dragons and goblins living in the forest, and they constantly raid villages and pillage and all of that. The players can unite against them. And what these dragons and goblins are is there is just the game studio that created the world. And at the end of, if the players get truly good, then the company goes bankrupt, and that's it. But they had a good time and they probably hopefully returned the development costs. So it's really because it switches the monetization so much. It also means that studios today don't know what their metrics are for being successful. Right? Because there's maybe a short term way to monetize these worlds right now that doesn't lead to a world becoming truly autonomous and interesting, which is the bull case. You would rather be the creator of a world that goes to 1 billion gmv. And being like today, it's not that hard to have a bigger economy than the moon or Mars, which is kind of nuts, right? Like, we could build a game that has a bigger economy than the moon or Mars and that is as real as the moon or Mars. If something runs on ethereum, it's arguably, I mean, it's arguably almost as real as the moon or Mars, but now we created a thing of that. As for now, a bigger economy than these celestial bodies. And I would rather have 1% of this that be like the God of like a small theme park, a small neighborhood theme park, you know? So that's another thing I find interesting, is we also don't know how to monetize. People don't know what to build because they don't know what's going to be successful. And they also don't know what's a financially, like, healthy way of building these things. But that's why it's exciting, because we kind of have to figure that one out."
    },
    {
        "speaker": "B",
        "text": "Yeah. The specific monetization model, I think, kind of will just come. I think the first order of business is just like, just grow the gdp of all of these. Exactly. Once there's a high amount of GDP, you'll figure out how to monetize. And the cool thing is, just growing in GDP is a monetization route for anyone who makes a brand new universe. It's actually a pretty democratized way of growing GDP. And we've never really had this Internet native GDP measure, but with actual on chain universes, that is straight Internet GDP. That's not GDP. That's 1ft in, 1ft out. I did this episode with Andrew from Conduit in Georgios not terribly long ago, and he left something in my brain that I think is actually kind of relevant here. Andrew, he's a roll up as a service provider out of conduit. And so they help spin up roll ups. Maybe they did. Your guys did lattice, maybe not."
    },
    {
        "speaker": "A",
        "text": "No, it's in house for us."
    },
    {
        "speaker": "B",
        "text": "Okay. So, yeah, so he just. It's a one click deployment for rollups. And he said something where, like, the total number of supply of rollups will be a function of how much demand for compute that there is. And then he also said, like, well, there might be, like, times where you just spin up a roll up, but its state growth is just way too sustainable to be a long term blockchain. But it's only meant to be a blockchain for two weeks, and then it collapses, and then it's gone. And I think there's something related here where a game can spin up for two weeks, but it's a very short term game. People play the game, and then the game's over, and then the roll up just dies. By design. Have you thought about this kind of design space?"
    },
    {
        "speaker": "A",
        "text": "Yeah, totally. I mean, one thing we're thinking a lot about with lattice and kind of, like, we started with Redstone, which is one chain already, like, much bigger blocks than the blockchain, is really optimized for mud. But the idea the long term is like, what does fractal scaling looks like, what does it look like to have different pieces? Because the thing with one chain is that the guarantee you get is that everything can interface with everything immediately. But that's not needed in this universe, because here in this universe, whoever simulates this universe made this convenient rule for themselves, which is the speed of light, which means if something happened here and on the other side of the universe, the other side of the universe doesn't have to know immediately. It travels at the speed of light. Information and causality travels at the speed of light. And I suspect that if this universe is a simulation, the reason they did that is because it means you can simulate it fast on parallel computers, because now you don't need to put everything in the same cpu core. You can kind of like simulate it in parallel. Because what I do here doesn't impact the rest of the universe sometime. So if you think about the conspiracy take, yeah, it's Nvidia. It's just like we had to make it work on GPU, so we added the speed of light. In a blockchain. There is no speed of light. Anytime you do something, it can impact the rest of the blockchain immediately when you start having multiple roll ups and all that. The reason why we can scale is also because there is a speed of light. What I do on one chain cannot impact the other chain immediately. There is a process of message passing or whatever."
    },
    {
        "speaker": "B",
        "text": "So the thing is interesting with git."
    },
    {
        "speaker": "A",
        "text": "Exactly. And so I think it's interesting with worlds and with physics and all of that, and very viscerally for people playing video games, they know that when they do something in one part of the world, it doesn't have to be able to access and write to the state on the other side of the world. Right? Like, it takes time for things to propagate. I have to work around in World of Warcraft. I cannot buy from like, the global marketplace if I'm not in the right server. There's already this charting native view when people think about virtual worlds. So I think ancient games led themselves super well to this idea of, like, we're going to have to scale fractally. And I think this is where it has to go over time. So, yeah, one idea we had a long time ago is like, what does it look like to take something like dark forest and split the universe into chains? So each part of the universe, and there's infinite, because there's an infinite amount of chain id. There's an infinite amount of patches in dark forest. And if you control the central planet of that sector, you're the one that sequences the chain and takes the fee. So now you have this thing where like, I can go around and if I take over someone else's planet, I become the operator of that chain."
    },
    {
        "speaker": "B",
        "text": "You become the God."
    },
    {
        "speaker": "A",
        "text": "Yeah, exactly. And then, and the thing is interesting is because roll ups, if these things that allow anyone to force include a transaction, you know, even if the sequencer doesn't like you, if I lend into the part of the universe that is run by an enemy guild, they can slow me down, but it can't slow me down infinitely. So now I have my troops slowly creeping around because they have to force include transactions. Anyway, that was a wild idea, but it would be kind of fun. Which is, what does it look like to have an app where part of the app is run by the users, and some of the users might be adversarial with each other because they're like, hey, that part of the world is run by the bankless Dao, and they really don't like you. And you can still try to go, but they really don't like you and you can take it over from them."
    },
    {
        "speaker": "B",
        "text": "So you're starting to actually leverage what was previously external properties of these systems, and you're actually invoking them as actually part of the system itself, part of the universe itself."
    },
    {
        "speaker": "A",
        "text": "Yeah."
    },
    {
        "speaker": "B",
        "text": "Really interesting relationship between just like the hardware, software and actual, actual users. Okay, so you guys just deployed your layer two. What is that layer two going to do? What is that going to unlock for you guys?"
    },
    {
        "speaker": "A",
        "text": "Yeah, so when we started, so we first, we built games, right? And we're like, okay, we have to build this operating system for Ethereum, right? Like, it's just, it's untenable right now to build games or any form of complex apps. So we built mod and we made a lot of nice thing with it. We're like, okay, you don't, you don't need all of this indexing thing that people spend so much time on. All of this is made so much easier for you. But then we reached the limit of like, okay, turns out all the layer two kind of groups today, they're making stuff for Defi, and it makes sense, right? This is the stuff that's out there. So what do we do? We scale defi. And it's not like they made their network not usable for non defi. They just didn't focus on the kind of like, engineering metrics that are important for worlds that go beyond owning stuff. And so that's why we forked bedrock when we were doing opicraft, it wasn't called opicraft at the time. It was called Mudcraft. We're like, we need our own chain and we need to make the blocks much bigger. Because the reason why people didn't make the block bigger is because, well, we want to run this blockchain forever. And for us, we didn't care. It's like what you said, we want to run open for two weeks, we can make the blocks as big as we want, right? So that was like our first foray into this. And we kept doing it. After that, the op stack kind of grew, kind of got big, and then people started putting roll ups left and right. But still today, all the tooling all the way, people do rpcs, everything, it's very much optimized for like turnkey deployment of DeFi or like whatever app exists today. So Redstone for us is a way to essentially be able to say, hey, whoever uses lattices technology, we can optimize the whole stack. Hardware and software, where the chain is the hardware and mud is the software for virtual worlds, for these inter objective realities. So we can focus on things. We're going to focus on latency. We're going to focus on the ability to be able to synchronize the state between your client of your game and the blockchain really quickly. It also enables us to essentially create automatically a community of people that cares about this. Because the thing that is interesting is these games. I mean, we never were big on the idea of like cross game relationship because it never really made that much sense to me. It's like, what does it mean to move things? It's like, oh, yeah, I can take my tennis ball to the golf court and it's like, cool. It just doesn't make sense. It's just like fundamentally different universes. But it still remains the case that one thing that is interesting is modders. Like one realized with Mod is that all the games have the same API to build things on top. And so if all the games are on the same chain now, all of these like modding guilds and the hackers and all of that, they're like, oh, you know, like, it's so convenient because all of this state is interoperable, right? Like, I can like build this tooling there and it exists there as well. It works for primordium, it works for Skystripe, it works for all, like the infinite Scrabble game. So it was really like a combination of factors. It's like a, we really want to be able to optimize the whole stack. And right now we keep kind of like banging our head on the fact that chains are optimizing for Defi and we couldn't get a good experience, essentially. We couldn't get the latency we wanted on existing systems. So we were like, let's just, let's just do it. The second thing is it would automatically create a community because now we have this chain and it's, I mean, we love nfts, we love Defi, we love all that stuff, but it's not for that. You can come do it if you want, but really like the kind of people we're going to onboard, the partners, we're going to work with, the users we're going to drive there. They're interested in virtual worlds that work on chain. That's really what we optimize for. And third, there's this, like we kind of want to see like, okay, so if we start adding more redstones, can we just make it like nobody would ever notice? Like, you know, on aws, you don't know when they add more servers. Like, nobody cares. There's just like, there are more servers that are being rocked maybe by robots. Who knows? I've, I've never been in us east one, nobody comes out alive from these data centers. If they force their way. It might just be robots today, right, but we don't have to know. So similarly today, if you add a new chain, it's a whole thing. Oh, there's a new chain. We have to migrate. I have to add it to my wallets. So really what we want to get to is because people build apps using mud, and mud is between the developer and the chain. We want to get to a world where at some point the people that build skyscrive, they wake up one morning and we tell them, oh, actually no, skyscrive runs on two different chain and the state has been sharded and they wouldn't even notice. And the users as well. We want the users and the developers to be like, wow, now I just have more gas. Isn't that neat? And we can't do this if we, now we have to. It's just the optimization of the full stack is something we really wanted to get to because we've kind of been munching on this since the beginning. We started with mud and then we're like, ah, awkward. We have to keep going. So it's big for us because now it enables us to essentially go faster on our agenda."
    },
    {
        "speaker": "B",
        "text": "Okay, so there are some of these call demo games, like I said, sussing out the boundaries of what you can really do here. But let's zoom forward to just really use your imagination. Where do you think these types of games could look like in like ten years, 20 years? What's the final form of these games?"
    },
    {
        "speaker": "A",
        "text": "Yeah, I think it would really depend how serious people are about them. You know, how early bitcoin it was like, oh, I have all of these bitcoins. I don't know what to do with them. Like I'll buy a pizza for like, I don't know how many bitcoins. And it was just like this thing that you just play around with it, but now it's very serious. Very, very serious. And so I think that the thing will change depending on how serious people take them. But one thing I'm not convinced of is people tend to think that seriousness is incompatible with playfulness. And I don't think that's true, basically. And so I think it is possible to have something that is, that has consequences, that is serious for some people, but it is playful as well. And I think that the problem with over financialization is that it rubs you away from playfulness because you're just in this. I have this talk I gave of comparing homo economicus and homo ludens. Like homo economicus is the perfectly rational man. And the problem with the perfect genderless men, the problem with the perfectly rational human, is that everything is just about maximizing your capital, and you're going to."
    },
    {
        "speaker": "B",
        "text": "Make a perfectly rational decision."
    },
    {
        "speaker": "A",
        "text": "Everything is a calculation, right? And the thing with over financialization is that it basically gets all of us to slowly become homo economicus. In many ways, it's really hard to resist the homo economicus. So I think that I just want to see where, I don't know in which direction is going to go, but it will heavily depend on how serious these things are. Second, I think it will heavily depend on AI, because I think that if AI agents become pretty good, if AI agents at some point are like, huh, I kind of want to own stuff for real, or I kind of want to be useful outside of the little b two b SaaS I'm in. I think these environments, I mean, we're in true speculation mode now, but I think these environments are basically going to be really great, like equivalent of Mars or the moon, like digital equivalent of that for AI agents to go and do stuff. And I think that the way the thing we'll do as humans is going to be very different, because now there's this world where the rules are fair and there's all of these AI agents. And I'm kind of like an engineer, a diplomat, a physicist. I collaborate with people on some stuff there I don't really know. Today's video games are much more like theme park than their world. They look like words, but at the end of the day, everything is carefully engineered for you to have a good time and guide you around to the next ride. I think these will look quite different. One glimpse you have in this is Minecraft servers. There are these Minecraft servers called anarchy Minecraft servers. And what anarchy Minecraft servers are, are Minecraft servers without any rules. So you can't be banned. There's no rules of property. You can kill anyone. You can see whatever you want. There's no organization. And there's this one famous anarchy server called two b, two t digit, and be like the letter two t. It's been running for 15 years, never had a reset. And the amount of emergent property in two b, two t is totally insane. And when you start in two b, two t, it is a wasteland because the spawn has never been made pretty because it's just a harsh world. It's a wasteland. But as you start venturing around, you find all of these different communities that have survived the initial contact with the harsh reality, and there's this whole world that kind of like, emerged from that. And so I think that, that it will look way more like this than."
    },
    {
        "speaker": "B",
        "text": "It is Minecraft burning man."
    },
    {
        "speaker": "A",
        "text": "It's Minecraft burning man. Exactly. And I think it will look way more like that than a super polished, like, oh, I'm playing my first day of this triple a game, and I'm being like, kind of like following the tutorial. I mean, the great thing is companies can go do that. You know, if you have one of these worlds, if I'm like, hey, I onboard users, and I make money from that, you can go make the theme park that onboard users, that's also another very interesting thing. Like today, the rules of the world, the commercial kind of like model, the onboarding, the social system, all of that is bundled. It's done by one company, one director, one mastermind. But when you have these open worlds, you can unbundle this thing. You have like the digital physicists that decided on the physics of the world, and then they can go peace out and disappear forever. And then you have the people that do the onboarding, and then you have the people that, like, you can kind of like have this breakdown of roles the same way we have it in ethereum. Like, today, the validators, validates, the builders build, the math exploit, the developers build. You know, like, there's this unbundling of roles. And I think the same thing would probably happen in these worlds as well."
    },
    {
        "speaker": "B",
        "text": "I think that there's, it feels like this is such a strong conclusion of, like, where all of this blockchain stuff goes. Because, like, if you believe that we're going on chain, like, this is where, this is what that means, right? And this is, you're putting more stuff on chain and not, we're not just like, putting stuff on chain. We're actually birthing a universe on chain natively. Like, it's an on native, native world. And, like, people are always wondering, like, yo, like, it's 2024 in crypto land. Like, where are all the users? Like, where are all the assets? We are just now getting some, like, real adoption and some marginal use cases. But you could see, like, when somebody can build a universe with quite literally limitless potential, the total number of transactions just absolutely explodes. The total number of users just absolutely explodes. And with the sufficient level of abstraction that you've kind of laid out in order to make that happen, like, as when we can get some, like, on chain native GDP, then that's going to be the magnet that just, like, sucks people into. Into this universe totally. Versus."
    },
    {
        "speaker": "A",
        "text": "And that GDP currently, the way people try to create that GDP is very reflexive, because if you have a world that has no rules but money, it's like, well, you bring money to make more money, and then you swap that money for another money, and then you speculate on that money, and then you can take it out. The thing is, when you have actual rules, it's not reflexive anymore. Right? Like, if I accumulate rocks on Mars, it's real. You have the right to not believe in rocks on Mars. But no, I could build a castle. And you have this whole thing, which, like, the more like, people still need to care about the world for the world to be useful and valuable, because otherwise I can instantiate a world and nobody gives a shit about. And it doesn't matter if it lasts forever or if it keeps existing, right? In many ways, yes, it's true that the dark forest universe still exists. But if nobody cares about it, it's like, you know, it's like the forest and the tree. Sorry, the tree in the forest. Like, if the tree falls in the forest, nobody hears it. Did it? Did it fall? We don't know. It's not important. But that's why I think that also, increasing the amount of things that can care is really important, too. That's why this whole, like, AI agent, and it doesn't even have to be AI. Like, this whole agent stuff is really interesting because now there are more things than just humans that care about these rules being respected and things progressing there. So, I mean, if you want to go truly wild, like, if I die, I would rather upload my consciousness in an autonomous world than in anything else, because I want to keep existing. I don't want to be some stuff that, like, where the rules, like, imagine being this, like, digital being, and then the rules get rugged."
    },
    {
        "speaker": "B",
        "text": "Like, literally server. Yeah, right?"
    },
    {
        "speaker": "A",
        "text": "Yeah, yeah, literally. I want to be uploaded in an autonomous world. I don't want to be uploaded into something else. Another thing to kind of, like, throw out there as, like, truly speculative stuff is that what's the final stage of any civilization, right? It's probably to create a universe. It's like the final thing you do. You're like, okay, we've explored the universe. We've conquered the stars. We can use all the energy. So now the final thing we'll do is we'll create a universe and we'll let that universe do whatever it wants. And I think the thing that's interesting with all of this cryptography stuff, distributed system and all of that, is we're going towards this idea of, like, hey, we're going to be able to create a universe that is real. It's truly objective. So that's not crypto 2040. I don't know when we have to get there, but it's interesting because it goes toward that agenda of the final stage of civilization, which is, let's create a universe that goes beyond us."
    },
    {
        "speaker": "B",
        "text": "Beautiful. Well, Justin, this is exactly. It's cosmic, because I was hoping this conversation would be if people are peaked and they want to learn more about what you guys are doing at lattice, where should they go?"
    },
    {
        "speaker": "A",
        "text": "You guys can follow us on Twitter. Lattice XYz. We have a bunch of blog posts on lattice XYz as well. You should check out Xerox PaRC as well. Xerox Parc is the founder of Lattice. It all comes from Xerox Parc. Dark Frost, the blog post and everything. I'd say the more cosmic vision of all of this is usually, usually starts on the Xerox PARC blog post, not on the lattice blog post. Yeah, that's where you should. But I would say, if you're interested, come to autonomous world conferences. Come talk to the people. Defcon is on the corner in November in Southeast Asia. We'll probably have a conference there, an autonomous world assembly. Come check it out, and you'll hear more cosmic visions of ethereum late at night on the beach, hopefully."
    },
    {
        "speaker": "B",
        "text": "Well, I will certainly be at the autonomous world assembly at Defcon. I've had autonomous worlds in the back of my mind ever since playing dark forest, and so it's been something that I know is out there. I just know it takes a lot of development. Like you said, there's a bunch of abstraction layers that still need to be built. But I think this is perhaps the coolest frontier that I think exists in the ethereum ecosystem. Justin, thank you for pioneering out that frontier and telling us a little bit about it today."
    },
    {
        "speaker": "A",
        "text": "Thank you so much."
    },
    {
        "speaker": "B",
        "text": "David Bankless nation. You guys know the deal. Crypto is risky, and in autonomous worlds there are actual real consequences in them, which is kind of the cool part, but nonetheless, you can put what you put in. We are headed west. This is the frontier, and it's not for everyone. But we are glad you are with us on the bankless journey. Thanks a lot."
    }
]