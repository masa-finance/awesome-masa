[
    {
        "speaker": "A",
        "text": "I mean, what we ultimately need for bitcoin is we don't actually, I'm not that convinced that we need to take everything that Ethereum has done and put it onto bitcoin. We don't need all of the Ethereum stuff to exist on bitcoin. I don't think so. But what I do know that we do need, we just need a way for me to be able to send bitcoin to you in a scalable and private fashion just so that bitcoin as a currency works."
    },
    {
        "speaker": "B",
        "text": "Welcome to Bankless, where today we explore the frontier of bitcoin layer twos. This is Ryan. Sean Adams. I'm here with David Hoffman and we're here to help you become more bankless. The big question, can bitcoin scale through layer twos the way Ethereum has? I think that's the most important question that bitcoin builders are facing today. And it's hard. There's a lot of noise out there. We got to find out what's real, what's narrative, what's a scam, what the future actually looks like for bitcoin. That's why we're having this episode today with Eric Wall. He's on today and he's got the most thorough take that David and I have heard on this subject. He's the perfect guest for this because not only does Eric tell it like it is, he also understands both Ethereum and bitcoin. So a few topics we get into in the episode. Number one, the ordinals and runes awakening, why that is upon us and what effect it's had. Number two, why lightning failed. Number three, the state of bitcoin. Layer twos, where are they today? Number four, we talk about BitVM and the fatal flaw it might have. Number five, we talk about the answer, the solution, the cat op code. You have to hear Eric talk about that and evangelize for it. Number six, Eric's message to us, be extremely cautious when you hear the words bitcoin, layer two and why he says that. And number seven, why Eric is optimistic about bitcoin's future and the building that is going on today, the progress of."
    },
    {
        "speaker": "C",
        "text": "What you can do on bitcoin, the evolution of bitcoin. I think it actually runs in parallel to the story of Eric Wall himself, early bitcoiner, who like self described as becoming an outcast out of bitcoin because the laser eyed monetary maximalists decided that don't put any sort of zk magic on bitcoin. That's not what it's for, and then entered the bitcoin dark ages, where Eric Wall was forced to look elsewhere for scaling solutions. And that's where he found the layer two space outside of bitcoin, but still had his first love. These are all his words that I think he used to describe his own arc when we did our first episode with him. Eric Wall comes back and kind of gives us an arc of the bitcoin renaissance, how it started, where it's gone, and what the current frontier is, the current limitations, too, of the bitcoin layer two space, and what might be next steps for the actual technical evolution of the bitcoin protocol. So just really a masterclass in bitcoin, I would say, along with just like the current issues, current events of the time. So let's go ahead and get right into that conversation with Eric Wall. But first, a moment to talk about some of these fantastic sponsors. Bankless nation. Eric Wall is a crypto OG first enamored by bitcoin and the many irreplaceable properties that bitcoin has. And then later also by many of the technical research breakthroughs in the ethereum ecosystem. Eric now finds himself straddling many different universes, but all with strong cryptography and trust assurances underpinning what Eric finds interesting and pays attention to. Eric also recently shaved his head because the ETH BTC ratio broke below a certain level that he said that it wouldn't, even though no one really asked him to do that. Eric, welcome back to bankruptcy."
    },
    {
        "speaker": "B",
        "text": "We're happy he did, though."
    },
    {
        "speaker": "A",
        "text": "Well, there are some people that insist that Eric doesn't just lose a bet like that, so they think that the reason that I shaved my head was because I was camouflaging a hair transplant so that I lost a bet in order to get a hair transplant without anyone noticing. And I'm fine with either of those theories. I'm happy either way."
    },
    {
        "speaker": "C",
        "text": "Wait, but either or maybe both."
    },
    {
        "speaker": "B",
        "text": "What was the real reason? So, wait, did you shave it in solidarity with ethereum or in solidarity with bitcoin? Or, like, what was the. I'm not familiar with the whole story. Just David showed up one week to me and he was like, yo, Eric shaved his head."
    },
    {
        "speaker": "A",
        "text": "There's multiple reasons. You could say I shaved it in solidarity with the fragmentation issues of Ethereum."
    },
    {
        "speaker": "B",
        "text": "Thank you."
    },
    {
        "speaker": "A",
        "text": "Or you could say that there was this guy who kept haggling me over a prediction that I made that we had already reached the low for the year for the ethnic BTC ratio. And so I kind of bundled all those together and just shaved my head. And I think. I think I was kind of done with the man bun anyway. I think the man bun had lived its life, so I think this is for the better."
    },
    {
        "speaker": "B",
        "text": "Are you ready to make another prediction on the show today about the ETH bitcoin ratio? Now, can you call a low and what will you do publicly? I want you to. What will you do if you're wrong about that?"
    },
    {
        "speaker": "A",
        "text": "Yeah, I think we've reached low for the year. I don't know which parts of my body I'm left to shave."
    },
    {
        "speaker": "B",
        "text": "It doesn't have to be a shave. It could be like, tattoo."
    },
    {
        "speaker": "C",
        "text": "Yeah, we can do a tattoo."
    },
    {
        "speaker": "B",
        "text": "You could fight David. People are doing that."
    },
    {
        "speaker": "C",
        "text": "One at a time. One at a time. Everyone get in line."
    },
    {
        "speaker": "A",
        "text": "I'm happy fighting David. If I get to join the ring with Nick, I think me and Nick together stands a chance against."
    },
    {
        "speaker": "B",
        "text": "Oh, my God."
    },
    {
        "speaker": "C",
        "text": "Actually, the first time I ever met Eric wall in real life, I think I was immediately put into a pretty aggressive headlock."
    },
    {
        "speaker": "A",
        "text": "That's true. That's one of the reasons that I fear for Nick, because you were kind of like, I don't know how if I could have gotten like, you're kind of resistant."
    },
    {
        "speaker": "C",
        "text": "Since we're going into the story, this was at EthCC right after Covid. So this was the first time I was meeting basically everyone I had been talking to online for the last three years. And I'm in line at some party for, I think, like the bar or something, and I get put in a headlock and I'm like, oh, okay. Somebody who I know is putting me in a headlock, in a friendly headlock, and they're going to let go, and I'm going to turn around and realize who this is. Except then, like, the being let go never really happened. The headlock just got more and more intense over time."
    },
    {
        "speaker": "A",
        "text": "Time."
    },
    {
        "speaker": "B",
        "text": "Dude, it's a bitcoiner headlock. We're not dabbling with an Ethereum headlock here."
    },
    {
        "speaker": "A",
        "text": "I think my main gripe was that you guys in the Ethereum world have started to call Ethereum clients that just sync the Ethereum state rather than executing every single transaction. You call those full nodes, whereas in."
    },
    {
        "speaker": "B",
        "text": "Bitcoin, that's what they are."
    },
    {
        "speaker": "A",
        "text": "We have to validate every single transaction. So I was like, there's David. I'm going to punish him for this. Diluting the term what a full node actually means. Coming up with new terminology. And I guess that's what we're going to talk about a little bit today. What's the definition of an l? Two. And there's also been like a degradation of that term, which you guys have also played a little smart. I have too. Like, we're all guilty of degradating whatever. Yeah."
    },
    {
        "speaker": "B",
        "text": "I love when Eric Wall comes on an episode because I know we're going to bring back the purity of decentralization."
    },
    {
        "speaker": "C",
        "text": "And why we're here and trust this."
    },
    {
        "speaker": "B",
        "text": "We should get into it."
    },
    {
        "speaker": "C",
        "text": "Then let's set the landscape a little bit. Eric, almost two years ago, November of 2022, you and I did an episode discussing the technical potential of ZK layer twos on bitcoin. This was like it was only 18 ish months ago, but still super early. Like, ordinals weren't a thing, runes weren't a thing. Everything was completely theoretical. And now not only do we have both tokens and NFts on bitcoin, but now there's this emerging class of layer twos on bitcoin. How would you like, explain or characterize the arc of what bitcoin was back then? I'll call that like 2022 2021 bitcoin dark ages. Maybe you agree or don't agree, but like characterize the arc of bitcoin technological progress since then. Like, what do you think about the current direction of bitcoin?"
    },
    {
        "speaker": "A",
        "text": "If I recall correctly, I think the origin of the episode was that the Human Rights foundation, together with a grant from Starkware and CMS holdings, assigned a research paper to be written about what are the potential scalability benefits of putting a ZK roll up on bitcoin within the block size constraints of bitcoin? Like if you just use the full four megabyte block that bitcoin has, how far can we get with the ZK roll up in ideal circumstances? And John Light was the person that wrote that. I was the person at Human Rights foundation that sort of selected the person to write the paper. And I selected John Light because I think what I liked about him was that he was actually sort of anti ZK rollups before writing the paper. But I know that hes a neutral guy and its going to stick to what the research says and the results that he came to were pretty interesting. We could be looking at a 40 x 50 x scalability improvement on bitcoin if we had a ZK verifier and a covenant opcode on bitcoin. I think back then what we were excited about was that if we actually had ZK rollups on bitcoin, not only would the scalability improve significantly, but we would also be able to tap into the full expressiveness that ZK rollups give. And that could also lead to privacy enhancements, because if you have serial knowledge proof, you can embed any type of virtual machine, private or non private, into that as well. So Ziki Rollup suddenly came back to the scene as this is a real, this has a real potential to improve bitcoin and all the sort of facets that we could think of. So I think we were just trying to bring back ZK rollups back into the discussion of what should the next soft fork in bitcoin be? And there were some people at that time that were thinking that a ZKP verifier opcode is maybe not impossible to get into bitcoin. So maybe we should look more into that. But to sort of describe the overall arc of what has been happening since then is that, I mean, this was still like CKP verifiers in bitcoin where still, you know, there's a lot of people that needs convincing. And it's not only the people that need convincing, it's also which type of ZKp verifier do we put into bitcoin? Because it's not like in Ethereum where like you have a roll up and you can just upgrade the roll up to use. We usually have admin keys that with a delayed function can upgrade. They're all up to you. Some type of new circuit if you find a new one. But in bitcoin we really have one soft fork and then we have one serial knowledge proof system, one proving system. And that now maybe has to be the serial knowledge proof way that we verify things in bitcoin for, I don't know, five years, ten years."
    },
    {
        "speaker": "C",
        "text": "You gotta get it right the first time."
    },
    {
        "speaker": "A",
        "text": "Yeah, we gotta get it right the first time. That led to some discussions of like, let's maybe put something more generalized like a ZK wasm verifier. And then we can put other types of ZK circuits inside that, so that the ZK wasm sort of verifies the starks and the snarks and the graph sixteen s of the world. But what has happened sort of recently, over the last year, as I've, as I've gone around and spoken to different researchers, the most significant one I think, was in Palo Alto last year, where we got together a bunch of CK interested people in bitcoin, which aren't a lot of people, by the way, within the research community of bitcoin, I'd say there's a small fraction of people that are knowledgeable enough to have a real conversation about knowledge proof in bitcoin. But the sort of crew that we could amass, that we could gather, we gathered in Palo Alto and going out of that meeting I actually felt we were further away from getting SEr knowledge proofs into bitcoin than I felt before getting into that meeting. So I'm sort of less optimistic that we're going to get a CKP verifier opcode in bitcoin in the next say two or three years."
    },
    {
        "speaker": "B",
        "text": "I'm not sure that's why pessimistic on that. Is it just so hard to get any kind of opcode into bitcoin, much less a Zkhdem proof like opcode, that you just think that's politically insurmountable or. I don't even know if politically is kind of the right word for that."
    },
    {
        "speaker": "A",
        "text": "Yeah. So choosing the right one and not being able to upgrade that is maybe the hardest challenge to tackle. But there are other. So if you wanted them to do what I described that you wanted to have like a wasm, a ZK wasm that you put other verifiers into, then the problem is that if you want, for example starks, which I think are like the least, they use the least exotic cryptographic primitives, if that's what you want, then you sort of lose those benefits if you verify them in a sort of a wasm environment. Because if you have different layered ZK verifiers on top of each other, you sort of lose the characteristics of one if they sort of all have to go through a funnel of multiple ZK verifiers and the complexity increases too. I think another thing that has shown, that has made me more pessimistic is that we're fighting right now to just get this op cat opcode into bitcoin and we're making very good strides. But op Cat is basically an opcode that the only thing that it does, it concatenates two elements on the stack. Also bitcoin is like a stack based scripting language. So you have a bunch of elements that are on a stack and you can multiply them, you can use addition, you can use subtraction, but you can't really do anything super advanced. For example, you can't even concatenate, which is a pretty regular thing that you do in programming. You concatenate two strings. If I have a b and CD and I concatenate them, I have a B C da. Or if I have a two and a two and I concatenate them, I have 22. So that sounds like some of the most, like if you had a calculator and there was a concatenate button, that's like one of the simplest. Like it's more simple than cosine or sine or something like that. And even that is like a massively technical conversation in bitcoin. Like, and the conversation is really about, does this destroy bitcoin? And in effect the world, like, does this destroy humankind? Is sort of the conversation."
    },
    {
        "speaker": "B",
        "text": "Mistakes are high."
    },
    {
        "speaker": "A",
        "text": "Yeah. Concatenating numbers is like a really dangerous thing."
    },
    {
        "speaker": "C",
        "text": "Make sure you can't divide by zero on that."
    },
    {
        "speaker": "A",
        "text": "Right. However, like, one interesting thing about concatenating number concatenating strings is that Merkle tree. How you get a merkle tree actually just comes from concatenating hashes to have, let's say have 16 hashes at the base layer of a pyramid, and you concatenate those until you have eight, and then you have four, and then you have two, and then you have one. That is actually how a merkle tree is constructed. And if you can then verify the hash of the root node in that merkle tree, now you can verify merkle roots and blockchains in general, like both Ethereum and bitcoin. Merkel verification is like one of the primitives that we use the most. So like optimistic roll ups, Merkel tree verification, syncing the Ethereum state route, merkle tree verification spv proofs in bitcoin, Merkel Tree verification or Merkel root verification. And it turns out that with just that small opcode alone, I think we should, maybe we should get into this a bit later in the episode. But just through concatenation, we can get Merkel verification, but we can also get a form of covenants. I don't know how familiar you guys are with covenants, but that's like, definitely, yeah. Covenants is the ability to create, let's call them finite state machines. Bitcoin is stateless, doesn't have a way to update variables and carry over state from one transaction to the other. Covenants is a way to do that. It's a way to restrict where coins can go in specific paths in sort of like a state machine. You can sort of program that state machine to decide how the different paths in the state machines can look like and what you do in those different paths. So apparently concatenation alone, through some weird cryptography that comes from schnorr signatures, you can actually do this with ECDA signatures too. You can actually get covenants with just this one, with this one. Concatenation opcode alone. And you could even. So there's some people at starkware that think that they can even actually program a stark verifier with just this one simple opcode. That's cat. So you could actually verify starkware starks, and if you have covenants and starks. So what we talked about in that previous episode that you realized you need a ZKP verifier and you need recursive covenants in order to create ZK roll ups on bitcoin. So if the stark verifier works with cat, which we're still unsure about, then we could actually get ZK rollups on bitcoin. At my company, Taproot wizards. Since we don't know for sure yet that we're going to be able to do ZK starks with just cat alone, we have an alternative approach which does optimistic verification of arbitrary computation. It uses something called mat, which again uses Merkel trees to a very large extent, so that you know how in optimistic rollups that you have a state route, and then you update that state route with another one, and then in order to find if there was like fraud between those state routes that didn't follow a specific state transition function, you can do bisection games and identify. Okay, this is the part where you lied about what the computation was. We can do that in bitcoin if we have Merkel verification, if we have Merkel root verification. So that is basically the idea mat. So if you bundle mat with recursive covenants, then you can get a. And actually a real version of optimistic. It actually becomes more like plasma, but some hybrid between plasma and optimistic roll ups with just capital, even if we can't do starks. So that was a mouthful."
    },
    {
        "speaker": "C",
        "text": "And I think that does a really good job kind of illustrating some of the aspirations that technical people have for the future of bitcoin roll ups, and also the technical hurdles that need to be overcome in order to actually make true valid layer twos spawn from bitcoin. But Eric also, at the same time, we're seeing many, many bitcoin layer twos spawning to this day that are skipping over basically everything that you just laid out. Uh, because as maybe listeners kind of got the gist of, it's really hard and complicated and not technically, uh, there."
    },
    {
        "speaker": "B",
        "text": "Yet opcode in specifically."
    },
    {
        "speaker": "C",
        "text": "Right, exactly. But like nonetheless there are. The bitcoin layer twos are like a whole thing. Like VC's are funding them, users are starting to use them. One of them just went main net this week. So how do you like square these two things. How do you feel about that dislocation, that discrepancy between, well, you don't have op cat in yet. Nonetheless, bitcoin layer twos as a narrative is here. How do you feel about this?"
    },
    {
        "speaker": "A",
        "text": "Yes. So this is difficult, but I think what basically happened was that Casey Rodimore invented the ordinals protocol. And I think maybe a bigger invention than the ordinals protocol itself was this thing which are called envelopes, which is how you packet very large blobs of arbitrary data into bitcoin."
    },
    {
        "speaker": "C",
        "text": "Is bitcoin finding data availability?"
    },
    {
        "speaker": "A",
        "text": "Yeah, it's like, oh, apparently we had access to call data in bitcoin, a part of the block space that we don't execute. That's just a dumb data blob. Apparently we had that. And you needed to come up with a small script, which it basically creates an if statement, and then that whole if statement is false. So you never actually check what is underneath that if statement, because you just know that this part of the script is false. And then what you can do with the rest of the script is you can just put arbitrary data in there. So that is what is called an envelope in Casey Rottermore's ordinal theory. And that ability that, I mean, we've actually had the ability to package large amounts of arbitrary data in bitcoin before. It was just way more clunky. Like, you could divide all these data blobs into different transaction outputs. And it was just like you needed to be a somewhat savvy programmer writing a yemenite arbitrary data scheme in bitcoin that looked in different parts of transactions and carved out this part from here, this part from here, this part from here. But basically, with this envelope trick, it became very easy in a block explorer to see, oh, there's all my data. I can see in the block Explorer. There's all that data. I don't have to tie it together with that transaction input and that transaction input. What this meant was that now we can put 400 kilobyte data blobs in single transaction inputs in bitcoin, and they will propagate in the bitcoin network. That's usually one of the issues, like when you create non standard transactions in bitcoin. While they're valid in the blockchain, nodes will not propagate them. And miners running that same software will not actually put them into blocks. But if another miner does, it will still be a valid block and they'll accept it as valid. But what we had since Segwit and Tapgrid was that we had this 400 kilobyte arbitrary data blobs that propagated freely over the network and miners included them into the blockchain. So now all of a sudden we have this huge part of the block, which is a place where it's a free for all. You can do whatever. You can even write an entire EVM inside of that arbitrary. As a sovereign roll up, you could embedded a whole blockchain into the bitcoin blockchain that way. And that was actually what I. So we started using this for jpegs, right? So taproot wizards and. Yeah, that is shameful."
    },
    {
        "speaker": "B",
        "text": "I can't believe you did that, by the way."
    },
    {
        "speaker": "A",
        "text": "Yeah, so the first. I mean, the first oral inscription number one is just dick, but dick butts."
    },
    {
        "speaker": "C",
        "text": "Let's go, let's go."
    },
    {
        "speaker": "A",
        "text": "Yeah, and that's actually, that was actually in. Inspired by our CTO. He joined later as the CTO of Taproot wizards. And he's actually the same guy that has now implemented this way of how you use the cat op code to create like, recursive covenants. He's actually a super smart guy, but the first thing that he did when he sort of discovered the ordinals protocol, inscription number one, just put a dick button there. The thought that I had was that, okay, well, we have this arbitrary data space in bitcoin now. We can build meta protocols inside of bitcoin that are like, we don't have to work with the same confines as previous meta protocols as bitcoin had to confine themselves to. So writing meta protocols inside of bitcoin is actually not something that is super new. You know, that USDT used to exist on bitcoin, and then Ethereum sort of took over all that USDA. All that USDT. That metaprotocol was called the omnilayer. So that was a fungible token standard that lived inside of bitcoin. And there's been other protocols like, counterparty was also a protocol like that. But however, they had to sort of work with restrictions on how much data they could put on there. So you couldn't have like an Ethereum style sequencer that takes all transactional data and Ziki proves and bundles them into each block of bitcoin. That was not really practical before, but since we had ordinals, that now became practical anyway. So what happened was, after the dick, but taproot wizards, we made a four megabyte block that was just a jpeg of a wizard. And then people realized, okay, so the entire bitcoin block is just up for grabs. You can put any amount of. We had to contact the miner and be like, can you modify your node and put it into the blockchain? Nowadays there are specific services that are popping up that are doing this as a service. The marathon mining pool has one called a slip screen. Now this is not something that you have to do anything weird. You just have to connect to the marathon API and just send them whatever data you want to pack it in there. Anyway. I guess, as everyone knows and you as Ethereum people know, that ethereum NFTs have sort of been struggling a little bit price wise. Like, I don't know, bored ape is like twelve eth these days. I don't know how the others are doing. Moonbirds, like a lot of these blue chip NFT collections have sort of collapsed. And I guess that some people felt that, well, we need a new narrative here. And the narrative was that, well, what if instead we had links to JPEG? What if instead of us putting ipfs links to pictures on the Ethereum blockchain chain, we inscribe the whole JPeG into the bitcoin blockchain so it stays there forever. So we're working with a scarce bitcoin block space. All the nodes download all of the blockchain. It's going to get replicated over a whole network of tens of thousands of nodes. Those are real pristine, fine art, fine art nfts. So that became like, that took its own life. And now we have marketplaces for that, and now we have communities, we have DGN communities for that. So contrasting to what the bitcoin layer two space has been looking like in the past, because it's not the first time that we had layer twos, let us call them sidechain. So the liquid side chain, the rootstock side chain, that's not new at all. We've had those for a very long time now that there's large amounts of money that are floating around trading nfts on bitcoin, now there's a sort of season two in the bitcoin space where we have our own native degens that are trading nfts with bitcoin. Actually, the way that we trade those nfts is actually interesting as well because most of the trading for bitcoin nfts are actually on chain using something called pre designed bitcoin transactions. And those are atomic swaps. You atomically swap the bitcoin NFT, which is actually a specific satoshi, well, a specific Utxo or the first satoshis of a specific Utxo, you swap them with bitcoin in one transaction. Atomically, there's no, doesnt go through a centralized exchange. Its actually on chain atomic swaps. Thats how nfts on bitcoin are traded."
    },
    {
        "speaker": "C",
        "text": "So its like youre basically writing an open check saying, hey, whoever wants to fulfill this check, heres a check for this amount of money for this JPEg. If you want to take the other, if you also want to sign here, you can send me this amount of money and then you can have the JPEG."
    },
    {
        "speaker": "A",
        "text": "Yeah, exactly. This is the start of the bitcoin season two starting to drum up. One of the things that I was sort of trying to make popular was that, well, we can use this arbitrary block space to create sovereign roll ups on bitcoin. So that means like you take something like, let's say for example, you take zksync and you look at what is it that they're putting into call data on Ethereum? Well, I should say in the blob space of Ethereum, you just take that and you put it into bitcoin. In the bitcoin blob space. Now you're not going to get Ethereum nodes that are verifying those knowledge proofs and making sure that that computation was done successfully. But you can have other nodes, like external nodes that read the data out of the bitcoin blockchain, and you will get the ordering from bitcoin and you'll get the data availability from bitcoin and the persistence of data from bitcoin. So that's what sovereign roll ups are. Many of those sort of celestia sovereign roll ups work the same way. They become sort of their own layer once, but they get so much of the properties of bitcoin that this is now actually an interesting way to make. I wouldn't necessarily call it a layer two. It's a layer two if it aggregates transaction in some compact full way. So there are some people that are saying that if you use serial knowledge proofs with state diffs, now that's a layer too, because you don't have all of the transactional data. But in reality, how state dif work, state is only really compress the transactional data that you have to put on chain. If it's the same state that is getting updated multiple times in the same block, a lot of times in blockchains, you're sending money to Charlie, Charlie is sending money to Eva, and Eva's interacting with a compound contract. There's a bunch of things that is happening. Not always. Can you just compress all of that? Because there's different states that needs to get updated. But anyway, you get some compression benefits when you have state diffs. I guess you could call some of those sovereign roll ups, like actual layer two s. Anyway, so started with the word nulls, and then some people are starting to build sovereign roll ups. Alpen Labs and Chainway are some of the teams that are working on. So Bison Labs is another one. And I'm an investor in chainway and in Alpen labs, and I was sort of advising them to, well, you can't build your ZK roll up right now on bitcoin because we don't have these ZTP verifier opcodes. But you can build a sovereign roll up and then make a vibrant ecosystem. And then by the time that we actually do have a way to verify serial knowledge proofs on bitcoin, you can transition. So that's like mid 2023. And now there's like, okay, we have ordinals and we have sovereign roll ups. There's, like, full ethereum virtual machines running inside of bitcoin. There are serial knowledge proven. This is what is getting, like, investors to get excited. So even then, in the middle of 2023, people are getting excited about bitcoin innovation in a new way. Because if you also think about it, what was the reason for? Okay, so you have rootstock and you have liquid connected to bitcoin through side chains. But what is the user base like? Who's going to use that? There's traditionally been almost, like, no material usage on those chains. But if you see that super, like, if you see that very vibrant ordinal activity and you imagine that, well, they're going to hit scalability limits and also the way that they're doing. And I don't know. So it started with nfts on bitcoin, but then that later gave rise to another thing, which were called BRC 20 tokens. I think you guys are familiar with those, right? Yeah, but the BRC 20 tokens suck. I don't know if you have tried actually to transact or sell a BRC 20 token. It is the worst trading experience that existed in any protocol that has existed under the sun of blockchain since the dawn of mankind. It is so awful. No, it is so awful because you have to sell. First of all, if I want to purchase some BRC 20 token, there's going to be listings, like offers for sale, and I can buy 10,000 from that guy. And 60,000 from that guy and 100,000 from that guy of these tokens. And then I have these clumps, piles of tokens, and then if I want to sell five of those, then I have to make a new transaction that slices up five from my existing pile. And then I can sell that pile of five. But I then the buyer who now wants to buy, let's see why he wants to buy three. He can't buy 3000. He has to buy either my whole 5000 pile or none of it. So it's like the tokens are fungible, but you have to sort of manually slice them up as pizza slices and then they're like non fungibility. So that's how BRC 20 token trading works and still works this day on bitcoin. So everyone's sort of realizing that and okay, there's a lot of money here, but they cannot. And we don't have automated market makers either. So we don't have liquidity pools or anything. So the whole trading is completely one sided. Where there are offers but there are no bids. So there's just one sided liquidity marketplaces. There's no liquidity pools or anything."
    },
    {
        "speaker": "B",
        "text": "Really quick. In the BRC 20 thing that was kind of like old tech, right? We had Casey, the creator of ordinals and runes on the podcast, podcast not too long ago and so very excited about the launch of runes, which the TLDR from him was basically like runes is a better version of a bitcoin fungible tokens and upgrade from the BRC 20. Are you also considering runes when you're talking about BRC 20 or is that sort of like, is the new tech a lot better?"
    },
    {
        "speaker": "A",
        "text": "So runes are better in the sense that they integrate with like traditional, traditional bitcoin wallets better. So a bit. So runes are just utxos. BRC twenties are not. BRC twenties are like you have to go into the arbitrary data space of an inscription and then read a JSON and then you understand, okay, this person owns that many of that BRC 20 in runes, it's Utxo based. So if you own this Utxo, in the upper turn of that Utxo, it'll say how many of those runes that you own. So you can build like regular bitcoin wallets that are only used to working with Utxo. They can own these rooms as pure Utxos. So it becomes a lot more easier to build to integrate that with traditional bitcoin wallet software. However, the trading experience is exactly as shit as VRC 20?"
    },
    {
        "speaker": "B",
        "text": "No."
    },
    {
        "speaker": "A",
        "text": "Yes."
    },
    {
        "speaker": "B",
        "text": "I didn't realize that."
    },
    {
        "speaker": "A",
        "text": "Yes. So right now Unisat is like the biggest marketplace for BRC twenties. And actually I think in the OKX eclipsed it for a while. I think it might be back to Unisat marketplace at the moment. But as a technical person you understand well, runes have benefits, but as just the retail user that's trying to interact with these tokens, it looks exactly the same. You still have to like, okay, I have to buy either 1.5 million of this token or I have to buy 20,000 of this tokenization and then I have to slice them up. So the trading experience is the same. So it's the exact same share that just works better for people that want to integrate this with bitcoin wallets. So runes are great. They're better, we love them. And the main reason that we love them is because BRC twenties bloated the Utxo set of bitcoin. So if you're buying BRC 20 tokens, every time that you're splitting them up or sending them to someone else, the Utxos just keeps growing. And that's basically like the stake. So you know that you have problems with state load in Ethereum. Like the state just keeps getting bigger in bitcoin. Yeah, our Utxo gets bigger also. But sometimes you want to take all your unspent transaction outputs and you want to send them to one person and then it actually collapses. So the Utxo set, that tends to grow and shrink depending on people, like when people are consolidating their transactions. But BRC 20 tokens had no consolidation mechanism. So it was just like, and if."
    },
    {
        "speaker": "C",
        "text": "You look at these charts up only."
    },
    {
        "speaker": "A",
        "text": "With state up only and that means harder ram requirements on bitcoin nodes. So it's actually kind of like an attack on the bitcoin system. Runes avoid that because they are Utxo based. They can collapse and combine in the same way that utxos do. So they don't have that on the Utxo problem, so. But they didn't, they didn't solve it. The user experience, yeah, they didn't solve the UX problem, they just solved. Okay, now people are more happy with the growth rate of the Utxo set. So we still, so the situation that we're in that we have been in is that of, well, now there's actually a need for layer twos on bitcoin that can offload some of this Utxo bloat and runes trading. And you have seen the fees gone crazy on bitcoin, right? There was a, I think there was a day that right after halvening, it was $78 million in fees."
    },
    {
        "speaker": "B",
        "text": "Yeah, $80 million day. And that was a day where Ethereum, just to give context, was like like $5 million or something. So like actually like it crushed ethereum that day in fee revenue."
    },
    {
        "speaker": "C",
        "text": "A single typical bitcoin transfer was $170 or something for a short period of time."
    },
    {
        "speaker": "A",
        "text": "Yeah. So I mean, doing this Degen token NFT trading right now is still small. So like sometimes the fees are low, but obviously this is not going to scale for the long term. So that is why VC's are saying that there's going to be a need for second layers on bitcoin. So they were very interested in these sovereign roll ups. Like, okay, how can they aggregate transactions with ZK? And they're even interested now in more fanciful versions of federated multisigs. So if you're not just like, so liquid is an eleven out of 15 multisig on bitcoin. That's the predominant famous side chain on bitcoin. But if you start doing something that's a little bit more exotic than that, than bitcoin, VC's are now. Okay, maybe this is interesting. I think the analogy that I bring that I'd say is that Polygon started out as a side chain to Ethereum and they were ethereum aligned. And then I think the polygon proof of stake chain launched before rollups really even existed as a thing. Then by the time that there were ZK and roll up technology existed, they started to pivot to that. I think that's maybe how the VC thinks that some of these things are sidechains. As long as they can get traction and momentum, they're going to be able to adopt any type of new technology for layer twos on bitcoin that will emerge. Here's where the important part, the savior from the sky, which was this white paper called the bitvm."
    },
    {
        "speaker": "B",
        "text": "Bitvm. We've heard so much about it."
    },
    {
        "speaker": "A",
        "text": "Yes. So BiTVM posited that you could actually do arbitrary computation on bitcoin. Sort of what I was talking about previously where. Okay, well, you have basically a merclised, a merkelized state. And if you transition to another state, you can sort of do these bisection games and identify. This is the part where some computation went wrong. So like a fraud, an optimistic way of doing computation for bitcoin emerged through this white paper. Well, it emerged as an idea through this white paper. And that is what people have been hacking on since October 2023. And the, what people imagined was that we could use this mechanism of BitVM to, if it has the ability to do arbitrary computation on bitcoin and sort of optimistically verify that, then we should be able to build something like optimistic rollups. As what people have been talking about with the caveat, what people have considered is technically possible today with BitVM is, you know how arbitrum has whitelisted, whitelisted fraud, fraud entities that are whitelisted, fraud provers, like whitelisted verifiers. So that is the technical state that people thought that you could get with BitVM. So it's not perfect. It's not like a permissionless optimistic roll up where anyone who can post a security bond can. I can challenge an invalid state root update. So that's what arbitrum promises once they remove this whitelist that has."
    },
    {
        "speaker": "B",
        "text": "That's what BitVM, or that's what arbitrum and BitVM would promise is like."
    },
    {
        "speaker": "A",
        "text": "No, no. So arbitrum promises that they're going to see."
    },
    {
        "speaker": "B",
        "text": "But for BitVM, it's a hard constraint. You can't."
    },
    {
        "speaker": "A",
        "text": "It's a hard constraint. It's a hard constraint. That is not the only hard constraint of BitVM, though, unfortunately, as we've discovered, the bitcoin scripting language is just the same today as it was years ago. There's nothing new. We don't have covenants. We cannot do finite state machines. We could maybe inside a state channel, resolve arbitrary computation optimistically through a complicated verifier challenger game. However, one of the constraints is that when you do this on Ethereum, you have sort of in optimism. For example, you have sort of a chess clock dynamic where. Okay, I'm going to assess that fraud happened here. So this is the part of the transaction that I'm disputing now. The sequencer then, in optimism, has to prove no, this is how I did. So you sort of bisect down to the part where the computation was done incorrectly, but they have sort of a chess clock mechanism where. Here's my proof. Now it's your turn to give your proof back to me. In bitcoin, we don't have chess clocks. So you have these long time windows where you can either within that time window, post the second round in your multi round fraud proof or not. Which means that this dispute resolution mechanism in BitVM could, the first versions we saw this would take six months. There's been some people that are now arguing that they can compress that down to four weeks. So where you guys are working with, like, seven."
    },
    {
        "speaker": "B",
        "text": "Seven days?"
    },
    {
        "speaker": "A",
        "text": "Yeah, seven day settlement windows, we're working with either six months, and maybe we can compress it down to four week, four weeks. So we're struggling with, like, harder constraints on that side. The other thing that we're struggling with is that in order for this to work at all, you need to do, you need to. You need to set up sort of stage channel between all the participants, between all the challengers and verifiers, or actually, let's call them operators and verifiers. That requires them to share pre signed transactions. That describes every single state transition in the BiTVM virtual machine, and they have to share all those transactions with each other. So that's, like, a large amount of data that has to be shared between the participants of this game, and it makes it very difficult for other channel participants to join the BiTVM dispute resolution game. So it has clunkiness on the setup side, it has clunkiness on the channel response side. But the primary clunkiness that was discovered to me quite recently because I was actually kind of bullish on BiTVM. Been writing. I've been writing tweets that are trying to describe this, is how we can do something that looks quite similar to some flavor of optimistic roll up on bitcoin. But there was a part of when we actually got to the implementation stage, and when I say we, I mean, we're the teams that are. That I've jumped. And so the number of teams that are building on BiTVM these days are alpen labs. There's chainway, actually. Rootstock is doing that. Even stacks is doing this. And let's see, what am I forgetting? Well, basically, your whole. The only exception is litwin is the only one that's not trying to do the BitVM direction. Bison Bitlayer is another one. So if you see any fancy bitcoin l two these days, 80% probability is."
    },
    {
        "speaker": "B",
        "text": "That they're building on BiTVM or intending to. They say, hey, it's not ready yet, but at some point, we'll just move to BitVM. The one thing I want to add for listeners, too, is bit vm. Correct me if I'm wrong, Eric does not require an opcode change. Importantly, correct."
    },
    {
        "speaker": "A",
        "text": "Yeah, that's the. Yeah, that's the whole."
    },
    {
        "speaker": "B",
        "text": "That's the whole thing."
    },
    {
        "speaker": "A",
        "text": "Yeah."
    },
    {
        "speaker": "B",
        "text": "Okay."
    },
    {
        "speaker": "A",
        "text": "You can do it natively on bitcoin without. Without anything. However, now we get to sort of the big problem, which I think might be an unsurmountable problem. The problem with BiTVM is that, so when you deposit funds to optimism, you send in, here's my $10,000 worth of ether. I send it in, and then when you want to withdraw, when you withdraw your funds, that's when you can do this fraud. That's when the sequencer picks up the transaction and puts it into the state group. Now there's an invalid transaction there. That's what you can do. The fraud mechanism on. That's where you do the dispute resolution. It's on the withdrawal in BITVM. It doesn't work like that in Bitvm. How it works is that the operator, so the sequencer has to send the funds to the people that are owed these monies. So if you say, I want to withdraw, give me my $10,000 worth of ether, then the sequencer will oblige and say, okay, here's your $10,000 worth of ether, and then he can reimburse himself with the ether that you previously posted. And it's the reimbursement that you can now do the fraud, fraud dispute resolution game on. What that means is, what that means is that he cannot use the money that you deposited to pay you out. He has to front the money, that capital for you for your withdrawal, and then he can reimburse himself later. When the first time that I read this, I thought like, okay, he does a withdrawal, and then he reimburses himself with the money, and then he processes the next withdrawal. But that's not how it works. It's a whole window of withdrawal that can be like, let's say a week, all those withdrawals he has to front. And then after a week's time, he can now reimburse himself. And so that got us a little bit, because, I mean, at taproot wizards, we also want to play around with Altoos. Like, we also want to improve the current situations of the BRC 20 tokens, the rune trading. We want to upgrade that and put it into environments where we can actually improve bitcoin. And we have, like, longer term, the vision that we at Taproot wisdom is not, okay, let's enable a bunch of degen trading, like meme coin trading on bitcoin. That's actually not what we want to do. We want to provide a more scalable environment for bitcoin, the bitcoin asset itself, and potentially add some type of serial knowledge type cryptography to give privacy to bitcoin, which we desperately need anyway, we studied. Okay, so how large what could the net outflows of a big roll up looked like? So we did some analysis. We actually worked together with data always on this. I don't know if you're familiar with that researcher, but she or he does great research."
    },
    {
        "speaker": "B",
        "text": "Great."
    },
    {
        "speaker": "A",
        "text": "And found out that in 2021, arbitrum, within one week's span, had a billion dollar net outflow. And I think that was, do you remember, like, in the early days of arbitrum, there was like a neon cat Ponzi."
    },
    {
        "speaker": "C",
        "text": "Yeah, it was like, right after the arbitram mainnet, like the nyon cap. Ponzi was the first reason why so many people pushed money into arbitrum, because Ponzi was going on."
    },
    {
        "speaker": "A",
        "text": "But then it ran out. Like the game ran out because the token went to zero, because there was, like, the apy that you were earning just inflated the token. So the token went to zero. So people were farming and selling the token, and token went to zero. And now there was no longer any money to earn there. So all that billion of capital that had bridged into arbitrum, they were like, okay, what's the next game that I can play? What other food token can I play? So this is not even like a malicious attack. This is just like, we want to go somewhere else and have fun somewhere else. Okay, so now imagine now that you're the arbitrum operator, I got to find a billion dollars. And what happens that if you don't, if you cannot fulfill that, if you cannot fulfill that liquidity requirement in that week, so what you can do? So there are people that are now in the BitVM after we sort of brought this up as a big problem, they said, well, you can just, the role of the operator, you can just push that role to another operator and give him a chance to fulfill the liquidity requirements, and you can just kick the can down the road. But if this is, like, too big of a liquidity crunch that no one is going to be able to solve, I don't know how it actually helps. Like, okay, we can't do it. We push it over to the next guy. What are the odds that he's just, okay, I just happen to have, like, a billion dollars. I can resolve this."
    },
    {
        "speaker": "C",
        "text": "So one of the main features of a layer two is that it allows many, many, many people to be aggregated all at once. And I think what you're saying is there's a fundamental problem here when there are many, many, many users of a layer two, but there's a single operator who's responsible for that withdrawal, and so that one single operator, if that, if this layer two gets successful enough, they are, no matter how size their size is, they will still be overwhelmed by an eventual success scenario, which is that layer two has so much capital in it that eventually there's going to be a moment in which a lot of capital would like to outflow, and that one single operator can't be a sufficiently large market maker to satisfy the outflows out of that layer two is that kind of the."
    },
    {
        "speaker": "A",
        "text": "A liquidity crisis, right, it's liquidity crisis. And so what can happen in that situation? If you do what the current bit vm implementers say, well, you just push the can down the road and you give the rule to someone else at the end. If no one can fulfill this liquidity crunch requirement, what happens in the best case is that you put all the funds into a multi sig, and now the multisig can distribute the funds to the participants without, like, they actually just receive all the money from the roll up. And now they can, if they're honest, they can now send the funds to whoever owes them. But it actually just puts the hand in the full control of the multi seat. And I mean, so you could argue, like, okay, ethereum has these kind of issues too, like with the security councils, but I mean, at least in ethereum we can move away from that and the security councils can have time delays before they can take the funds. This is the final, this is the best we can do. We can have an operator that has these upfront liquidity requirements, and if we can't fulfill them, it devolves into a multisig. And you can argue here that, why did we do all this complexity with all the challenge response games and all the liquidity, if it all devolves into a multisig in the worst case, and we are sort of, we have to build these systems with the worst case as the assumption, because if you're a George source type attacker, you can just force this to happen. You can force it to happen too. So then Multisig is ultimately the underlying security model."
    },
    {
        "speaker": "C",
        "text": "That seems like a pretty anticlimactic conclusion for a ton of technical research to make the BiTVM happen."
    },
    {
        "speaker": "A",
        "text": "It gets worse. It gets worse. It gets worse because even if there's not a liquidity crunch, even if it's happy days, and yeah, I can satisfy $50 million worth of withdrawals. Like, I'm capitalized, I have VC funding and I'm using. But imagine how capital inefficient that operator is that he needs to have $50 million of capital that he's rotating, non productive capital. Non productive capital that he cannot like. So. So he ultimately needs to charge higher fees from his customers in order to make it work, in order to pay the interest that he has on that capital that he's probably borrowed. Then he has to make sure that he earns enough in his role as operator to make his business work."
    },
    {
        "speaker": "B",
        "text": "Or you could be, like, fractional reserve, I guess, and just face a possible run on the chain, basically. And then if there's a run on the chain, then everything goes into, like, I'll call it bankruptcy court, which is like, this kind of multi sig for. For redemptions, I suppose."
    },
    {
        "speaker": "A",
        "text": "Yeah, no, I am talking about the fractional reserve situation. But even that fraction that he has to keep on hand is going to be."
    },
    {
        "speaker": "B",
        "text": "Yeah, a lot. 10% at least, you know?"
    },
    {
        "speaker": "A",
        "text": "Yeah, yeah. It's going to be a lot of money. Like, how much capital is in arbitrum these days?"
    },
    {
        "speaker": "C",
        "text": "Like, we're talking about 15 billion."
    },
    {
        "speaker": "A",
        "text": "Yeah. So are you going to want to keep 1.5 billion at hand anyway? And the liquidity crunch issue is not the only problem that I'm thinking about. I'm also thinking about, well, you have this constraint of who can be a participant, like, who can be a verifier. It's more like a stage channel than an open system where anyone can participate in. There's been a new paper called BiTVM version two, which I've heard from the people that work on it. It's still kind of impractical. And then you have these setup phases, and you have these very long, drawn out challenge response games that take four to six weeks. And if you're running by the model where you're delegating this liquidity crunch problem over to someone else. To someone else. To someone else. Let's say you have 100 different operators that can stand in line to take over this responsibility, and they all have a weakness on them. Now we're talking about, like, 100 weeks before it even devolves to a multisig. So I would rather have a multisig that just always works within minutes notice. Then potentially having a system that runs into a liquidity crunch keeps my capital away from me for 100 weeks and then devolves into a multi sig that."
    },
    {
        "speaker": "B",
        "text": "Always works is called a side chain, though."
    },
    {
        "speaker": "A",
        "text": "Right?"
    },
    {
        "speaker": "B",
        "text": "And we already have those."
    },
    {
        "speaker": "A",
        "text": "Yes. Yes. So I generally think, like the people that went into BitVM, they did this with the best intentions. They're just trying to make. They're honest, good builders just trying to make the best that they can with this. Actually pretty brilliant, pretty awesome new type of way of resolving arbitrary computation on bitcoin. But as we get closer and as we start to understand these restrictions, it's starting to look like something that maybe isn't. Sucks to say maybe isn't that much better than maybe just build a really, really good multisig with loads of signers. Like you can have a large validator set and then you can do subcommittees that sign things, randomly, assign committees to sign things quickly so that it functions, for example. That's what I think what botanics does. That is what the guys that you mentioned, that the guys are just spinning up their system. I think that's what the meso, like TBTC people are doing with these very large multi sig sets. Yeah. So the bitcoin l two space, like where are we with all of this?"
    },
    {
        "speaker": "C",
        "text": "Because it seems to be that the bitcoin layer two space is going to be built no matter what, technical constraints aside, that ball is rolling. They're already committed builders here. There's already vc interest in there. So the bitcoin layer two landscape is going to happen. It's just a matter of just like, what does it look like on the end of it?"
    },
    {
        "speaker": "B",
        "text": "Why do you say that, David? Why do you think it's going to happen? Is it sort of the case that now all of these like roll ups are being developed and layer twos are getting invested in and even if BiTVM proves to be sort of a dead end, right, like kind of the worst comes true here, then they'll still force like political change and the op codes that Eric was talking about the beginning of this episode to be pushed through."
    },
    {
        "speaker": "C",
        "text": "Or why do you think it's not necessarily. I just think that like there is enough, like Eric's like going through the arc of bitcoin history with ordinals and runes and then like the constraints of the supply of block space on the bitcoin layer one, all of that was to, like, in my mind was to express the need for bitcoin layer twos. Right? Like bitcoin needs layer two. We've got, we've got ordinals, we've got runes. We are seeing up only interest in building on the layer one, which therefore creates the need for bitcoin layer twos. And now also there has been just like an ecosystem of many, many, many bitcoin layer twos across a broad spectrum of quality, some thinking about how to do this on the most technically advanced frontier possible. The high quality ones and then some on the opposite end of that spectrum, some vaporware kind of stuff and everything in between. So this whole ecosystem is now a category. There's been venture investment in these teams. There's committed builders to building a product that they are calling a bitcoin layer to do bitcoin things that settle on bitcoin. And so like it's, I think the ball is just rolled at this point. We're going to get some set of products on the other side of things that look and feel like bitcoin layer twos. And it sounds like according to Eric Wall's constraints of the bitcoin, the bitVm, that there will be needing to be some shortcuts being taken. And now it's a matter of just like what. So what does the market feel is like satisfactory shortcuts and what can they get out of that?"
    },
    {
        "speaker": "B",
        "text": "Yeah, I hear what you're saying here and like, obviously Eric can kind of answer this, but I guess to all you're saying, David, it feels like a narrative is here and building is happening. But from what I'm hearing is there's like this technical brick wall, which means all of the layer twos will like hit that brick wall and they can't have like a full layer two. Yes, they could have a sovereign roll up. Yes they could do a side chain with a super secure multisig. But like you can't be an Ethereum layer two style roll up with, with fraud proofs and etcetera on chain. Yes."
    },
    {
        "speaker": "C",
        "text": "Yeah, but also at the same time, we don't even have Ethereum style roll ups in the Ethereum ecosystem."
    },
    {
        "speaker": "B",
        "text": "Sure, sure."
    },
    {
        "speaker": "C",
        "text": "Perfect."
    },
    {
        "speaker": "A",
        "text": "Thank you for making my point."
    },
    {
        "speaker": "B",
        "text": "Sorry for that sidebar, Eric."
    },
    {
        "speaker": "A",
        "text": "I think, David, you've gotten smarter over the years or something."
    },
    {
        "speaker": "C",
        "text": "I swear to God, I've always been this smart."
    },
    {
        "speaker": "B",
        "text": "Yeah, it was ever since your headlocked, you know, you just choked some sense into him."
    },
    {
        "speaker": "A",
        "text": "I think David is completely right in that. Ordinals runes demand for l two s. The ball is rolling. There are teams that have raised. There's this fantasy of bitvm coming in and creating actually permissionless and trustless l two s on bitcoin. Demand is here and there's VC funding and the VC's. I don't know how much these VC's care. Like they could. The VC's can say, well, I don't actually care how much your BitVm bridge sucks and how much you patch it up with multisigs that you hide because."
    },
    {
        "speaker": "C",
        "text": "If you duct tape works great, guys. Yeah."
    },
    {
        "speaker": "A",
        "text": "If we say that this is a bitcoin l two that uses secret proofs somewhere and uses secret proofs for aggregation in some part of the stack and uses some BitvM things something over again, even if it also takes stacks. For example, stacks is like a billion dollar multi. I think it's market cap is like four $6 billion stacks is like, you know what happens? I don't know how much time we have left of this episode, but I can go into a small detour."
    },
    {
        "speaker": "B",
        "text": "I want to know if stacks a real layer two, an Eric Wald definition of what we described, layer two or not. And does it have a path to become one?"
    },
    {
        "speaker": "A",
        "text": "Yeah, so it's kind of funny. So the short answer is no, absolutely not. So what happened with stacks was that stacks had this consensus algorithm called proof of transfer. And how it worked was that people who owned stacks token could stack them and then other people would send bitcoin to those people and win the right to create a stacks block and earn the stacks block reward. So they were basically bidding for stacks for the stacks block subsidy and also for the rights to make a stacks block. However, since this is happening inside a bitcoin block, it's completely possible for the miner to just censor all the bids for the stacks block reward and just send their own one Satoshi bid and win the entire stacks block for nothing. And this was actually happening. So f two pool were completely fucking stacks over and just picking out the stacks blocks reward and didn't give a shit about stacks. So stacks has needed to fix that problem by completely revamping how sort of finality works in the stacks blockchain. And they're calling that stack Snakamoto. They're using, like, signers to basically checkpoint which blocks are the valid ones. They're using both mining and stacks. It's a little bit complicated, but basically they're trying to fix this problem of, okay, our shit was completely vulnerable to minor manipulation. So they're rebranding stacks into something that's called stack Snakamoto now. And because they have had to hotfix this problem in what I would describe in kind of an ugly way, they're calling now stacks an l two. We fixed this finality problem with our blockchain, and now it's an l two. Even though, even if you read the white paper, if you read the white paper itself, they outline like, these are the requirements for a real two on bitcoin to exist. It requires the ability, and maybe I should have said this sooner. What is the definition of an l two, in my opinion, is the ability for a user that has deposited funds into the l two to have the unilateral right to pull those funds out whenever they want to. That's an l two."
    },
    {
        "speaker": "B",
        "text": "Agreed. That's the ethereum definition of an l two as well. And sometimes that gets abused in the Ethereum world."
    },
    {
        "speaker": "A",
        "text": "I'm glad that you said that, Ryan, because I've seen people all over the Ethereum space that are like, oh, well, yeah, but I agree that should be how we define l two s. And we can call those other things. But yeah, that's my definition of an l two. And if you read the stacks Nakamoto paper, then they do admit that they have made no strides and no progress towards like, enabling the ability for you to unilaterally withdraw your funds back to the bitcoin chain. So no, stacks is not an l two. The BitVM thinks like, I don't know if they're l two s, but they have this liquidity crunch constraint that pushes them to multisig in worst cases. So to answer your question, we don't kind of have l two s on bitcoin. And as you say, there's sort of a technical brick wall here. And the thing that we need, and actually what the bitcoin industry is working towards is we need covenants. We need covenants because covenants allow us to create finite state machines. And if the covenants that we chose within the bitcoin community was cat, cat is a covenants opcode, then we could do these merkle tree verifications. As a side bonus, that actually allows us to build actual layer twos on bitcoin. So no, bitcoin doesn't really have practical or functional l two s at the moment. We need covenants, recursive covenants, and we need merkle tree verification. Cats is one of those opcodes that gives us both. And that is why I used to be arbitrum delegate. I'm a board member of the Starknet foundation. I'm an optimism delegate. I'm actually one of the largest arbitrum delegates. I have no idea. I've been dedicating because I came from the bitcoin space and I wanted to build better layer twos than what lightning network could provide. Because I think in a layer two, how it should work is that you give me your address and I'll send you funds. That's how the dynamic should work. That's not how it works in lightning. And I think that lightning is not going to be very successful. Tell me that. Well, you can't send me funds yet. I'll have to go and borrow funds from David so that I have enough inbound liquidity to receive those funds. Crypto has ux challenges enough as it is for people to manage private keys and all that. The second layers cannot add more Ux challenges and think that they're going to be more successful than the layer ones are. They have to reduce the technical challenges that people face. And lightning, unfortunately, added a bunch of technical constraints. When I was young, when I was naive, I thought that would make it work because decentralization is so important now. I feel like if your system is so decentralized that the UX sucks, so that everyone uses custodial solutions instead, you have actually done a worse job at creating decentralization because there's so few people that actually use it. So that's sort of the adult take that that we've come to. So anyway, roll ups, I think are the types of. Even though I have my reservations with how the fragmentation, I know you guys had an episode with Justin Drake not long ago about how we're going to solve fragmentation issues with shared sequencers. I pray to God that that works. And it doesn't take like three years to let me figure out that it's like sharding. And you know, my hope is out there that we're going to solve that. But just one single roll up alone is still a much better layer two solution than what lightning is. And that's the direction that I've been wanting us to go towards. So no one, I wanted this as badly. I really want layer two solutions to work on bitcoin. I'm not here to try to. If we could do them, if tapered wizards could just spin up a bit vm roll up, and it's going to work awesomely, we would be doing that right now. But there is no shortcuts here. We need covenants, and probably we're going to need a way to do ckp verification. Also, if all the people that are genuine about wanting to build proper l two s on bitcoin, if we band together and get this cat op code through, then I think we're actually in the clear, then we don't have that much to worry about. So that is what we're fighting for at the moment. And I don't think that. So this bit vm stuff that people are working on, there's not a finished implementation for that. I would classify BitVM as sort of like a school experiment or something like that. It's gonna take years to really flesh that out into a production grade system that people can work with. The path to activating cat might be a shorter way than that. So if you are a l two builder in the bitcoin space, the fastest way for you to actually get a proper permissionless bridge, a proper two way peg without any liquidity constraints that doesn't have these weird setup faces or weird channel based constraints, where there's a limit on who can do fraud proofs, then getting cat activated is probably what you should be focused on. So that's sort of the message that we're trying to. If we can get all l two builders on this goal together, then we're good. Otherwise, I'm not so sure. We might be in a situation with, like, polygon. Pos is the side chain to bitcoin for I don't know how many years. There was one other thing I wanted to say also, which is I think that the people who are building on BitVM now, I would classify them as earnest, genuine, talented. Some of them are extremely smart, extremely capable, and just good, honest people that are trying to make this work. We haven't touched at all on the whole scam side of bitcoin l two s, because ever since the BitVM paper came out, there's been a. The bitcoin space has been awash with complete scam projects. Not sure if I should name their names specifically, because I'm going to have them up my ass for the next couple of months if I do. But there are. Okay, one obvious one is the one which was called Satoshi Vm. They just said, we're a bit vm. They had some white paper that described something about BitVM. The white paper made no sense. The token launched on Ethereum, and it actually trades. Now you can search for its SAVM is the ticker, and it's just like a complete scam. Ticker has nothing to do with bitcoin whatsoever. Another one is called Merlin chain that actually copied a lot of the, you know how the sort of brand of taproot wizards is let's make bitcoin magical again. And it's about wizards. So they just created Merlin chain. It has like a wizard symbol. And their tagline is let's make bitcoin fun again. And if you go to their technical docs, try to figure out what is this? It says that it's a polygon ZKeVM bitcoin layer two that uses Celestia as a data availability layer. But if it's a polygon ckevm that uses celestia as the data availability layer, how is it using bitcoin again? And then in some, like, if you read further into the docs, it says you'll find like cropped out screenshots from bit from Robin Linus BitVM paper somewhere where they just, oh, you can use NANd gates to do arbitrary computation. This is like future research, but in terms of what actually exists on bitcoin is just, it's just an address that you. It's just like a wallet. You just send bitcoin to someone's wallet and they call that, like, they actually do call it like a bitcoin Zkrollup, which doesn't technically exist at all. And there's a bunch of them, there's bevm BVM. And if you go to these Twitter profiles, to the Twitter profiles of these accounts, you'll see that they have like 250,000 followers and 10 million transactions and 1.5 million daily users and 700,000 active wallets. And these numbers don't make sense at all for a wide category of these so called bitcoin l two s. So unfortunately, the ordinals hype and the BitVM paper just gave scammers, they understood that, okay, there's demand for. Everyone's looking for what's the new bitcoin layer two going to be? And the whole bitcoin space is unfortunately awash with these scams at the moment. Wherever people are just pretending to be fully fledged bit vm l two s, but they haven't done, like I said, BitVM doesn't even exist yet. There's no, there is no canonical. There's a few projects that are trying to implement the stuff that Robin Linus has talked about. Robin Linus himself is trying to build a reference implementation. It is not finished yet, so no one really knows how any of this is supposed to work. But there are a bunch of projects that have started to scam and saying that, that technology is already complete, and they have tokens that are trading on Ethereum, that are trading at everything from like $70 to $250 million valuation. So that's like one of the negative sides of this excitement that has also happened. So my point was basically to say that, yeah, there are some BitVM builders that are struggling right now, but it sort of feels unfair to criticize them when there's a larger group of just pure scammers that are grifting this space at the same time. So it is a difficult. What I want to say to people that are listening to this, be extremely cautious to anyone that says that they're a bitcoin l two, try to understand what it is that they have implemented. What exists in open source code that you can look at. I know that most people don't do this research, but if there's any, in any space that you need to be very cautious, it is currently the bitcoin l two space. It is a complete mess."
    },
    {
        "speaker": "C",
        "text": "Scammers and fraudsters are actually a byproduct of an actual growing and real ecosystem. So there's actually like some symptom of success here. I know, Eric, you've been with bitcoin since like the early days, back before the bitcoin dark ages. I'll call it back before like the monetary maximalist, like, laser eyed maxis really gained control. And I think this is where our very first episode with you kind of talked about that change in bitcoin culture. But now we're seeing it kind of shift back to, I think, a more familiar territory. And despite some of the challenges that I think you've illustrated here on the episode today, the fact that there are challenges in bitcoin that people are working to overcome is like extremely refreshing and very optimistic. So overall, just like, how would you rate the hell health of the bitcoin ecosystem and your perception of its direction?"
    },
    {
        "speaker": "A",
        "text": "Yeah. As much as these bitcoin l two s have problems, I am so thrilled that we have bitcoin l two s with problems rather than just having lightning that everyone says is amazing and is going to solve everything. If I had to choose between either of those two things, I would much prefer the reality where there's tons of teams, smart people that are aggressively trying to bring better layer twos into existence. So, I mean, what we ultimately need for bitcoin is actually, I'm not that convinced that we need to take everything that Ethereum has done and put it onto bitcoin. Why you can go and do that on Ethereum. If you really, really need to do decentralized lending and decentralized trading and all that, just, just go do that on Ethereum, get a reasonably secure pegged in bitcoin, pegged in version of bitcoin and do those activities on. We don't need all of the Ethereum stuff to exist on bitcoin. I don't think so. But what I do know that we do need, we just need a way for me to be able to send bitcoin to you in a in a scalable and private fashion, just so that bitcoin as a currency works. And everyone has believed that that would be lightning, that lightning would solve those problems. And same way that I was bullish on BitVM initially, I was bullish on Lightning initially, too. But lightning developers are also coming to the conclusion that these channels that were trying to scale bitcoin through have constraints with inbound liquidity. The user experience, as much as we're trying to patch it up from a problem, appears somewhere else in the system. It's like a balloon that you're trying to squeeze out the water of and it just pops up somewhere else. That's sort of how it works when you're struggling with the lightning design space. I think that lightning developers are at the stage now where they would happily say, we want our next upgrade of lightning to not use channels at all. So if that gave them a convenient out of not saying, okay, lightning network didn't work, like, we have a new version of lightning that doesn't use channels, it uses stateroot updates and either ZK proofs to make sure that those stateroot updates are correct or some type of optimistic challenge response. So basically roll ups, but let's call it lightning. So. But yeah, I think the bitcoin ecosystem has woken up to the idea that lightning is not going to work. So that's why everyone is trying. So a lot of the hardcore, the hardcore bitcoiners, there was a white paper that came out for something that was called Ark. And I don't know, you guys maybe didn't pay attention to this, but there was a massive interest in Ark. And if the reality of the situation was that everyone in bitcoin was happy with lightning, why would everyone throw themselves to this new protocol called Ark, which claimed to have solved some of the inbound liquidity issues of lightning, or some of the other issues of interactiveness of lightning. Obviously there is this big pent up realization now that maybe getting lightning to work in a decentralized way is not where we're going to end up. We're going to end up. We're seeing. You just have to look at the data. Custodial wallets rule the day. 90% of lightning users use custodial wallets because it's just so much more convenient. And that is such a sad outcome. So we know that bitcoiners, as much as they don't want to admit sometimes that lightning has been a failure, we see themselves throwing in themselves at things like Ark, like anything that is different or that is better. The overtone window has changed to, we need better second layer solutions on bitcoin. And I think that with enough people with grit and will and desire, we're going to get there."
    },
    {
        "speaker": "C",
        "text": "Well, Eric, it's always fascinating having you on, and both your commitment to technical assurance offered by cryptography and the way that they are just leveraged across the space is always just a fascinating learning lesson and also just a good reminder of some of the history of this space. So, thank you for coming on and kind of updating us on the progress of bitcoin. And as bankless listeners might have been able to tell, we've been doing more bitcoin content lately, and that's because of some of the technical unlocks that Eric has been talking about here on the show today, and a much more optimistic and bullish frontier than we've seen in the bitcoin world than we've ever seen before. So, Eric, thank you for coming on the show today."
    },
    {
        "speaker": "A",
        "text": "Thank you. And, David, is it the 30 may that you're gonna be entering?"
    },
    {
        "speaker": "C",
        "text": "30 may, that's right. Yeah. Are you gonna be at consensus?"
    },
    {
        "speaker": "A",
        "text": "I'm gonna be in the audience. I'm gonna be. I'm not gonna be rooting for you. You know, Nick is one of my best friends, but I will."
    },
    {
        "speaker": "B",
        "text": "You have a side, Eric. Wow. Wow."
    },
    {
        "speaker": "C",
        "text": "Okay."
    },
    {
        "speaker": "B",
        "text": "This is. We're talking about the 8 may."
    },
    {
        "speaker": "A",
        "text": "I hope you guys have a great fight, and you both get to, like, show your muscles, and I hope you fail in a non embarrassing way."
    },
    {
        "speaker": "C",
        "text": "Do you have money on the other side of my polymarket?"
    },
    {
        "speaker": "A",
        "text": "I'm not gonna."
    },
    {
        "speaker": "C",
        "text": "He doesn't want to tell. That's right. You do. You do. No, no, I forgot about that."
    },
    {
        "speaker": "A",
        "text": "No, no. I love Nick, and I'm rooting for him. I think you have a decent shot, though."
    },
    {
        "speaker": "B",
        "text": "Eric, let me ask you, though, you're a betting man. I know you. Okay, so if David wins, will you shave your head again?"
    },
    {
        "speaker": "A",
        "text": "No comment."
    },
    {
        "speaker": "B",
        "text": "We'll take it to Twitter."
    },
    {
        "speaker": "C",
        "text": "All right, Bangladesh. You guys know the deal. Crypto is risky. Defi is risky. Layer twos are risky, no matter what layer one they settle to. But we are headed west. This is frontier. It's not for everyone. But we are glad you are with us on the bankless journey. Thanks a lot."
    }
]