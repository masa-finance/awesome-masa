[
    {
        "speaker": "A",
        "text": "This podcast is sponsored by Ramp. Are you the decision maker in your company? Consider this for the first time in decades, theres a better option for a corporate card and spend management platform. Meet Ramp, the only corporate card and spend management system designed to help you spend less money so you can make more. With Ramp, you get full visibility into your companys spending and control who spends what. With each vendor, Ramps software collects and verifies receipts instantly to save your team valuable time. Ramp automates data entry and routine tasks with automated approvals, expense categorization, and bill payments. Time consuming tasks, which means youll stop wasteful spending and close your books in hours instead of days. Businesses that use ramp add up to 5% to their bottom line the first year. If youre a decision maker, adding ramp could be one of the best decisions youve ever made. Get dollar 250 when you join ramp for free. Just go to ramp.com easy ramp.com easy ramp.com easy cards issued by Sutton bank and celtic bank members of DIC. Terms and conditions apply."
    },
    {
        "speaker": "B",
        "text": "Hey everyone, if you like this podcast, go behind the paywall to get privileged access to the smartest minds in finance. Join the real vision community and learn how to become a better investor. Visit realvision.com rvpod and use the promo code podcast ten. That's podcast ten to get 10% off essential membership for the first year. Now to the top analysis of today's crypto markets."
    },
    {
        "speaker": "C",
        "text": "Alrighty, everybody. We got a really special episode for you this Friday. I'm asking for a friend, but I'm gonna do a bit of a mia culpa here because this should have been our first episode. Ash, I fucked up. We got way too degenitive. So we're pulling it back, and we're going to go into the fundamentals of blockchain technology. This is an amazing piece that Ash and Anders Brownworth gave a couple of years ago. Ash, I know this is one of your favorite videos, but mind teeing it up just a bit for us?"
    },
    {
        "speaker": "D",
        "text": "Yeah, that's exactly right, Nico. Everything you said. This is an important video for me because it played an incredibly important role in my own development in learning about and understanding blockchains. Anders had done two of these, uh, demonstrations, visual demonstrations for how blockchain worked on YouTube that I actually saw in 2017. And for me, this was kind of the AHA moment where I actually understood how blockchains work just by watching him physically walk through all of these steps in a way that was very visual. So it was an incredibly powerful experience for me. Back in 2017, we asked Anders to come on real vision and do both parts together for the first time ever for real vision audience. I was incredibly excited to get to do it, and I'm incredibly excited to get to rebroadcast this. Cause I think it's such an important piece of information for people who are really struggling to get their heads around this basic question. Hey, I get it."
    },
    {
        "speaker": "E",
        "text": "It's cool."
    },
    {
        "speaker": "D",
        "text": "But how does it actually work? Well, Anders has those answers."
    },
    {
        "speaker": "C",
        "text": "Absolutely. So let's get right into it."
    },
    {
        "speaker": "E",
        "text": "Anders, welcome to real vision."
    },
    {
        "speaker": "B",
        "text": "Thank you, Ash. This is a pleasure."
    },
    {
        "speaker": "E",
        "text": "It's such a pleasure to have you here. Anders, one of the things that I find so interesting about your demo is that very often when you ask people what a blockchain is, they tell you what it can do. They give you use cases. They say bitcoin is digital gold. Ethereum is a place to write smart contracts, but they don't actually tell you what it is. And what I find so fascinating about what you've done here is that your videos do something that I've never seen anyone else do, which is to walk you through in a step by step way that's incredibly visual, concept by concept, the underlying technology for how blockchains work."
    },
    {
        "speaker": "B",
        "text": "Yeah, I only learn visually, so this is an outgrowth of having done the bitcoin deep dive and try to re explain the basic idea behind it with pictures, because that's the way I think."
    },
    {
        "speaker": "E",
        "text": "Yeah. And I should say a little bit about your background. You're currently principal architect at the Federal Reserve bank of Boston. You were a senior software engineer at Circle. And way back, I think, in 2014, you co taught the first blockchain class at MIT."
    },
    {
        "speaker": "B",
        "text": "That's right. I was lucky enough to be picked to do that. It's amazing. You go there and you've got 100 of the best minds in the world, and you're supposed to teach them something that they don't know. And it's incredibly invigorating. It's a lot of fun."
    },
    {
        "speaker": "E",
        "text": "Well, I should say you certainly succeeded in doing that. I should add, if you enjoy this demo, this walkthrough half as much as I do, shout it from the rafters, tweet it, post about it, tell your friends, share it as broadly as possible. I think this is something really special."
    },
    {
        "speaker": "B",
        "text": "Well, thank you very much. If you want, we can dive right in."
    },
    {
        "speaker": "E",
        "text": "Let's dive in."
    },
    {
        "speaker": "B",
        "text": "Great. Well, so I think the key is, with blockchains, there's only really two cryptographic techniques you have to understand to understand how blockchains work. And we're going to just quickly get a visual feel for how each of those work. This one right here we're looking at is called a SHA 256 hash. This is one of them right there. Looks like a bunch of letters and numbers together. It's actually a hex number. And what this is is a digital fingerprint of whatever I type up here. So I'm going to type something. I'll type my name a n d e r s. Okay, well, look at that. Some kind of seemingly random looking data. But if I were to take this, let's see. First of all, I should note that that starts with a 19 EA. So let me delete what I wrote there, and I'm going to type exactly the same thing. And sure enough, 19 EA, anytime I type exactly the same thing here, I get exactly the same hash out of it. In that sense, the SHA 256 hash is a digital fingerprint of whatever data I put in here. Now, I could put nothing. I could put lots of data. And you'll see every time I'm typing a key, this is changing. You get the idea that this can be calculated very, very quickly. But no matter how much orlando little I put up here, you're always going to get a SHA 256 hash, which is exactly this long. And importantly, you're not going to be able to go backwards. You're not going to be able to start with this and just intrinsically know what was put in to get it. You can't go in that direction, but it's super easy to go in the other direction. You can tell because that's how I type and it calculates it very quickly. So I could put anything in here, including, like, the Library of Congress, and it would always come out to a hash that's just that long. Okay. That's the critical piece of information. You can go one way very easily, and the other way is impossible, so."
    },
    {
        "speaker": "E",
        "text": "It only moves in one direction. And whether you type in one character or the entire Library of Congress, the hash always comes back the same lengthen."
    },
    {
        "speaker": "B",
        "text": "Right, right. And exactly the same. It will always be exactly the same. If you put in the Library of Congress in exactly the same order, you'll always get exactly the same thing out of it."
    },
    {
        "speaker": "E",
        "text": "And we should. This is real time actually happening. This isn't a demo, this isn't a video. This is actually the algorithm being calculated in real time as you see it on the screen."
    },
    {
        "speaker": "B",
        "text": "Yeah, there was, somebody had released a shaft 256 hash implementation in JavaScript, so I stole it to make this. That's how I did it. So, yeah, so that's a hash. Not very interesting, I guess, in the sense that I can just type stuff and know that I have the same thing that doesn't seem all that interesting. I'm going to make what I call a block out of this. Okay, so this, I mean, it looks very similar to what we were looking at before, but instead of one text area, now I've got three. I've got one that I call a block. We'll call this block number one. I have an entry here I call a nonce. We'll go into what that is later. And then just some data. You can type whatever data you want. But basically, this hash here, this SHA 256 hash, is the hash of the concatenation of all this data. So if you take all this stuff, put it together, you get that. Okay. Now, importantly, very importantly, this is an unusual hash because it starts with four zeros in a row and completely arbitrarily. I'm just going to say that that makes this block solved. What would happen, Ash, if I were to type something in this data area? What's going to happen to this hash?"
    },
    {
        "speaker": "E",
        "text": "Oh, that's going to change as soon as you start typing."
    },
    {
        "speaker": "B",
        "text": "Yeah. What's the chance that it's going to start with zeros?"
    },
    {
        "speaker": "E",
        "text": "Well, probably 10,000 to one, I guess, right?"
    },
    {
        "speaker": "B",
        "text": "Yeah, exactly. It's probably not. So if I type something, it's going to violate what I call a hash, a solved block. So I'm going to type something, and sure enough, it turns reddish, meaning this is not solved. So how could we solve this block? I could go here and I could put a number. See, this is my non serum. Told you. We get back to this gives me a field that I can change that doesn't really affect anything else. I put a one there. Does it start with four zeros? No. Well, let's try two. Well, let's try three. As I'm going here, I'm looking for one that starts with four zeros. You can tell I'm not getting it. So what we're doing right here is we're mining. Now, I bet you wonder what this mine button does, right? Well, literally what it does is it starts at one, just like what I was doing, but goes all the way up and does it automatically. And this is literally mining. So I'm going to hit mine, and there it's thinking for a little bit. And it's going from starting from one, and it's going to go up to whatever number it needs to get to to find a block that hashes out to something starting with four zeros. My computer was taking a little bit of time for it, but there we go. Had I gone all the way up to 71,000, whatever, I eventually would have run across a hash that starts with four zeros. What I'm demonstrating here is we have a block, and we have done some work to satisfy what is essentially an arbitrary definition of what a solved block is. And that is that it starts with four zeros."
    },
    {
        "speaker": "D",
        "text": "Hey, everyone, we're going to take a quick pause and hear a word from our partners. We'll be right back."
    },
    {
        "speaker": "E",
        "text": "Right, so that's it. One of the things that I find really interesting about this is the way that you have this divided up. You have a block, you have a nonce, you have the data, and then you have the hash. It's almost a kind of an arbitrary division from the perspective of mining. But what makes the nonce, as I understand it, so important is that you segregate the data out, kind of as the payload. You could think of it as perhaps an envelope, and it's the thing inside. And then you calculate the series of numbers going through them, iterating through one by one, until you solve for the hash that meets the criteria that we're looking for, which, in this case, is four leading zeros."
    },
    {
        "speaker": "B",
        "text": "Yep. Yep. That's exactly right. Yeah. Okay, so then, to move on, let me ask you what is. So, this is a block. What's a block chain?"
    },
    {
        "speaker": "E",
        "text": "Well, I have the benefit of having gone through your demo over a series of years, but it has to do with the way these are chained together. So show us a little bit about how that works, because I think this is really just the incredible. Aha. Moment that many people will have when they're watching this video."
    },
    {
        "speaker": "B",
        "text": "Yeah. So this is how you chain blocks together. I'm just going to make a chain of. In this case here, I've got five blocks. These look just like what we were looking at before. But interestingly, I've added this previous. What is previous? Well, that number is. This number is the previous blocks hash. And this previous is this blocks hash. Everything else is exactly the same. If I change something here, it's going to break this block. But what were to happen? If I were to change something here, it's going to change this hash. But that gets copied up to here, we're going to have two broken blocks. Sure enough, that's what happens. You might say, well, that's not the end of the world. We could just remine it. I could mine these two. And then we would be fine. Well, as we saw, I'm going to fix that one. I'm going to go back one more, and I'm going to add some data here. Now we have three broken blocks. Now I'm going to say, well, if you were to mine it, I just hit mine there. And that thing is thinking. That one went relatively fast. I hit this one, that one's taking a little bit of time. And then this one, we could remind this blockchain, and it would be fine. It would satisfy our definition of what we call solved blocks in a chain. Right. But the problem is, the farther back we go, the more of these you would have to fix. So it takes time to mine each of the blocks of the farther back you go, the more of that work you have to do. Let's talk about this for a second. The work we're doing is literally the proof of work that you hear about in proof of work blockchains. This is the work that they're doing. We need some way to fix this. We have this problem because, okay, I did the work, but how are you going to know that I've altered this chain, that I've taken some data and I've changed it? Right. How do you know? Well, we can't really know. We just know we have a solved chain here. So what I'm going to do is I'm going to distribute this blockchain. Okay? So we've got exactly the same thing, five blocks. But this is in peer a. We also have a peer b, and there are five blocks in peer b. And here is peer c. Right. We have five blocks. Okay, now, how do we know? Let's say I were to change something. I'll go back in time and change this block, and I'm going to remind it. And let's say I'm mischievous. I shouldn't be doing this. I remind this block. Interesting. Takes a long time. And then I remind this block. Okay, so when this completes, I've got my altered chain. Right. This is a problem."
    },
    {
        "speaker": "E",
        "text": "It's an altered chain, but it satisfied the criteria that we arbitrarily decided was signed, which is those four leading zeros."
    },
    {
        "speaker": "B",
        "text": "It does, yeah. Yeah. But we need to be able to detect and that somebody has gone and maliciously changed something here. How do we know? Well, getting back to the hash, remember how it is a fingerprint of some data? Well, this is actually a fingerprint of all of the data in this chain, including the previous blocks, because the previous hashes are copied up. So literally, all I have to do is check this, right? AEF, ATF, whatever. Is that the same as e four b? No. And here's another one that claims it's e four b. Okay, so who's right? Well, democracy, right? We have this chain, peer a, that says it's something, and then two others that disagree. So the majority wins, and we just forget about this chain."
    },
    {
        "speaker": "E",
        "text": "Right."
    },
    {
        "speaker": "B",
        "text": "So all of that work that was done was thrown away, essentially."
    },
    {
        "speaker": "E",
        "text": "Yeah. And this is such an important point. People frequently ask when they're new to this space, well, how do I know? How can we know whether a particular computer that's telling us something on the blockchain and bitcoin, for example, is reliable? How do we know that people didn't kind of go in and tinker around with some of the transactions? And what you're seeing right here is a real time live demo showing how you can have multiple peers on a network, also called nodes, that have different ultimate hashes, which show that one chain has been changed. It's really fascinating. It's actually kind of a revolution in that for the first time in human history, you can generate trust in a way that's decentralized. It doesn't rely on a single centralized actor, a big bank, the Federal Reserve, to say, this is the source of truth. You can see it democratically happening in real time in this demo. And I think that's just fascinating."
    },
    {
        "speaker": "B",
        "text": "Yeah. So I should also note, though, that this is a very simplistic blockchain. Right. We have five blocks here right now. The bitcoin blockchain is something like 680,000 blocks long. So if you were to, like, one way to compare all the chains would be to literally lay out 600,000 blocks and check the first one. Is this one the same? Yes. Is this next one the same? Yes. Next one the same. Or you could just go to the last hash and realize that that is a fingerprint of that entire chain and compare it against any of the others. So the blockchain can get arbitrarily long, billions, trillions of blocks long. And it will all always boil down to something that's this long and no longer."
    },
    {
        "speaker": "E",
        "text": "It's so."
    },
    {
        "speaker": "B",
        "text": "It's super easy to. Yeah, it's elegant. I mean, it's super easy to just instantly check literally terabytes of data. Petabytes of data in one number. It's. It's pretty neat."
    },
    {
        "speaker": "E",
        "text": "Elegant is a word that comes up over and over again when you hear people who really understand the math, such as yourself, for how this works. I should say if you've heard the term merkle tree. I know it's a lot of complex cryptography and math behind it, but this is really the basis for basically how you can take a hash, of a hash, of a hash, and aggregate it so that at the end you can just look at one number and know that the entire chain is authentic."
    },
    {
        "speaker": "B",
        "text": "Yeah, and that's actually a really interesting point. Right. We know that the chain is authentic or not. We don't know what change was made, but it doesn't matter. The only thing you care about is that you have the authentic one. If there has been a change, it doesn't matter what the change was. We're going to drop it. A hash gives you a real easy way to do that. Now, we've got a problem with this blockchain here. This is a blockchain and it's got some data area. I can type whatever I want. Who cares? This is not valuable information. I'm trying to save the letter a. That's not great. Let's do something about that. Instead of that data area, what im going to do. And this is a blockchain just like we were looking at before, five blocks long. But the data area ive replaced with what im calling transactions. This is just some amount going from some person to someone else. So its transfers."
    },
    {
        "speaker": "E",
        "text": "And there you have it. Now youve got a ledger."
    },
    {
        "speaker": "B",
        "text": "Thats right. Yeah. But importantly, this is a ledger of transactions, not a ledger of balances. We are not saying John's balances, whatever. We're just saying that some amount of money was sent from one person to another."
    },
    {
        "speaker": "E",
        "text": "Right. And this is such a key concept, I think for people who think about traditional accountancy, this isn't a stock value, it's a flow variable. It's talking about what's just happened in terms of a transfer. And this is a really, also, I think, deeply fascinating and pivotal point in how blockchains work."
    },
    {
        "speaker": "B",
        "text": "Yeah, these are showing changes of state. Okay. It turns out computers are really good at calculating numbers very quickly. So if we were to save the balances here, it would really be duplicate information. We can just say everyone had nothing to start with and then they got this money through transfers. So that's how this goes. And let me just to nail the point home. This is 2700 some amount of dollars. If I were to change that, it's going to break the block. And this is very, very important. Even if I were to change literally one penny, if I were to make this $0.64, it's going to break the blocks. That's very important. And now, remember, we also have peer b and c, the whole. The same thing we had before. So we're going to essentially democratically figure out what the authoritative chain is just by checking who has what and counting up the pointing to the one that has the majority as essentially the winner. But I've got a problem in my little system here. I don't know if you can find it easily or not. Any ideas?"
    },
    {
        "speaker": "D",
        "text": "Hey, everyone, we're going to take another quick break and hear a word from our partners. We'll be right back to the real vision crypto daily briefing."
    },
    {
        "speaker": "E",
        "text": "All right, I think I see it, but walk us through."
    },
    {
        "speaker": "B",
        "text": "Okay, so where does money come from? Right. How do I know that Rick here has $62 to give to Ilsa? How do I know that this much money is in this guy's account for that person? By the way, I don't know if you know all these names. These all come from a movie. If you know what movie that is, you get extra points."
    },
    {
        "speaker": "E",
        "text": "Oh, is it Casablanca?"
    },
    {
        "speaker": "B",
        "text": "It's Casablanca. That's right. Yeah. Each one of these are different sort of movies. So the interesting thing here is we have no way of knowing, like, money just appears. The money is just moving around. That's great. But we can't just have unconstrained. I can't just say somebody I make up gives Anders a million dollars. That sounds like a great idea, but it's probably not good in an economic system. So we have to have a way to get money into this system. Okay. And so in order to do this, we are going to use what we will call a coinbase transaction. And we'll zip forward to five here. Okay, so I'm just going to add a new transaction at the top of the transaction stack called a coinbase. And regularly, every one block, I'm going to release $100 to someone who. Well, this happens to go to the person that has mined this block first. Now we have a regular transmission of money. I create money in the coinbase so it's controlled and it's always going to go to someone. And then those people can then transfer the money. So let's go back to the beginning of this chain. The first block here has a $100 coinbase transaction. Goes to me. I happen to have created this block. I happen to have solve this block, but there are no transactions because nobody has any money to send to anyone. So there's just no transactions. Now, the second block, you'll notice that I'm the only one sending money. It's all honors, honders. Anders, because the money. I'm the only one who has money in the system at this point. And if you add these up, you'll notice that they don't go over $100. Okay. So it's just some basic economic truths that you want to have trust in. Right. So that'll be the economic role of this system. So now, as I go forward and you'll see that there are different people money is going from, you'll notice that they were all given money previously, and the amount of money that they're sending is not more than what they got. If you sit here and you kind of go through all of them, you'll notice it does actually work. And we have an economic system here where transactions are recorded indelibly. Like, if I were to change any, if I tried to change the person's name, it's going to break the block. They're recorded indelibly across a bunch of peers. There's peer b, and there's a. There's a bunch of peers out there, and we're all agreeing on the flow of funds."
    },
    {
        "speaker": "E",
        "text": "It's interesting because most people have heard the term coinbase, obviously, because of the exchange. And now you see where that came from. And when you scroll back all the way to the first transaction, this is the genesis block. This is the creation of the chain that you're seeing here."
    },
    {
        "speaker": "B",
        "text": "Yeah, that's right. And you'll notice there is no previous. So we have this fake all zeros hash that we've put in. Yeah, exactly. This is the genesis block. And a matter of fact, in the code, what you do is you create the first block and you say, okay, this is the official first block. This is the hash of the first block. In that sense, the first block in public blockchains is very important because you base what you're going to follow on that. But that's all hard set in the code by the time you get it. Right? Yeah. So remember I said that there were two cryptographic operations that you kind of had to have a sort of a feel for. There is another one that we're going to jump into here. Now, all of what we've seen so far has just relied on this one way function called a hash. We have an issue, though. What if I don't want to put my name or my identity or something there? I want to step away from that somehow. Okay. So the other cryptographic primitive that I want to introduce is this concept of public and private key pairs. Okay. And I'm going to be slightly hand wavy on the math behind this. But I will show you the truth that it allows. So this is a private key. Okay, it's pretty long one. And from this private key is derived a public key. Okay, this is many digits long, right. But you could be anything. The one is a private key. It's not a very good one because other people have thought of one before, right. You can just type whatever you want. And that's also a private key. It's probably not great because humans aren't very good at coming up with randomness. That's why I put this little random button. I can press this random button a bunch of times and get some value for my private key. Now, a private key is literally just a number, as the name would suggest, though. It's a number that you want to keep private. You don't want to ever tell anyone this number. This would be like your email password. You don't want to tell people your email password. However, from this private key, I derive this public key. And as the name would suggest, this is public. Like my email address. I would want to give you my email address. So the math behind this, as I say, you have to take it on faith that that actually works. But let me show you what this allows us to do."
    },
    {
        "speaker": "E",
        "text": "Let me just add also that the public key that you're looking at, you see letters and numbers in it, but that's really just a number. It's just represented in hexadecimal base 16. The short, simple version of it is you can put more digits, more representations of numbers into a shorter space. So what you're looking at at the top and what you're looking at the bottom are both just numbers, just expressed in a slightly different way."
    },
    {
        "speaker": "B",
        "text": "Yeah, that's exactly right. Great point. These numbers can literally be hundreds of digits long. So you want to compress them if you can, so you can see them. Let's look at the way that this public private key pair can be used. What I'm going to do is I'm going to make a message. Hello there. Just some message. And this could be something that I just want to prove the authenticity of. Nobody really cares about. Hello there. But we'll use it. Here's my private key. This is copied from that last screen, three, seven, a, whatever it is. This is my private key. And I am going to, using this private key, run it through some math that spits out a message signature. Now don't get confused about the SHA 256 hash thing. This is a signature of this data, but it requires the original message to be exactly the same. And something else. We'll see what that is. I flip over to my little verify screen and I take my exact same message. And now the public key. So this is something that anyone out there on the Internet can do. We can take the message that you've posted and we can take your public key, which you've told the world about, and then you can send along the signature that we just made, and you can run an operation called verify. And sure enough, that verifies."
    },
    {
        "speaker": "E",
        "text": "You create a message, you sign it with your private key, and then you post that digital signature. And then anyone who has your public key, which is posted for everyone to read, can verify that you in fact are the person who sent the message and that it hasn't been tampered with or modified in any way."
    },
    {
        "speaker": "B",
        "text": "That's exactly right. But only by using your public key. They don't have to use your private key to figure that out. And that is the core piece that the public private key pair enables you to do. So. As long as I haven't leaked my private key, you have high confidence. Well, I'll just say you have absolute confidence that someone in possession of the private key, presumably me, has signed this message. So now if I alter the message and hit verify, it's not going to work, right? I'll fix that. If I alter the signature, I'll make that a four. That won't work. So you get the idea, if anything is out of place, it's going to notice that. Now here is how we're going to bring this into our blockchain. What I'm going to do is instead of the message being I typed hello there. Instead of that, I'm going to say the message is a transaction. So it's literally like I'm saying, $20 goes from some public key, mine, to some other public key, yours. Okay? And I am using my private key. It's the private key behind my public key. I will use this private key to sign this message, which is just the concatenation of these three things up here. So I'm going to hit sign and I get some message signature there. Great. Now how do you know that you got paid, right? Well, you verify, so I'm giving you the message. It says $20 is going from my public key to your public key. You already have my public key because it's in the message. All you need to do is check this stuff against the signature that I've also attached and you'll find out that it works. Now, you could just steal, you know, $100 from me, right? No, you can't. I pose the transaction that I want to send, I sign it, and then it's valid. Okay? So if we were now to take this concept and place it on the blockchain, suddenly we don't have that problem where it says, anders got this amount of money and transferred it to ash or whomever. So let's look at block number five here again. So it's got some kind of a nonce. And here we are the same. This is getting kind of folded over a little bit. But you see that this is a coinbase transaction to some public key. Whose is that? I don't know. Can that one person have many public keys? Yes. So this is a set of transactions that are being posed from some public key to some other private key. And importantly, also in the blockchain, I'm adding the signature. That proves that I did that. Watch what happens if I change this to $8. Of course it breaks the block. The block is no longer valid. But also notice the signature is red. The signature doesn't check out anymore. We have multiple things we can check for correctness in these blocks to make sure that the money flows properly. This gets to the bitcoin concept of a pseudonymous blockchain. So we're moving money around between public keys, and we're just requiring that the people behind them have signed the transactions correctly. And if somebody goes in there and tries to change seven dollars to eight dollars, it's not going to work. It's going to break. So only the people that have the money are allowed to will create a signature that will be accepted. Will create a transaction that will be accepted. So in that sense, this whole system operates as a push, you know, a push financial system. People that have money may push it to others. And importantly, all you have is a private key. All you have is the permission to push the money. You actually don't really have the money. It's just that no one else can push it but you. So that's. That's. So that's sort of the other way to think about it. Now, one last thing. And then. And then. And then I'm done here. But there is. We do have a little bit of a problem. And that is, if you give me $7, you could just take the original signature and repose exactly the same transaction again and again and again. And you would keep getting $7. And you'll notice that that's what I've done. I've got $7 here and then $7 here to the same keys. Well, what I've also added to this is a sequence number. And I'm going to require that the sequence number is always unique, always stepping up by one. So the sequence number over here is two. That makes this signature actually different than this one. So you can't just replay the same transaction over and over. So that's a blockchain. You didn't have to learn about encryption. There is no encryption. It's just two cryptographic primitives. A ShA 256 hash, and the public and private key pair with signing. So that's how blockchains work internally. This is a bit of a demo. I don't have many, many nodes. I'm doing very simple mining. You're seeing, we were looking at four zeros in bitcoin. That's 10, 15, 18 zeros in a row. These are not numbers that you can come by easily. It's not really going to compute on my laptop. This is somewhat of a toy blockchain. Also, the bitcoin blockchain uses Utxos, which is my little example here, is more like an account model. There are some. You can definitely dive deeper than this, but I don't think those differences are quite as important as highlighting these. So that's how I got to it."
    },
    {
        "speaker": "E",
        "text": "Yeah, I mean, the extraordinary thing about this is you can build up an understanding of how this works, block by block, pun not intended, as you walk through this demo. And the really incredible thing about it, Anders, is you've created this. You wrote this demo. It's now out there on the Internet. Anyone can go up and play with it and do exactly what you did by changing transactions, entering values, and actually see, physically touch how it works and go through those steps just as you did."
    },
    {
        "speaker": "B",
        "text": "Yeah, this is actually up on my website. You can just go there and try messing around and changing numbers and seeing things break and stuff like that. This is all available, actually open sourced, the data and the code behind this, and a bunch of people have translated it to a bunch of different languages. But the origin story of this thing is, I think, interesting. Back in 2014, MIT asked me to teach this class, and it happened to be starting in two weeks. And, oh, by the way, we don't really have a syllabus yet, so would you do it? And so I said, first, yes. And then I just stayed up all night trying to figure this out. When I was done with teaching that semester, I didn't feel like I actually transferred the information appropriately. So I started working on this demo. I ended up presenting it at the Federal Reserve bank. Of Boston, strangely enough, at a hub week demo. And I honed it over time at Yale and a lot of classes at MIT, a lot in the Sloan school. And eventually I got it to a point where I could actually just explain just the important points. It took about two years, and then I was in my kitchen, and I recorded it on my imac as a movie, and I thought, I should put this on YouTube. So I did, and I wasn't really quite prepared for the response, but it just kind of has an interesting backstory to it."
    },
    {
        "speaker": "E",
        "text": "Yeah, you got over a million views of this, which is pretty extraordinary."
    },
    {
        "speaker": "B",
        "text": "Yeah, I don't know where that came from. It just trended. I think it was on hacker News one day, and it just kind of took off from there."
    },
    {
        "speaker": "E",
        "text": "By the way, I should say I was absolutely mesmerized the first time I saw this, but I didn't fully understand it. It took me days and I think weeks of going and watching the video again and again. And that's pretty. The amazing thing about video, I think, is you can see something and be like, wow, that's really cool. But I don't quite understand it. And you watch it two or three times, and somehow, almost magically, you know, by the fifth or 6th time you watch it, or the second or third time, if you're a lot smarter than I am, you go, I kind of get this. It's pretty amazing."
    },
    {
        "speaker": "B",
        "text": "Did you ever mess with the demo on the web at all, or was it just video?"
    },
    {
        "speaker": "E",
        "text": "Oh, yeah, absolutely. I went back and forth between watching the video and going out the demo, experimenting, doing your data, watching the video again. And slowly but surely, after I kept playing with both, it started to sink in, and you have these little kind of epiphany moments. And then what was interesting is I would understand it while I was watching it, and then I'd try and explain to someone, because I was so excited, and I'd get completely goofed up and realized, nope, I got to go back and watch it again. It definitely takes time. These are some really, really big ideas, and some of the smartest people in the world, some of the smartest people in finance have struggled to get their heads around this."
    },
    {
        "speaker": "B",
        "text": "Yeah, it's one of those things that it's really basically a complete rethink. This doesn't come out of a computer science program. It's very multidisciplinary. There's economics, there's basic human greed, there's cryptographic stuff, and it's all put together in an very interesting and unique way. And it requires you to deep dive. Everybody says, how'd you go down the rabbit hole? You have to go down the rabbit hole. You cannot just take it all on faith that this stuff works, because you won't understand why we can be completely confident that the history has not been changed. This is why we can completely be comfortable, or to some degree, in defi and how smart contracts work, because they're just written literally right into the blockchain. So you have confidence that they won't be altered. You don't have confidence that they don't have bugs, but you do have confidence that what has been written will not be altered."
    },
    {
        "speaker": "E",
        "text": "Right. I should say, for real vision subscribers, I actually did a deep dive on some of the underlying math that we're talking about here, talking about the power of randomness, how difficult it is to break these passwords with your former MIT colleague Silvio Macaulay. So if you're interested in the deep dive nerdiness on the math, please do go check out that video."
    },
    {
        "speaker": "B",
        "text": "Absolutely. It's really super fun stuff. It's captivated me for ten years at least, so I'm smitten."
    },
    {
        "speaker": "E",
        "text": "So, Anders, we've walked through this entire demo, end to end, both demos together for the first time ever. Really extraordinary work that you've done here. Give us some key takeaways for the audience, if you could, because this has obviously been a lot of information. What are some of the big picture things that people should leave this conversation with?"
    },
    {
        "speaker": "B",
        "text": "Well, my hope is that I haven't confused you. The technology is actually a bunch of very simple building blocks put together, and you can get it, you can understand the stuff. It is reachable. You don't have to delve into the deep math behind it, but it is reachable. It is just a complete rethink. So the important things are, I would argue that there is a new trust layer on the Internet enabled by these technologies, and that allows programmers to do really new and interesting things. But in order for you to have confidence about that, you kind of have to have a seat of the pants feel for, like, this is why I am confident that this information won't change or something won't just be swapped out from under me. It's both an economic system in the sense that my miners out there on the network are being incented by receiving that coinbase transaction in some networks fees as well, to create these blocks. And if someone decides to go rogue, they essentially risk wasting all of their resources to create an alternate view of the universe that nobody follows. So it's a network effect kind of a thing. The more you get, the more nodes there are, the more hashing power you have. Just trying to find that needle in the haystack nonce that makes that block solved. The more that there is, the more confident you are that this is not going to be subverted out from under you. So, yeah, those are the takeaways, I think."
    },
    {
        "speaker": "E",
        "text": "Yeah, you were saying earlier, this idea that it's a multidisciplinary approach. One of the things that's so interesting about this to me is how it just builds on layer after layer of technology. Know the underlying TCP IP that runs the Internet. Obviously you need that as the very base of your stack. But also the kind of peer to peer aspect of this. It's really interesting, we think about the music sharing software that came out in, I guess it was the late nineties now, hard to believe so long ago, but that idea that you have different peers on a network that can interact with each other and then you build layer upon layer until you get this incredible system in the form of bitcoin and some of the other coins that we have out there all based on these technologies like TCP IP and the peer to peer network of Napster, public key cryptography. It's just such a fascinating agglomeration of things put together. And what you have at the end is the ability to share value, to share money, financial transactions across the web, globally, in a trustless way."
    },
    {
        "speaker": "B",
        "text": "Yeah, I think that the word is elegant and this is why it's so captivating. You sit there and look at this and you think these completely disparate cryptographic things create this just this elegant thing that hangs together and gives you this brand new capability that this is a new sort of a primitive that we haven't had as programmers more than ten or twelve years. So it's quite compelling."
    },
    {
        "speaker": "E",
        "text": "Yeah, well, if you're anything like me, I certainly didn't get it the first time I went and watched the video. So please feel free to watch again and again. And by the way, I should say if you have friends and family who you've tried to explain this concept to, but gotten caught up as I have, you start to get into it and you go, oh, wait a minute, maybe that's not quite right. Please share this video so we can get Anders great work out to as many people as possible so that we can share the understanding and the passion that I and you and so many others have for this technology."
    },
    {
        "speaker": "B",
        "text": "Yeah, thank you. Please do. Don't get lost in the weeds. Nobody likes somebody trying to explain something. If they're lost in the weeds, I get lost in the weeds too much. So hopefully it helps."
    },
    {
        "speaker": "E",
        "text": "Anders, thank you so much for joining us. I wanted to do this conversation for years and I'm just so excited to get this information, this demo that you created out to the world, to an even broader audience than the millions you've already had see this work."
    },
    {
        "speaker": "B",
        "text": "Well, my pleasure and thanks for distributing it. I think it's very fundamental stuff we all should be aware of."
    },
    {
        "speaker": "E",
        "text": "Thanks for joining us and thank you for watching everyone. I hope you enjoyed Andrew's work a 10th as much as I have."
    },
    {
        "speaker": "B",
        "text": "Thanks a lot, Ash."
    },
    {
        "speaker": "C",
        "text": "It's been a couple of years since I watched this, but God, it just blows my mind every time. It really speaks to how some of these, these technologies really have to be seen on the base layer to understand what were your key takeaways from it."
    },
    {
        "speaker": "D",
        "text": "Well, thats exactly right, Nico. You said it perfectly there. You have to really see it at the base layer to understand how it works. And I think once you understand how it works, it gives you a sense of how this is truly a decentralized technology that drives things in a way that doesnt require governments, centralized institutions, corporations to come to that consensus, to come to that trust layer. Uh, you know, my biggest key takeaway on this was if you didn't get it all the first time, don't worry, I didn't either. I think I had to watch it three, four, five times before I really understood it. But just the first time there was this kind of like mind melt effect where you get this sense of, oh man, this is something that's just incredibly powerful. So I would advise if you didn't understand it, go back, watch it again. There's certainly no shame in it. God knows I did it."
    },
    {
        "speaker": "C",
        "text": "Absolutely. And it really is interesting because everything else we've talked about on this Friday series of asking for a friend relies on this base layer we just saw. So thank you so much, Ash. We'll see you next Friday for another episode of asking for a friend. And we'll be back next Monday with our regular scheduled interviews. Thank you for watching, everybody."
    },
    {
        "speaker": "E",
        "text": "What's up revolutionaries? Thanks for tuning in. For more content like this, head over to realvision.com and get unfiltered access to the very best, brightest and biggest names in finance."
    }
]