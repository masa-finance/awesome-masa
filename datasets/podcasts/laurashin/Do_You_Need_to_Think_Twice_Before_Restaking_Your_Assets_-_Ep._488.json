[
    {
        "speaker": "A",
        "text": "Hi everyone. Welcome to Unchained, your no hype resource for all things crypto. I'm your host, Laura Shin, author of the Cryptopians. I started covering Crypto seven years ago and, as a senior editor at Forbes, was the first mainstream media reporter to cover cryptocurrency full time. This is the May 2, 2023 episode of Unchained. If you've been enjoying Unchained, please leave us a review wherever you listen to the podcasts or share this episode with a friend. Buy, trade, and spend crypto on the crypto.com app. New users can enjoy zero credit card fees on crypto purchases in the first seven days. Download the Crypto.com app and get $25 with the code Lora link in the description. Hey unchained listeners. As you know, it's hard keeping up with a fast paced world of crypto, so we've got just the thing for you. Subscribe to our free Unchained daily newsletter at unchainedcrypto dot substack.com. you'll get the latest crypto news and original articles from our reporters, as well as summaries of other happenings and bullet points, plus our meme of the day, all curated and written by our amazing team. It's still your no hype resource for all things crypto, just in newsletter form. Sign up at unchainedcrypto dot substack.com. again, the URL is unchainedcrypto dot substack.com. today's topic is staking and restaking on Ethereum. Here to discuss are Sri Ramkhanan, founder of Eigenlayer, and Konstantin Lomaszukhdev, co founder of P two P.org and Lido. Welcome Sriram and Constantine."
    },
    {
        "speaker": "B",
        "text": "Hi Laura, pleasure to be here."
    },
    {
        "speaker": "C",
        "text": "Hi Laura."
    },
    {
        "speaker": "A",
        "text": "We are coming off a successful completion of Ethereum's transition to proof of stake, and that was through the successful Shanghai upgrade, which enabled withdrawals of staked ether. How would you each characterize the current staking landscape today? What are the main issues and what are the next developments you think are necessary? Why don't we start with you, Sriram?"
    },
    {
        "speaker": "D",
        "text": "It's been super exciting to see both the merge and withdrawals enabled. Now, Ethereum is a complete system for all practical purposes. Anything you want, you can do on this system. I'm quite excited about both the merge and the withdrawals because now I think from our point of view, what it does is you can now build general purpose systems on top of Ethereum because staking, which allows for both positive and negative penalties to be built on top and a general purpose programming language, which is the EVM come together. And so I think we have this fusion of like two superpowers. One is the incentive mechanism and the programming ability. That's something I'm excited about. And I think there are a lot of very interesting developments happening in the staking space, liquid staking to begin with, and then DVT, which enables many, many validators to come together and participate in it. And I'm sorry, DVT distributed validator technology, which is basically the idea that many nodes can work together and act as a single unit as far as Ethereum is concerned. But inside that unit, actually there is like many nodes which are working together in a union. So it's like taking a single validator in Ethereum, which requires 32 ETH, which may be a lot of money for many people to participate, and then further democratizing this, the idea that many people put in maybe one ETH and 32 of them form a group, and then they can all like, from the Ethereum's point of view, they look like one node having 32 ETH, and they all come to consensus on everything. So these are like really fascinating developments, both liquid staking and DVT. And I think, I would like to think that Eigen layer or restaking is in this category of really interesting things. Because now with something like Eigen layer, what you can do is use the security of Ethereum and the power that these staking protocols bring to supply it very flexibly to any kind of new protocol that can then be built on top of it. So that's what I'm very excited about."
    },
    {
        "speaker": "C",
        "text": "Yeah. First of all, you know, like, I want to congrats everyone, you know, like who participated in it. It's like developers, core developers, it is tools developers, it's clients developers, you know, like, and you know, like this, I mean, like it took about two and a half years. So like Beacon chain launch in December of 2020 and you don't like, and withdrawals is like finish the slope of upgrade when all flow of staking, almost all flow of staking is working right now. And this is exciting for all ethereum community and everyone who believe in trustless virtual machines that can work in the Internet. But still, your question was about challenges and also not only good things, but also we have still a lot of issues. I mean, one is like a decentralization. This is an issue in staking. And the question how this network can be even more decentralized. Second is white labeling. It's a lot of nodes who use different brands, but running by the same people. It's still, you know, like Mev issues, you know, like that still here. One of the things that can make liquid staking better and other staking products better when withdrawals can be initiated by users who staked, because for now it's impossible and only validators can unstake. But this still a lot, and it's a lot of work, what was achieved, it's really great and how it's happened without any big issues. So congrats everyone."
    },
    {
        "speaker": "A",
        "text": "So I think now that we've made this full transition to this system, there's a lot of thought around different things that can happen using stake. And obviously, like with Lido, that was one of the early new ideas around what could be done with that. But I actually want to start this part of the discussion talking about Eigen layer, because there has been a lot of chat about it. And so sriram, why don't you just give us an explanation of what it is."
    },
    {
        "speaker": "D",
        "text": "Yes, just starting with the name Eigen layer. Eigen in German for your own. It's your own layer. You can build anything on top of ethereum security. So if you look at the evolution of Ethereum, when Ethereum started, the majority jump was the idea that anybody can build an application and tether it to a common security zone. Of course, the technical thing that was done in Ethereum was to create a general purpose programming language. But I think the fundamental innovation is not that the fundamental innovation is creating a shared security marketplace. The idea that there is a common shared security pool like Ethereum nodes, can actually validate any application that can be built on top. I like to think of this as kind of like the first modular blockchain. So it basically modularized the idea of application as distinct from the trust zone, which is Ethereum. And when you see the evolution going forward, you see from there successful opening up of the innovation landscape. And I think layer tools are a major paradigm shift there. The idea is now that not only you can write an application and tether it on top of this evm virtual machine, but you can have a whole chain which you validate yourself and then prove that the chain was validated correctly back to Ethereum. This was the layer two landscape which broadened the scope of Ethereum. I think the underlying ethos there is really actually inspiring that Ethereum took this step. It's a leap of faith to take because you come in and say, now it's not ethereum running everything. Nothing is running natively on layer one. All these layer twos are going to run it. And it requires an immense faith in the power of free markets and open innovation to actually take that leap. And many of us thought that this is a pretty crazy leap of faith to take. But actually this paid off massively because you have these absolutely powerhouse projects which are now built on top of this one framework which would never have been possible if it was only Ethereum and one protocol and there's an enshrined sharding or whatever other techniques. This is just much better. So I think that's the second step. And I think the way we envision Eigen layer is as even broadening of the innovation landscape. So what cannot be built with just layer tools today can be built with eigen layer."
    },
    {
        "speaker": "B",
        "text": "So what is the idea?"
    },
    {
        "speaker": "D",
        "text": "The idea is the root of trust of Ethereum is coming from staking, you're putting down stake and you're saying that you're validating Ethereum blocks correctly."
    },
    {
        "speaker": "B",
        "text": "So that is the root of trust."
    },
    {
        "speaker": "D",
        "text": "If we can take this root of trust and supply it to anybody who wants to build, let's say, a new consensus protocol, I want to build a new consensus protocol, I want to build a new oracle, I want to build a new data availability, I want to build a new bridge, I want to build a new MEV management system, anything, and then say that hey, already I have a root of trust here. Like people are staking and then making commitments that they're going to make Ethereum blocks correctly. And what Eigen layer does is ask the staker if they want to opt into Eigen layer. I'll explain later the technical details of how you opt in, but when you're opting into Eigen layer, essentially what you're doing is you're saying, I'm not only validating Ethereum blocks, now I'm validating potentially new services built on top of Eigen layer. The services could be any of the things that I mentioned, new chains, oracles, data availability, data storage, anything that you can think of which requires end nodes to do the calculation. So now you opt in to such a system. And when you opt into Eigen layer, what you have to do is you have to download and run whatever other software. So in addition to running your ETH node software, now you can run all these other node software. If you're running Eigen layer, you're not running all the services on top. You pick and choose which set of services you want to run on top. It's an opt in marketplace. And so now what it does is whenever you have a new idea for how to build a new distributed system, a new chain, a new oracle, any of these things. You don't have to go and find your own trust network. You can just come and avail of this massive existing trust network, Ethereum, and then just plug your system on top of it so you can have all of these services, ecosystem services for Ethereum, which are powered natively by Ethereum staking so that is the vision that we have. It's part of why we call it eigen layer. Anybody can build anything they want on top of this common framework. And we think Ethereum is the natural home for something like this, because Ethereum has shown again and again that it's committed to the principles that we're very passionate about, which is open innovation, credible neutrality, decentralization, censorship, resistance, all of these things. So that's what eigenvalues."
    },
    {
        "speaker": "A",
        "text": "Would it be fair to say that it's kind of similar to the Polkadot model where there's all these different parachains, but then they share security at the base layer? Because that's what came to mind for me."
    },
    {
        "speaker": "D",
        "text": "That is absolutely a reasonable comparison. So there are some dimensions where it's exactly the same in some dimensions where it's not the same. One dimension where the Polkadot model is different is Polkadot is not opt in. So everybody who is in the Polkadot relay chain will validate all the parachains. So there is a kind of enshrined mechanism. So there's no opt in there. That's one difference. The second difference is because it's not opt in. You cannot opt into arbitrary like slashing things. You're opting into a very narrow scope, which itself you can run basically any virtual machine, but you cannot run an oracle with Polkadot security. You cannot run a new distributed storage protocol with Polkadot security. You cannot run a new consensus protocol with Polkadot security. So there is some constraint. I would compare the Polkadot parachain model much more to the layer two paradigm. So in layer twos borrow exactly Ethereum security, but only for running new virtual machines. But it's a more enshrined mechanism for doing it, whereas Eigen layer is much, much more flexible. Any distributed system you can think of, you can just run it there and you could borrow aspects of Ethereum security, and sometimes you will borrow a subset of Ethereum security, but sometimes this is something insane. You can borrow a superset of Ethereum security and I can come talk about that later."
    },
    {
        "speaker": "A",
        "text": "Okay, I'm going to put a note to myself to ask you about that later because one other comment that I want to make is I sort of feel like Lido is a way to reuse stake for the user, but Eigen layer is a way to reuse stake for developers, something like that. Does that make sense?"
    },
    {
        "speaker": "D",
        "text": "Yeah, I don't know. We are definitely doing complementary things and I think I have like one point of view there, but I'm sure Constantine has some interesting thoughts there."
    },
    {
        "speaker": "A",
        "text": "Yeah, Constantine, what do you think?"
    },
    {
        "speaker": "C",
        "text": "Yeah, first of all, I should make a disclosure that I am investor in angular because, but I will still challenge, you know, like Sriram to make it more interesting. Yeah, first of all, you know, like we should not forget about risk. You know, like when you run Ethereum, it is a risk of flashing. When you start to run other protocols, it's also like adding you additional risk. And my thinking here that what is Eigen layer doing is like restaking feature. Yes. So like some type of, for example, large protocols can do restaking by themselves. Know, for example, I don't know, we can imagine that TK sync or like second, where they can just use withdrawals or ask users to give withdrawals from their validation nodes to them straight and do it. But for smaller protocols, you know, like, and also like for big tail and also for some big one, eigenware is the best solution. Can be the best solution. Why? Because they make a marketplace around that. So you don't need to like bring additional stake and work with their stakers. You can just, you know, like use the marketplace and in case of staked ethereum, I think that it can be used inside of Eigen layer. So you can not use ease. You can use stake tease for example. And also, you know, like you can also it can be an option that Lidar can make any type of integration with eigen layer more deep or it can make straight with other protocols. Restaking is a mechanic how you can take more risk. But don't forget, when you get money for something, when you get rewards, for example, for doing job, you get additional risk and nothing is free."
    },
    {
        "speaker": "A",
        "text": "So Constantine, what are some of the risks that you're thinking of for different types of projects or chains that are thinking about using restaking for security?"
    },
    {
        "speaker": "C",
        "text": "Yeah, first of all, you know, like staking has, I mean what is staking? Staking is a mechanic where person or like protocol lock capital for some time and do some job, you know, like for example running a node of Ethereum protocol and then get some risk because, and get rewards, you know, like and all these things are usually important. Yes, and in case of Ethereum, the risk is flashing or losing of rewards. And you can, if you, in some edge cases you can lose all your is when you stake your e's. Yes. And when you restake you add additional risk and it depends on the protocol, you know, for example, bridges has one type of risk, Oracles has another type of risk layer two s or like sequencers has another risk. So like."
    },
    {
        "speaker": "A",
        "text": "But can you give some examples of what those risks look like for those different types of projects?"
    },
    {
        "speaker": "C",
        "text": "Yeah, for example, if you secure some type of oracles or bridges or I mean, first of all, depends how like the protocol developers will pack it, for example, and what type of risk restaking will secure if this, for example, a buck of protocol maybe like restaking will not cover it. And the question is, who makes that decision if it is a risk? For example, you want to delegate risk of some type of bridges and bridge is exploited by some reason. For example, validators did this attack, then you can lose part of your capital if you put it under the risk and so on. The question is, when you get reward, you get for some job or for the risk. And if you get these rewards, the question is how to participate. I mean, in case of for example, eigen layer, the user will choose which protocols and which like operators who will run this nodes, you know, like we work with. Why? Because, and for example, they can try to use the most safest or the most bigger with most biggest reward."
    },
    {
        "speaker": "A",
        "text": "So Sriram, how would you respond to these concerns about risks?"
    },
    {
        "speaker": "B",
        "text": "No, these are real. The idea that basically, you know, I think Constantine stated already, what are you doing with staking and restaking is, we think of it just as making staking more programmable. So you're basically like now, normally when you're staking, you're subjecting yourself to Ethereum slashing risk, which is if you don't validate your blocks correctly, then, or there was a bug in the Ethereum protocol, as are of those two conditions, then you would lose your stake. So let's take the simple scenario where the code is all correct. I if under that circumstance actually the risk profile is only you lose money only if you didnt fulfill the conditions, the covenants of the Ethereum protocol correctly. So in some sense, I think while there is risk, the risk profile of validation is fundamentally different from Defi risk. So in DeFi, when youre putting your like stake teeth or any other token into like an LP, into Uniswap or a compound or any of these things, essentially you are underwriting price risk, the price can fluctuate. And price risk is exogenous. Like, you have nothing to say about it. You have no control on whether the price is going to go up ten x step or 10%. This is not something endogenous to the person who is putting the capital in. Whereas validation risk, if you assume the protocol code is correct, is endogenous. Like by doing more and more, like by running a distributed validator group, by basically making sure you're running better and better protocols, you can drastically reduce the risk. So I think validation is a different class of risk and defi is a different class of risk. So that's the first thing I want to say. Inside validation, you have like two aspects to risk. One is risk due to your own, you know, misbehavior, and the other is the risk due to protocol errors. And I think, but if you know how to do the operation for that protocol correctly, then basically you can very much minimize the first risk. And what remains is the second risk, which is that the protocol has an error. And so, you know, we try to think a lot about, like, how to minimize the stakers exposure to protocol errors. In fact, the way I think about like how liquid staking and something like Eigen layer are complementary. Is that liquid staking, the hardest thing that a protocol like Lido or rocket pool or any of these things have to do is to figure out how to imbue trust in the validators. Like, that is the hard part. For something like Eigen layer, we see the complement is the hard part. The compliment is how do you induce trust in a new distributed system, in a new distributed protocol? That is the hard part. And that is our specialty in some sense, is figuring out what is the protocol configuration, what is the slashing. And this is very, very particular to like, this is like a deep understanding of the distributed system and the slashing conditions that go into each of the distributed system. And you ask Constantine about, like, how would you think about risks in these different examples? I'll give a simple example. Let's say an oracle. You can build an oracle. So oracle is basically like a price, right? Let's say just, you want to report BTC to USD price on Ethereum, and you say, okay, I want to get the Ethereum nodes to participate in this. There are many different ways of building the oracle. Each of them lead to completely different kinds of validation risk. So I'll give three examples of actually how you can build an oracle. One example is you will get slashed if your price report is very different from the majority price. I say bitcoin. One bitcoin is like one USD, whereas most people are saying one bitcoin is 30,000 USD, then like, of course I'll get slashed. So this is one example of slashing for sure. Deviation from majority is one kind of slashing. Another kind of slashing is when you all vote on something, then you bring in a much more trusted group, which may be a DAO or reputed people in the community, whatever, some other thing. And if they say something different, then you could get slashed. So that's another kind of slashing. A third kind of system would have no slashing. It'll just take them, aggregate as many distinct opinions as possible, and then just present the majority opinion as like a price oracle. So these three systems have very, very different risk profiles. For example, in the first system, the risk profile is if you disagree with the majority, you would get slashed. What if a majority quoted one bitcoin as one USDA and you quoted one bitcoin as 30,000 USD? You are right, but you may still lose your fund. So the trust model is you are taking a risk on the majority opinion. The second model is you're taking a risk on the Dow opinion. Like the Dow says something and you disagree with the Dow, you may be right, then the Dow may be lying out of their teeth and you may lose your funds. So that's the second model, the third model, there is no slashing. So actually, so this exposes what I think Constantine was talking about earlier, which is risk is very nuanced when you're operating into new kinds of distributed systems and calibrating and understanding. This is one of the main roles we see for eigen layer is understanding how to build new distributed systems with proper slashing conditions, where you are not subjecting yourself to undue risk. But of course, it's an open market. We believe in permissionless innovation, where many people can come and build these things, and we try to balance how much openness we have with how much safety conscious we can be. And there may be like two tiers where one tier is more trusted and has been more vetted, and other tier is anybody can build anything, and there'll be different risk profiles on these kinds of. So that's absolutely how we think about it. There is a large category of things where you do not need to take undue risk, because validation risk, like I pointed out, is actually much more tightly constrained than something like Defi risk. And we think this would be the next frontier. So when you look at yield stacking like where do you get additional yield? You get yield from Ethereum. What is the next level of marginally additional risk that you can take that will actually give you productive value? I think that's where we want to place ourselves, is validation and all the things, and I think this is another thing we want to clarify, is we are not a DeFi protocol, we are not a liquid token. What Eigen layer is building is very different from what a liquid staking is building or what a DeFi protocols. So we do not envision on Eigen layer. The core feature is people set their withdrawal credential and then you borrow against, that's not what we are envisioning Eigen layer. What we're envisioning Eigen layer to be is a universal validation marketplace. Come here, you can participate and get validated for many, many different things. And it's a double opt in. Double opt in is staker has to opt into the service. The service has to opt into the staker. And both of them have their own subjective preferences which meet and merge to actually make the market. So it brings much more of a free market dynamic than what we have today."
    },
    {
        "speaker": "A",
        "text": "Oh wait, so now I understand. So sorry. When different projects decide that they want to use Eigen layer for their stake, then they also can select specific, specific validators. And they don't have to just use all the same validators as Ethereum."
    },
    {
        "speaker": "B",
        "text": "That is correct. And what I meant by like we had an asterisk earlier, which is sometimes you can get more security than Ethereum. That's a rather insane thing to say. Why would you think that? Because when one of the things that you may want is I only want like 1000 very decentralized nodes. Let's say this is some, some special use case. As an example, I do secret sharing. I take a secret, split it into small chunks and send it into thousand nodes. Now I really want to know that these thousand nodes don't collude with each other, otherwise the secret will be exposed. So what I'm doing is I want to find like, you know, thousand dispersed nodes. And maybe, you know, you select home stakers in Ethereum and I want to just send it to them because it's a very dispersed group, they're not coordinated."
    },
    {
        "speaker": "C",
        "text": "I have a question here. Yeah. Like how you will choose solo validators or home validators because it can be a data, but if you will use it for airdrops or like for some type of utility, I mean it will be, maybe it's already people who are running, you know, like thousand word nodes and using different ips, different data centers to, you know, like the same with airdrops, you know, like people are do like couple of people, I mean like running with thousands of accounts, you know, like in arbitrum, and then get these airdrops and nobody can understand because it's really difficult. And the same as these people even make KYC, for example, in different networks, like Solana, for example, they have a validation program, and Solana is delegating to unique validators, for example. But it's known information that it is some people who are running like 20 nodes for Solana and use different identities. And this is an issue. They just use maybe like all nodes or other white label service and cheat with KYC. And the question is how in permissionless sensitive resistance network choose the data that you can check."
    },
    {
        "speaker": "B",
        "text": "Yeah, this is a great question. I think Eigen layer itself does not take any position on who's more decentralized or who's less decent. Eigen layer is. We want to be a neutral platform. That's what Eigen layer is. On top of Eigen layer, we expect people will build more subjective services. One of the framework that we employ a lot when designing Eigen layer is a paradigm we call inter subjectivity. Inter subjectivity is the idea that there are like many, many subjective decisions as a consequence of many people interacting with each other, rather than the subjectivity being enforced by the platform. So the platform doesn't say, oh, lido is more centralized or less centralized, because in some sense it's more decentralized, in some sense it's less decentralized. And that is not a position for Eigen layer to take. But what we believe is that services building on top of Eigen layer can make that judgment. Each of them have their own judgment, their own ideas, and their own purposes. Somebody may say, I only want KYC validators, and that's up to them. Somebody may say, I only work geographically distributed validators. I don't care if it's the same guy running it all over the world. One of the services coming on top of Eigen layer is called a proof of location service. So, proof of location service lets the nodes kind of like use latency and other thing to kind of figure out, use the ethereum nodes to figure out the distribution, like the latencies and geographic distribution of other nodes. And so you can have very interesting protocols like this, which can offer services that other services may then rely on. There is no universal answer to this question. And just like each one has a subjective opinion on what is enough decentralization. That's exactly what we expect. And in fact there will be places where people don't want decentralization. So this is another important thing we need to understand is for some of the things you want, just economic trust, I just want like $5 billion off, like staking. That is all I care about. Because if that was wrong, I can slash the $5 billion. I don't care if it is one guy putting up $5 billion or like 5 million people putting up thousand dollar each. It makes no difference. There are protocols like that. And there will be protocols which don't care about economics, which care about decentralization. And there will be protocols which say that no us validators, okay, that's something that they want to use. They can use it. Some protocols will say, I want only us validators because I want to be under the jurisdictional compliance. I think all we want to do is to enhance the expressivity in the free market. And we think of ourselves as a marketplace for decentralized trust. And when you build a marketplace for a new thing which is not at a commodity, one of the things you want to do is to grade the commodity, either yourself or have other people grade it and use it subjectively. And as a protocol, we don't take the position of grading it. So we are uniform neutrality."
    },
    {
        "speaker": "D",
        "text": "We are neutral to the extent that."
    },
    {
        "speaker": "B",
        "text": "We accept all each staking. So that's the kind of scope of how we think about it."
    },
    {
        "speaker": "A",
        "text": "This is super interesting. It's like customizable security. I really like the concept. All right, so we're going to discuss a lot more about staking and security issues. But first, a quick word from the sponsors who make this show possible. Join over 80 million people using crypto.com dot one of the easiest places to buy, trade, and spend over 250 cryptocurrencies. With the crypto.com Visa card, you can spend your crypto anywhere and get rewarded at every step, up to 5% cashback instantly, plus 100% rebates for your Netflix and Spotify subscriptions. And zero annual fees. New users enjoy zero credit card fees on crypto purchases in their first seven days. Download the crypto.com app and get $25 with the code Lora link in the description. Back to my conversation with Sriram and Constantine. We talked a lot about restaking and I just want to fill out a little bit on the liquid staking side because there's different types of liquid staking as well. And I wondered also now with withdrawals enabled, what else is on the horizon? In the liquid staking arena. Constantine, can you take that?"
    },
    {
        "speaker": "C",
        "text": "Yeah. First of all, I think when withdrawal is available it is like first of all the market can be more competitive. Why? Because it's more for new liquid staking solution, for example, it's more easy to have some liquidity to withdraw from them, for example. And also another thing that still to build like decentralized network, to build healthy network you need features and some features are still not here. For example, like I mentioned about withdrawals that can be run by a smart contract or by the user initiated withdrawals and some others. Because I think that it is a lot of great developers who want to build liquid staking who already building liquid staking and they still have a lot of assumptions or like issues, not because they don't want to build a great product or like to build more decentralized product or to be more better product because it's just impossible because they depend on the protocol. I mean the withdrawals available, it's already like one, we have a couple more features and it will be more simple. Also I think that people will try to take more leverage and their chip ease landing will be how I mean finished. You know, like because if your is not staked or like if it's put on the lending protocol, people will take loan under the stake this and loan some ease and staked again. And so the lending price will go up and it will be like almost the same, you know, like depends on the risk again, because as I told you again, when you put in any defi protocol in any platform, it's always additional risk. And we still speak about risk more. And also I think that restaking will be available. This is also a great feature. And I mean that this is a bright future to first of all keep Ethereum remission less and censorship resistant. Because, you know, like Lidar for example, has a purpose and mission to keep like Ethereum permissionless and sensory persistent. If not lidar, someone else. That's great. You know, like the question is that what we need is like to keep Ethereum like because when you stake you get, I don't know, depends on like how much nodes, how much is staked and depends on how much transaction was done. You have about like 4% reward, for example, per year APR but that's how to say that's good for long term people who are really ready to commit to Ethereum security. But if for example, you make your network centralized, if you make it like permissioned and censored, for example by MeV or any other partner, you just disrupt the network, the value in what you believe for what you build and leak from that just state machine or like database. And what I try to say here is that all this development and mature of Ethereum protocol make more competition, more features and make it like so decentralized, unbelievable, you know, like and so great that an unstoppable and yeah, so like this is what's happening and really make everyone who is contributing, who is working on it happy."
    },
    {
        "speaker": "A",
        "text": "So, and then one thing that I was wondering when I was doing some research, because also there's talk of like super fluid staking. So can you just define that?"
    },
    {
        "speaker": "B",
        "text": "So superfluid staking is this idea that, so normally the way liquid staking works is you go to, you first go stake in Ethereum and then have a liquid staking derivative issued on top. Superfluid staking was an idea introduced in, I think to go in the reverse direction. First you stake in an application and then use that to stake in a protocol. And this was kind of popularized by osmosis where you can take a liquidity provisioning token and then go and stake that in the core protocol. Of course, we cannot do that on Ethereum because to do this, the core protocol needs to respect that particular application token. And of course, Ethereum is not going to allow some other lp token to be staked into Ethereum. So that's not a thing that is possible, but something like that is possible on Eigen layer. You can take a steeth or a steet eth like curve or some other LP token and then take that and then deposit it potentially into Eigen layer. Because now what happens is because you have steed, you're getting the Ethereum yield, because you have the liquidity provisioning, you're getting a yield from that. And then you're potentially getting a yield from eigen layer. So this is like a maximal yield cascade, like you're going through like all these three things. And again, things like this Eigen layer does not take a position because we don't want to say what is the risk profile. Steeth to eat is maybe lower risk, maybe steeth to USD CE is a different kind of risk, maybe some other thing is much more risk. Right? And this is up to each of the services building on top of Eigen layer to decide what kind of like staking collateral to accept. And so this is what would be called superfluid staking is basically the idea that you are going through like Defi or some other protocol and take kind of like a derivative token and then stake that. And the way Eigen layer is structured is all kinds of tokens in the ethereum ecosystem can be staked. And that's the vision, is kind of be a security hub like validation hub for all of the Ethereum like, ecosystem."
    },
    {
        "speaker": "A",
        "text": "So one thing that, and this is we kind of talked about this when we were talking about like, the trade off with the risks. But I wondered, just hearing all this, it makes me think about how kind of like, every little change you make could be an attack vector. And especially, like, in Defi, we've seen the more composable things are. Like, there's a lot of kind of unexpected ways for exploits to happen. So, you know, obviously Eigen layer is on testnet at the moment, but I'm wondering, what are some attack vectors you see there? And so we'll start with that, with for Eigen layer."
    },
    {
        "speaker": "B",
        "text": "I think the kind of things I am personally most worried about are basically because to the extent that we are completely permissionless, Eigen layer is completely permissionless. What could happen is somebody comes and builds a protocol on top, and it either has like, a malicious slashing condition that would be an attack vector, or that protocol itself is just badly designed. It's like a luna or something uses the Eigen layer collateral uses that, issues some other, like, crazy stablecoin, and then, like, it has some leverage loop. These are absolutely unpredictable. And I think that I would completely agree with you that just like, restaking was unpredictable. And then once it's there, it's kind of like Mev on liquid staking, that, you know, you don't see it. And then once you see it, it's like, oh, of course it is needed and it is important, and, you know, you don't know what are all the downstream consequences of that. And I think that's the same thing we feel with Eigen layer. The way we try to mitigate this is by, like I mentioned earlier, having this two tier system where one tier is more closely guarded and much lower risk. And now if you want to build something on another tier which is completely permissionless, but the first tier will be permissioned, right? In the sense of like, if there is a committee, and the committee has to approve these things, and I to convince the staker to go to the second tier, most stakers may not take that step, but if there's a very strong protocol, very interesting protocol, somebody might. And so those are the kinds of risks at least we want to kind of segregate them, rather than everything is aggregated and it's very confusing for people to deal with."
    },
    {
        "speaker": "A",
        "text": "And Constantine, what about you? What are some of the different attack vectors that you're looking out for on the liquid staking side?"
    },
    {
        "speaker": "C",
        "text": "Yeah. When we look on any like smart contract development, I think the biggest risk is smart contracts in any like application, like angular or lid, any other, you know, like, and of course you, I mean, like any DaO or entity is trying to make the biggest amount of audits, you know, like, but still, I mean, this is, I think, the most dangerous. The more complex code base, the more risk it is."
    },
    {
        "speaker": "A",
        "text": "Right. But is there anything like similar to a 51% attack that is kind of a known thing that you guys are trying to avoid?"
    },
    {
        "speaker": "C",
        "text": "No, I mean, like, it can be like just a bug, like in any defi protocol, you know, like that. Is there. I think there's a risk. The second, of course, when you, like, I think, like in also, like the question, I mean, like for three rom here is like how they work with their nothing on stake attack. For example. Yes. If someone like delegate their stake tease to some operator, they're running some software, you know, like, and they don't have stake and how. And they, for example, start to really big and they have, for example, large amount of mev or like, they can and collude. So how you work with it, our approach."
    },
    {
        "speaker": "B",
        "text": "So basically the question is, how does Eigen layer kind of incentivize the alignment between delegator and like the person who take it and they are basically the operator and the staker. And Eigen layer takes a very purist view. It's like Ethereum. We do not give any assurance of any operator. Just like Ethereum. If you're staking, if you're delegating, it's on your head. Like, you don't delegate to people that you don't trust. Right. It's the same model on, on Eigen layer, we do not give any assurances. That's why it's very different from a liquid staking protocol. A liquid staking protocol has to think through, like the delegation risk and understand whether it's real world trust, whether it's insurance, whether it is, you know, crypto economic security, some set of like, features that actually lock the node operator into correct compliance. This is not, this is out of scope of the Eigen layer design. Eigen layer allows you to specify who you are delegating to, but the trust you need to trust the person you're delegating to. Otherwise, do not delegate. And we see, because we want to keep this as close to the Ethereum protocol as possible. So the way we think about Eigen layer is just a staking extension or programmable staking extension of the Ethereum protocol. So it's very tight, very, very similar to the Ethereum protocol in that we have no delegation incentives. So any delegation incentive is either built by the free market like Lido built kind of liquid staking protocol on top of Ethereum protocols like that may basically just opt into Eigen layer and then essentially solve that problem for the market or there'll be a delegation ecosystem that emerges which solves that. But it's out of scope for the native Eigen layer itself provides no assurance on delegation."
    },
    {
        "speaker": "A",
        "text": "And then one question that I had about Lido is, and this has been something that people have talked about for a while, but there's been concerns that Lido could like effectively almost become like a governance layer for Ethereum. And currently out of all the liquid staking tokens, it does have 75% share. So are there things that Lido is doing to try to mitigate that?"
    },
    {
        "speaker": "C",
        "text": "Yeah, first of all, I didn't finish with risk and that was the second reason that I want to mention like one of the risks of liquids taking is for example, because the logic is of Ethereum is still, how to say, in progress, you know, like, and for example, you don't have some features, you can't, I mean it's all, I mean it's really difficult to make now fully like classification of the protocol. Yes, when. And so you have some proxy to upgrade this protocol. And now for example, all the protocols, not all, but almost all has an upgrade feature of these smart contracts. And they can, you know, like try to attack, you know, like in this way. So this governance token, they have this power. For example, online forum Lido research, you can read research about a feature called dual governance. And this is dual governance feature can give this proxy, I mean this is in my opinion big idea, you know, like why it's a big idea because before it, nobody had a solution for agent issue. And here Lida can gave their permission to upgrade or like to veto the upgrade of smart contracts that connected with stake of Ethereum to stake its users. And this means that if Lido try to attack Ethereum or like Ethereum users that staked Ethereum, users who really like has something on stake, you know, like they can stop this upgrade. It's not in production, it's still in research. But as I know, like guys are working on it, you know, like actively and this really like powerful, you can, you can, you know, like for example, think about 1970s when Nixon canceled gold standard. You can imagine if other USD holders can have a veto power to not make it, what they would do, would they like vote or not? Or they were scammed. And before it wasn't possible to program like regulation. And I think what blockchain give, but not a lot of DeFi protocols or other protocols use it right now they give an option to make technology regulation. And this is a big revolution when you can regulate something by writing smart contracts. And it's even better than current regulation, because in real regulation, sometimes some people make hard decision like to cancel a standard because they have like, I mean, some big reason for it. Yes. And a lot of other people, they lose value because of that. And in case of this dual governance feature, if for example somebody will implement it for USD dollar back then it would be impossible. And that's what really blockchain and make it. But the question. Yeah. Is it risky as it is?"
    },
    {
        "speaker": "A",
        "text": "Yeah. And one other thing that I think is a risk with Lido is since it follows a custodial model, you know, for the user, that could obviously result in them losing access to their ETH. So are there plans to address that?"
    },
    {
        "speaker": "C",
        "text": "As I know lad is not non custodial. And I mean it doesn't custodial solution."
    },
    {
        "speaker": "A",
        "text": "They don't retain control over their private keys."
    },
    {
        "speaker": "C",
        "text": "Yeah, no, I mean users deposit, I mean like Lite is a middleware. You know, like what is lid? Lite is a middleware. You use a smart contract system, you put eth inside, then like this is staked with some of the validator in the list. And then you can, I mean like after the Liddez to upgrade, when these robots will be available, you can burn, stake these and get your ease. In general, it's self cast dissolution."
    },
    {
        "speaker": "A",
        "text": "So the whole time the user has access to their private keys."
    },
    {
        "speaker": "C",
        "text": "Yes, yes, of course."
    },
    {
        "speaker": "A",
        "text": "Oh, I don't know why I thought it was that they are giving it to the validator."
    },
    {
        "speaker": "C",
        "text": "Lidar run by Dao. And it is a smart contract system. When you stake your is going to validators, but validators need to initiate withdrawals. You know, like to withdraw to the smart contracts where the user can withdraw, but it's fully like self custody. No, validator, validators can still use that stake with them. They can slash it on."
    },
    {
        "speaker": "A",
        "text": "Okay, interesting. For some reason I thought that there was a point in time where they did not have access to their private keys. So I guess I had a misunderstanding about that."
    },
    {
        "speaker": "C",
        "text": "No, in the beginning when Lido launched, it wasn't an option when smart contract run can hold withdrawal keys. And when Lido launched, it was a key that was created by eleven different founders of big Defi protocols, like curve Maker, like curve Maker and others. And they have a blast signature, it's like a multi sec on beacon chain, and that hold like about 10% of all eth that was there. But when withdrawals were available, these people rotated. I mean, they can't withdraw, but I mean, they signed a transaction and rotated these keys to lidar smart contracts."
    },
    {
        "speaker": "A",
        "text": "Okay, okay. So people retain their private keys and they're just interacting with the smart contract?"
    },
    {
        "speaker": "C",
        "text": "Yes."
    },
    {
        "speaker": "A",
        "text": "Okay. Okay. Thank you for clarifying that. So let's circle back to Sriram. Earlier you said that you could go into something called supra staking, if I remember correctly, or I don't remember the."
    },
    {
        "speaker": "B",
        "text": "Term, what was the terminal superfluid sticking or."
    },
    {
        "speaker": "A",
        "text": "No, no, it was earlier than that. You said."
    },
    {
        "speaker": "B",
        "text": "Oh, yeah, I was saying that usually it's a subset of ethereum security that you would get from, from Eigen layer. But, you know, there are places where you could get a superset or more than Ethereum security."
    },
    {
        "speaker": "A",
        "text": "Yeah, right."
    },
    {
        "speaker": "B",
        "text": "Okay. So if you just take decentralization, then it's even easier. For example, one of the things people say is, okay, there are 80 00, 10,000 distinct validators in Ethereum, but a small number of them control a majority. But you could just run a protocol on top of eigen layer where you only have the more decentralized committee. So if you just measure on decentralization, your protocol can actually have more decentralization. If you ask how many nodes are needed to get to 50% of your protocol, that could be a much larger number. So that's one simple way in which you could get more security than Ethereum, or more decentralization, or more effective decentralization. And this is, I think we think of this as an incentive for more decentralization to occur, because the more decentralized nodes exist, then they have this potential ability to earn these additional rewards. But it is not easy, like I think Constantine pointed out, to, like, measure which are the more decentralized nodes. And it's a subjective thing, and it's not something Eigen layer is itself planning to do, whereas other protocols may be built whose speciality is in doing it. And depending on whether there is demand for decentralization versus demand for staking. Pure economics, different people may use different things. And in fact, I think even Ethereum itself, right? So when we talk about always liquids taking a risk for Ethereum, that's because the protocol has defined some rules, which is basically, you know, how much each is staked determines how much reward you get. Like, that is the protocol rules. Everybody is just playing by the protocol rules. It's not like anybody is like modifying the protocol rules. Everybody's playing by the protocol rules. But the protocol has no internal way to detect, say, decentralization and reward it. But certain aspects of the Ethereum protocol require decentralization and censorship resistance, for example. And because the protocol is under specifying the constraints, because the protocol has not specified that it needs decentralization, and because decentralization is not objectively measurable. And that is what is leading to these unseen second order effects, like, which we do not know how to control. And one way that something like Eigen layer can play a role there is because it is adding on additional incentives that can drive different demands for different kinds of nodes. You know, both existing protocols can, existing stakers can opt to become more decentralized because there is an additional reward for being more decentralized. Whether that is geographic, whether that is stake itself comes from distinct sources. There is no common point, smart contract, risk, whatever it is that the applications define as decentralized. That is what will end up as being an objective. But also, I think there is a counter force, which is some applications may want enterprise grade validators because that's what they care about. They care about real world trust. And the emergent set of features from a system like Eigen layer is quite interesting and unpredictable. And I don't know what it would be. But the thing that I want to say is, we are letting the market value the different aspects of trust differently. Like the aspect of economics, the aspect of decentralization, the aspect of KYC, these are all different aspects of trust, and they'll be valued very differently by the party."
    },
    {
        "speaker": "A",
        "text": "Super interesting. All right, so I know Eigen layer, I think, expects to be live on Mainnet and Q three. Is that still the case?"
    },
    {
        "speaker": "B",
        "text": "That is correct."
    },
    {
        "speaker": "A",
        "text": "Okay. All right, so why don't we just talk a little bit about what it is that we're looking forward to when it comes to staking or like what developments you're watching in the staking slash restaking world for the next, I don't know, through the rest of the year."
    },
    {
        "speaker": "C",
        "text": "You know, like, first of all, I think that Mev is really important. You know, like in Pubaz. I mean, it's because for now, it is a market where people are trying to extract Mev, you know, like, and there are these relayers who give, you know, like blocks to validators and validator sciences blocks. But it is a lot of discussion around that. For example, you can look on social drama that somebody like stolen is, then they use it in Mev, you know, like, and I mean, and I think that this is one of their like pieces that should be fixed and it is a lot of work that should be done there on protocol level. And maybe even like this Mev should be burned, you know, like. And then it will make the situation much better."
    },
    {
        "speaker": "A",
        "text": "And yeah, I think Justin Drake is proposing that."
    },
    {
        "speaker": "C",
        "text": "Yeah, yeah, yeah, I think it should be discussions, you know, and yeah, yeah, I for example think that it's a great story. Why? Because in other way, if it will be like parties who make a decision around that, that can be a mess. So it should be done on a protocol level. I mean regulation, clarity, because it's a lot of questions about legal status and discussion that they want to touch. But I think it's important. And also tax treatment of taking that will make really adoption better. And I mean like what are the."
    },
    {
        "speaker": "A",
        "text": "Issues there with the tax treatment?"
    },
    {
        "speaker": "C",
        "text": "I mean like it's not clear, you know, like how to tax or for example staking rewards, should it be daily or like what type of, for example, you know, like you have different type of liquid staking tokens, you know, like that for example accurate value or wasteland. And it's also not clear clarity right now, better clarity and better regulation will make it more available for people to participate in security of Ethereum. And also more developers will build more solutions and that will be better for everyone. I mean it's also this withdrawal initiation exits by smart contracts and by users, important. I mean small features, not like innovations, but that should be done. And, but in general, I think that staking will be really, how to say for me, of course. I mean it will be like different other markets that for example Svira mentioned, like data availability maybe like it will be decentralized sequencer markets. It will be like mev markets, oracles where it will be used. But again, but I don't see, you know, like in this mechanic, a lot of innovations, you know, like it's, I mean it's not a lot of what we can do there, it's just a mechanic. But what are interesting is, and what I really like always try to mention is risk that when you like take more risk, I mean, and when it's composable, you should think about different attack vectors and what Eigen layer and other people who will use rest taking. They need to make a lot of research and make a lot of innovations, you know, like how to work with this composable risk. How, what will happen if, for example, your operator slashed 100% and you're running another network? I mean, maybe this is edge cases, but it can happen. And they're all like, you have a big network and a lot of is restaked and it's start to find a lot of value because they can, for example, slash this network and then you slash a lot of validators on Ethereum. That also can happen. So this is different composition of staking with other restaking features. Yeah, that's definitely interesting to look."
    },
    {
        "speaker": "B",
        "text": "Yeah, this is super interesting points, I think, how to understand composition of risk between Ethereum and like other, other things that could be built on top. I disagree with Constantine on the premise that, like, things like MeV and Oracle are not that innovative. I think there's like lot of crazy things that can be built on top of these things, but the base layer needs to be safe and secure. I also agree with Constantine on that, that actually the risk management on the base layer needs to be very sound. Only then you can start building other things much more safely on top. And the basic question there is how much of leverage that you can take. And what is leverage, I think, is itself not quantified. For example, right now on Ethereum, we have $35 billion of staking, and you have, you know, $500 billion of assets. Why is this okay? It's okay, I think. But it needs a theory for why it's okay, and we need to understand why it is okay. Is it over leveraged? Is it under leveraged? If it's already over leveraged, maybe we should not build something more like eigenvalue. And that's correct. And that's. That's the view we take, actually. We think it's under leveraged. You can actually use security for more things as well as more staking is coming up. We don't think, like, the 35 billion of ETH is the staking. It's going to expand massively over the coming of years. And the questions about how to divide, like, the risk across these different layers, how to make sure that there is a common view, like, if something happens bad on some layer, how does the other layers respond to it, how to make sure that nobody assumes that they have more security than they actually have. So this, I think I want to separate into two minor parts. Like one part of Eigen layer is what we call pooled security. Pool security is, let's say there's $10 billion of stake, and there is ten protocols built on top, all of them. Basically, these $10 billion is validating all of these ten protocols. So the shared security of each of these ten protocols is $10 billion. Why? Because to attack any one protocol now I need to attack the $10 billion. This is already really useful. And in fact, this is Ethereum's model today. Why do I say that on top of Ethereum? Let's say there are ten applications. Like each of the applications don't have attributable security. Uniswap doesn't get like out of the 35 billion, they don't get like 10 billion just for Uniswap. That's not how it works. It's just shared across all these different services, all these dapps, and there's no attributable security to each application built on top of Ethereum. That's the same way that Eigen layer V one works, is there's no attributable security to any one application built on top. The V two that we already like doing research on, which is trying to address issues like composability of risk, has attributable security. Like, if you have ten protocols built on top, each protocol can have a portion of the 10 billion, depending on how much they're willing to pay for it attributable to them. So when it gets slashed, they get access to a portion of the slashed funds, depending on how much premium they're willing to pay. So understanding these markets, understanding their fundamental effects on Ethereum itself, these are all things we are actually quite excited about. And also how Ethereum's staking and rewards can itself be tuned based on an understanding of the second order consequences, is something we are quite excited about."
    },
    {
        "speaker": "C",
        "text": "Yeah, one point I forgot to mention is DVT distributed validation technology. Why? Because first of all, some professional validators are already used. So they have teams, for example, because always a question who is holding the keys and to not hold the keys by one person. Because if, for example, it's a big staking company, like for example, p two p and the question is, and I am a founder of it, but I'm not holding all the keys by myself. And the question is how to hold the keys. It's either one way is to have a hardware secure model that holding these keys, but it's still a lot of attacks that can be done internally or if somebody will get access to your machine. And for that, large validators already use vouch and they also distribute the key to menu like DevOps, for example. And to sign the block, I mean, these DevOps sign it together. And so nobody has one key. For example, destroy this validator or make double sign and this DVT technology will go to the masses. The problem of staking more complex the staking, the more it's centralized. And this is a big issue of staking. For example, Polkadot staking is really complex. Why? Because you need, I mean how it's worked, how rewards work, that it's distributed to, for example top 300, like no, no operators in the same amount. And it means that the best strategy is to distribute to the last one. And because of that, the last one has the biggest apr. And for example, p two p because it has a good technical team, build a special software that every time, every PoC redistribute this stake to, you know, like last one. And that's how p two p talk. For example, 10% or even bigger market share in Polkadot. Is it bad for centralization? Yes, bad. And it's really bad. Yes. But is it bad for like some companies they try to execute or take more revenue. And the question is, first of all it should be open and people should disclose and different as validators that knows they run. And I when we will have for example sharding in Ethereum, it will be even more complex to run a node. And this is how to say for staking providers, it will be more harder to run a node. And maybe it will be examples where part of the keys will hold by professional validators like p two p blockdimer, like another. And part of the keys will be run by users. For example, you can run your note in your home. And if it just was switched off by some reason the note is still signing, because other parties are signing. And for example, somebody from p two p call you like Laura, what's happened? You need to switch off your box back and pay for electricity or what else? And then it starts working again. And I think that innovation in DVT is still. And also you should understand that you can't use one DvT solution, because if it is a bug there, the part of the network can go down. And so it should be like different players on DVT market. It's the same as with clients you have in Ethereum, you have a lot of clients. And if one drop down, you can move to another client. And also I want to mention that it is like great companies, for example in DVT like Obel, SSV and others who is working on it. And also it is like company who are building boxes for users. It's like depth node and some other. Yes, and they are great because they give a person who is not has skills to run an owner by themselves. And I think that to make it really like network decentralized, we need like more innovation here, maybe like we need more funding here to, I don't know, you put a small server in your home, put in there like in a plug, and it starts just work and. Yeah, I think that is important. Yep."
    },
    {
        "speaker": "A",
        "text": "All right. Well, this has been a really interesting discussion. There's honestly so much that we could unpack. I'm sure we'll be revisiting issues around staking and restaking in the future. But in the meantime, where can people learn more about each of you and your work?"
    },
    {
        "speaker": "B",
        "text": "Please follow us on Twitterigenlayer. There's also a discourse forum, forum eigenlayer XYZ and a discord please, you know, which is linked from our Twitter. So please go ahead and follow on these things. My personal Twitter id is so please follow that."
    },
    {
        "speaker": "C",
        "text": "Yeah, I think Twitter is the best place, you know, like where you can read and also follow and communicate. And because, you know, like I'm building, I'm building a lot of different projects and we are building, for example, decentralized PC and so on many others. Yes. And, and I think that, yeah, so like soon we will announce, you know, like our general like entity, like investment entity, cyber fund, that, you know, like, and we will try to make all the communication, you know, my communication and my focus will be there. Yeah."
    },
    {
        "speaker": "A",
        "text": "Okay, great. Well, it's been a pleasure having you both on unchained."
    },
    {
        "speaker": "C",
        "text": "Thank you."
    },
    {
        "speaker": "B",
        "text": "Thank you so much. Laura Constantine, pleasure."
    },
    {
        "speaker": "A",
        "text": "Thanks so much for joining us today. To learn more about Sriram Constantine, Eigen layer and Lido and the state of ethereum staking, check out the show notes for this episode. Unchained is produced by me, Laura Shin, with help from Anthony Yoon, Mark Murdock, Kevin Fuchs, Matt Pelchard, Zach Seward, Juan Aranovich, Sam Sribaum, Ginny Hogan, Jeff Benson, Leandra Camino, Pama, Jimdar Shashank, and CLK transcription. Thanks for listening."
    }
]